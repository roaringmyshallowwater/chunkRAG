[{"content": "ACCELERATE\n\nTHE SCIENCE OF LEAN SOFTWARE AND DEVOPS\n\n加速\n\n企业数字化转型的24项核心能力\n\n[美]妮科尔·福斯格伦(Nicole Forsgren)\n\n[英]耶斯·亭布尔(Jez Humble)著 [美]吉恩·金 (Gene Kim)\n\n孙振鹏乔皓天乔梁译\n\n理解底层逻辑，才能高效交付软件\n\n任何运营T组织的人都应该仔细研究这些技术，并学以致用。\n\n——Martin     Fowler\n\n中国工信出版集团\n\nACCELERATE\n\nTHE  SCIENCE  OF  LEAN  SOFTWARE  AND   DEVOPS\n\n|  |\n\n企业数字化转型的24项核心能力\n\n人 民 邮 电 出 版 社\n\n北  京\n\n图书在版编目 (CIP)        数据\n\n加速：企业数字化转型的24项核心能力/(美)妮\n\n科尔·福斯格伦 (Nicole          Forsgren),  (英)耶斯 · 亨布\n\n尔 (Jez       Humble),   (美)吉恩 · 金 (Gene  Kim)著;   孙\n\n振鹏，乔皓天，乔梁译.--北京：人民邮电出版社，\n\n2022.3\n\nISBN  978-7-115-58589-9\n\nI.①  加 … Ⅱ . ① 妮 … ② 耶 … ③ 吉 … ④ 孙 … ⑤ 乔\n\n… ⑥乔 … Ⅲ . ①数字技术一应用一企业管理一研究\n\nIV.①F272.7\n\n中国版本图书馆CIP数据核字(2022)第028555号\n\n内 容 提 要\n\n本书是三位 DevOps 领军人物献给企业数字化转型的力作。在持续四年的调研 过程中，本书作者致力于研究哪些能力和实践对于加速软件的开发和交付具有重要  意义。本书详述了该调研项目的成果和科学方法，系统地分析了高绩效企业和高绩  效团队的24项核心能力。本书表明，“DevOps 实践和持续交付实践有助于企业提高  绩效”不是一句空话，其背后是有数据和科学方法支撑的。作者勾勒出高绩效企业  的模样，并阐释了在进行数字化转型的过程中，什么有效、什么无效、什么无关紧要。\n\n本书适合 CEO 、CFO 、CIO 以及企业的其他管理者阅读，技术团队负责人也可 以通过本书了解如何以技术驱动业务价值。\n\n◆著\n\n译\n\n责任编辑 责任印制\n\n[美]妮科尔·福斯格伦 (Nicole Forsgren)\n\n[英]耶斯·亨布尔 (Jez Humble)\n\n[美]吉恩·金 (Gene Kim)\n\n孙振鹏  乔皓天 乔 梁\n\n谢婷婷\n\n彭志环\n\n◆人民邮电出版社出版发行    北京市丰台区成寿寺路11号 邮编  100164   电子邮件 315@ptpress.com.cn\n\n网址 https://www.ptpress.com.cn\n\n天津翔远印刷有限公司印刷\n\n◆开本：880×1230 1/32\n\n印张：7.875                   2022年3月第1版\n\n字数：169千字                 2022年3月天津第1次印刷\n\n著作权合同登记号  图字：01-2018-6942号\n\n定价：69.80元\n\n读者服务热线：(010)84084456-6009 印装质量热线：(010)81055316\n\n反盗版热线：(010)81055315\n\n广告经营许可证：京东市监广登字20170147号\n\n版 权 声 明\n\nAccelerate:The Science of Lean Sofware and DevOps ◎2018 by\n\nNicole Forsgren PhD,Jez Humble,and Gene Kim.Chapter 16 Copyright ◎ 2018 by Karen Whitley Bell and Steve Bell,Lean IT Strategies,LLC. All rights reserved.This edition arranged with C.Fletcher &Company, LLC.through Andrew Nurnberg Associates International Limited.Simplified\n\nChinese Edition Copyrights     2022 by Posts &Telecom Press.\n\n本书中文简体字版由C.Fletcher     &Company,LLC.通过 Andrew Nurnberg Associates 授权人民邮电出版社有限公司独家出版。未得书\n\n面许可，本书的任何部分和全部不得以任何形式重制。\n\n版权所有，侵权必究。\n\n赞   誉\n\n“如果想让自己的公司在这个以软件为中心的新世界中生存下 去，那么 CEO 、CFO和 CIO 们都迫切需要这本书所描述的远见。任\n\n何不读这本书的人都会被读过这本书的人所取代。”\n\n\t\tThomas A.Limoncelli 《云系统管理》合著者\n\n“‘来吧，来做这件事!’这本书提供的证据体现了研究、坚韧和 洞察力所带来的成就，它不仅证明了良好的技术和管理实践与业务绩 效之间存在相关性，还证明了两者之间存在因果关系。此外，这本书 还揭开了‘成熟度模型’的神秘面纱，并提供了一个切实可行的替代 方案。作为工作领域涉及人员、技术、流程和组织设计的独立顾问，\n\n我认为这本书简直就是天赐甘露!\n\n赞  誉 | v\n\n“正如第3章所总结的，‘你可以通过在技术组织中贯彻这些实践 来成就更好的文化’(这是我想强调的重点)。没有神秘的文化魔力， 只有24项具体的能力。这些能力不仅能带来更好的业务成果，更重 要的是能让员工更快乐、更健康、更有动力，也能打造令员工满意的\n\n工作环境。我将把这本书送给我的所有客户。”\n\n\t Dan North\n\n独立技术和组织顾问\n\n“不管是否认识到这一点，今天的大多数组织以这样或那样的形 式从事软件开发业务。然而，大多数组织被缓慢的交付周期、错误的 输出和复杂的特性所拖累，这些既增加了成本，又让用户感到沮丧。 其实大可不必如此。这本书的作者极具说服力地解释了 DevOps 是什 么、为什么要采用它，以及如何采用它，从而让你也能够有机会体验\n\n卓越的感觉。”\n\n\tKaren Martin\n\nClarity First和 The Outstanding Organization的作者\n\n“这本书不仅出色地解释了组织应该做出哪些改变来提高软件交 付绩效，还解释了为什么要这样做，从而使各级员工都能够真正了解\n\n如何提升组织的水平。”\n\n——Ryn Daniels\n\nTravis CI基础设施运维工程师、Efective  DevOps合著者\n\nvi|   加速：企业数字化转型的24项核心能力\n\n“建筑‘艺术’是当今的一种已被充分理解的工程实践。然而在 软件领域，我们仍在寻找同样能够提供可预测和可靠结果的模式和实 践。我们希望这些模式和实践能够最大限度地减少浪费并满足业务越\n\n来越高的绩效要求。\n\n“这本书提供了受研究支持、可量化且适用于真实世界的原则，\n\n以创建世界一流的高绩效 IT团队，实现惊人的业务成果。\n\n“在 DevOps 社区的两位主要思想领袖 (Kim 和 Humble)  以及\n\nForsgren博士的顶级研究的支持下，这本书非常值得推荐!”\n\n—Jonathan Fletcher\n\nHiscox 集团首席技术官\n\n“这本书没有提出任何关于敏捷、精益和 DevOps 的新概念，而 是提供了一些可能更有价值的内容。这些内容体现了作者所用的数据 收集和分析方法背后的严谨性，为他们得出的关于 IT 组织核心能力 的结论提供了论据。我很乐意将这本书放在我的书架上，让它紧挨着\n\n作者的其他伟大著作。”\n\n——Cameron Haight VMware 美洲区副总裁兼首席技术官\n\n“未来蓬勃发展的组织将是那些利用数字技术改进其产品和运营 方式的组织。这本书基于持续数年且有据可查的研究，总结出用于改\n\n进软件交付和数字产品性能的最佳指标、实践和原则。我们强烈建议\n\n赞  誉 |  vii\n\n参与数字化转型的任何人都阅读这本书，从而清楚地知道什么有效、\n\n什么无效、什么无关紧要。”\n\n—Tom Poppendieck 和 Mary Poppendieck\n\n“精益软件开发”系列丛书作者\n\n“通过写作这本书，作者为理解和应用DevOps做出了重大贡献。 这本书表明，如果理解得当，那么 DevOps不仅仅是一种时尚，也并  非‘新瓶装日酒’。作者展示了 DevOps 如何改进组织设计、软件开 发文化和系统架构。他们不仅展示，还推进了DevOps 社区的定性研\n\n究。他们的研究成果是独一无二的。”\n\n\tBaron Schwartz\n\nVividCortex创始人兼首席执行官、《高性能 MySQL》  合著者\n\n序   一\n\n几年前，我读过一份报告，里面有这样一句话：“我们现在可以 充满信心地断言， IT 组织的高绩效与强劲的业务绩效相关，并有助于 提高生产力、盈利能力和市场份额。”当读到类似这样的内容时，我 通常的反应是把它大力地扔进垃圾桶", "metadata": {}}, {"content": "，还推进了DevOps 社区的定性研\n\n究。他们的研究成果是独一无二的。”\n\n\tBaron Schwartz\n\nVividCortex创始人兼首席执行官、《高性能 MySQL》  合著者\n\n序   一\n\n几年前，我读过一份报告，里面有这样一句话：“我们现在可以 充满信心地断言， IT 组织的高绩效与强劲的业务绩效相关，并有助于 提高生产力、盈利能力和市场份额。”当读到类似这样的内容时，我 通常的反应是把它大力地扔进垃圾桶，因为这往往是伪装成科学依据 的废话。然而这次我犹豫不决，因为这可是《2014年DevOps 状态报 告》。作者之一是 Jez  Humble, 我的同事和朋友，他同样对这种废话 感到不屑。(当然我不得不承认，其实不把它扔进垃圾桶的另一个原\n\n因是，我是在iPad上阅读它的。)\n\n于是，我给Jez 发了一封电子邮件，想了解那句话背后隐藏的意 思。几个星期后，我与他和Nicole Forsgren通了电话， Nicole 耐心地 为我解释了其中的缘由。虽然我无法从专业的角度来评价其所用的分 析方法，但Nicole已经说服我相信，他们在这方面进行了充足且真实 的分析，远远超过我在学术论文中常看到的那些。我饶有兴趣地阅读\n\n了这份报告余下的内容，但越来越感到沮丧。这份报告就是他们的工\n\n序  一 | ix\n\n作成果，但其中根本没有包含Nicole在电话里向我解释的那些科学方 法。这让报告的可信度严重受损，因为几乎没有证据表明，报告的内 容是有真凭实据的。最后，我们这些了解这份报告幕后工作的人成功 地说服了Nicole 、Jez和Gene,  请他们通过写一本书来揭示他们的工 作方法。对我来说，这是漫长的等待，但我很高兴终于有了可以推荐 的真材实料，来说明 IT 交付的有效性——它可不是只基于几个分析\n\n师的零散经验得来的。\n\n这本书的内容很吸引人。作者描述了高绩效 IT 交付组织如何做 到只需约一小时就可以将提交到主干的代码部署到生产环境中运行， 而另一些组织可能需要几个月才能完成这个过程。高绩效 IT 交付组 织每天多次更新软件，而不是每隔几个月才更新一次软件，这使组织  得以利用软件探索市场、响应事件，并且比竞争对手更快地发布功能。 这种响应能力的显著提升并不会牺牲稳定性，因为这些组织发现其更 新导致失败的成本只占绩效较差的同行的一小部分，而这些错误通常 在一小时内就会得到修复。他们的证据驳斥了双模 IT 的概念，即必 须在速度和稳定性之间做出选择。相反，速度依赖于稳定性，因此良\n\n好的IT实践可以使你两者兼得。\n\n因此，正如你所料，我很高兴这本书即将面世，未来几年我也将 为推荐它出一份力。(在我的演讲分享中，我已经使用了书稿中的很 多内容。)不过，我想在此先指出一些注意事项。作者很好地解释了 为什么他们所用的调查问卷方法足以为书中的数据分析提供良好的\n\n基础。然而，他们所用的方法仍然是在捕捉主观感知，我想知道他们\n\n加速：企业数字化转型的24项核心能力\n\n的总体样本能否代表整个信息技术行业。如果有其他团队能使用不同 的方法来验证他们的推理，那么我会对他们的结果更有信心。书中已 经包含了这方面的一些内容，比如谷歌公司在团队文化方面所做的工 作提供了进一步的证据，有力地支持了本书关于Westrum 生机型组织 文化对有效软件团队的重要程度的观点。这种进一步的研究也让我确 信，我不必担心过多地为该结论背书，鉴于确认偏误”的确是一种强 大的力量(虽然我总会在其他人身上注意到它； -))。另外还要记住， 这本书侧重于 IT 交付，即从提交代码到发布至生产环境的过程，而\n\n不是整个软件开发过程。\n\n虽然还存在一些争论，但我们不应该偏离这本书的主旨。这些调 查以及对它们进行的仔细分析，为那些能够显著改善大多数 IT 组织 绩效的实践提供了最佳的采用理由。任何运营 IT 组织的人都应该仔 细研究这些技术，并学以致用。任何与 IT 团队合作的人，无论是组 织内部的团队，还是来自像我们这样的 IT 外包交付公司，都应该寻 找适当的实践机会并制订稳定的持续改进计划。这本书的三位作者已 经勾勒出高绩效IT 组织的模样， IT 从业者应该将其作为指引自己加\n\n入卓越绩效组织行列的一张路线图。\n\nMartin Fowler\n\nThoughtWorks 公司首席科学家\n\n① 确认偏误 (confirmation bias)是指人们往往会主动寻找、解释和保留与其先入为 主的观念和信念相匹配的信息。——译者注\n\n序   二\n\n我的旅程始于2011年夏天。当时我在Nordstrom 工作，公司做出 了一个战略决策，要专注于数字化并将其作为增长引擎。那时，我们 的 IT 组织已经针对成本进行了优化。我在2014年 DevOps 企业峰会 上的演讲中分享了我的“啊哈”时刻之一，即“针对速度优化”。我  一路上犯了很多错误，要是能早些阅读这本书就好了。我掉进了很多 常见的陷阱，比如试图采用自上而下的授权来采纳敏捷，认为它是一 站式解决方案，不关注度量(或者说不关注正确的度量),领导行为 没有改变，以及像对待项目一样对待转型，而不是创建一个学习型组\n\n织(从未完成)。\n\n在整个旅程中，我的关注焦点转移到了基于结果的团队结构，通 过理解价值流图来了解周期时间，限制爆破半径(从一两个团队开始， 而不是全面铺开),使用数据来驱动行动和决策，承认工作就是工作。 (没有分开的功能列表、技术债列表和运营工作列表，而是只有一个\n\n列表，因为非功能性需求也是功能，而减少技术债可以提高产品的稳\n\nxii |  加速：企业数字化转型的24项核心能力\n\n定性。)这一切都不会在一夜之间发生，而是需要进行大量的实验和\n\n调整。\n\n根据我的经验，采用这本书中的建议将使你的组织获得更高的绩 效。它适用于所有类型的软件交付，并且与方法论无关。我个人体验 过它，并且在大型机环境、传统的打包软件应用程序交付团队和产品 团队中见过多个应用这些实践的例子。它可以广泛应用，并且需要纪 律、坚持不懈、变革型领导力以及对人的关注。毕竟，人是组织的首 要资产，但是我们实际看到的组织往往没有采用这种运作方式。尽管 将书中内容付诸实践并不轻松，但我认为这绝对值得，因为你不仅会 看到更好的结果，你的团队也会更快乐。举例来说，当衡量员工净推\n\n荐值时，我们发现实践这些技术的团队在整个技术组织中得分最高。\n\n我在这趟旅程中学到的另一件事是，得到高层领导的支持是多么 重要。高层领导要用行动来支持，而不是言语。他们需要兑现创建学 习型组织的承诺。拿我和团队来举例，我十分尊重实事求是。如果我 是高层领导，而我的团队不愿与我共同承担风险，那么我将永远无法 了解到实际情况。而且，如果我不是真的好奇，而只是在团队遭遇失 败时出现，那么作为高层领导的我也是失败的。重要的是建立信任， 并且明确表示要对失败的原因进行调查(参见这本书中的 Westrum\n\n模型)。\n\n你会遇到质疑者。我听到过有人说 “DevOps是新的敏捷”“精益\n\n不适用于软件交付”“当然这只适用于移动应用团队，他们是独角\n\n序  二 | xiii\n\n兽”。在面对质疑者时，我试图用外部的例子来影响讨论的结果。我 一直在寻求导师的帮助。如果没有他们，那么保持专注是很困难的。 这本书中的信息非常有用，我强烈建议你在组织内使用它。我的大部 分职业生涯献给了零售业。在该行业中，发展变得越来越重要，而交 付软件已经成为每个组织 DNA的一部分。不要忽视这本书中提及的\n\n科学。它将帮助你加速向高绩效技术组织转型。\n\nCourtney Kissler Nordstrom 前数字商店技术副总裁\n\n核心能力速查表\n\n我们通过研究发现了24项推动软件交付绩效提升的核心能力。 这张速查表指出了它们在书中的位置。附录A 提供了详细的指南。它\n\n们的顺序不分先后。\n\n核心能力分为以下五大类。\n\n□持续交付能力\n\n□架构能力\n\n口产品与流程能力\n\n口精益管理与监控能力\n\n口文化能力\n\n持续交付能力\n\n1. 版本控制，第4章\n\n核心能力速查表     XV\n\n2. 部署自动化，第4章\n\n3. 持续集成，第4章\n\n4. 主干开发，第4章\n\n5. 测试自动化，第4章\n\n6. 测试数据管理，第4章\n\n7. 安全左移，第6章\n\n8. 持续交付，第4章\n\n架构能力\n\n9. 松耦合的架构，第5章\n\n10.授权团队，第5章\n\n产品与流程能力\n\n11.用户反馈，第8章\n\n12.价值流，第8章\n\n13.小批量工作，第8章\n\n14.团队实验，第8章\n\n精益管理与监控能力\n\n15.变更审批流程，第7章\n\nxvi  |  加速：企业数字化转型的24项核心能力\n\n16.监控", "metadata": {}}, {"content": "，第4章\n\n架构能力\n\n9. 松耦合的架构，第5章\n\n10.授权团队，第5章\n\n产品与流程能力\n\n11.用户反馈，第8章\n\n12.价值流，第8章\n\n13.小批量工作，第8章\n\n14.团队实验，第8章\n\n精益管理与监控能力\n\n15.变更审批流程，第7章\n\nxvi  |  加速：企业数字化转型的24项核心能力\n\n16.监控，第7章\n\n17.主动通知，第13章\n\n18.限制在制品数量，第7章\n\n19.可视化工作，第7章\n\n文化能力\n\n20.Westrum 组织文化，第3章\n\n21.支持学习，第10章\n\n22.团队间协作，第3章和第5章\n\n23.工作满意度，第10章\n\n24.变革型领导力，第11章\n\n前   言\n\n2013年年末，我们开始了为期4年的研究之旅，旨在研究哪些能 力和实践对于加速软件的开发和交付具有重要意义，进而对公司有价 值。这些结果可以反映在盈利能力、生产力和市场份额上。我们在有效\n\n性、效率和客户满意度等非商业产出方面，也看到了类似的强烈影响。\n\n该研究满足了目前市场上尚未被满足的需求。我们采用了通常 只在学术界使用的严格的研究方法，并将其改造成可用于产业界。我 们的目标是改善软件开发和交付的状态。通过帮助行业识别和理解 那些真正具有统计意义、推动绩效改进的能力，我们可以帮助改善整\n\n个行业-     而不是只讲讲逸事，或者一两个团队的经验。\n\n为了开展研究工作(我们仍在积极地做着这些工作),我们采用 了横切面研究方法。同样的方法也被用于医疗保健研究(例如调查 啤酒与肥胖之间的关系I) 、 工作场所研究(例如研究工作环境与心\n\n血管疾病之间的关系2)和记忆研究(例如研究记忆力开发和记忆力\n\nxviii      |  加速：企业数字化转型的24项核心能力\n\n衰退的差异3)。由于希望调查行业的真实状况，并了解推动软件和 组织绩效提升的因素，因此我们使用了严格的学术研究实验设计方 法，并在学术同行评审的期刊上发表了我们的大部分研究成果。有关\n\n研究方法的更多信息，请参阅本书的第二部分。\n\n研究\n\n我们从世界各地收集了超过23000份调查问卷。这些调查问卷 来自2000多个独立的组织，它们的规模不等，小到只有5名员工的 小型创业公司，大到拥有上万名员工的大型企业。我们收集的数据来 自创业公司和顶尖互联网公司，以及金融、医疗保健等受高度监管的 行业。我们的数据和分析既涉及从零开始的新软件项目，也涉及对遗\n\n留代码仓库的维护和开发。\n\n无论你是使用传统的瀑布方法(也称为门控、结构化或计划驱动) 并且刚刚开始技术转型工作，还是多年来一直在开展敏捷和 DevOps  实践，本书中的结论都适用于你。事实就是如此，因为软件交付是一  种持续改进的练习。我们的研究表明，年复一年，那些最好的组织一\n\n直在前进，而那些未能改善的组织则越来越落后。\n\n每个人都可以进步\n\n我们从如何衡量和改进软件交付的研究中收获了很多见解\n\n与惊喜。从数据中得出的结果告诉我们：只要员工尽职尽责，\n\n前   言  | xix\n\n我们撰写本书的目的是分享我们所学到的知识，从而帮助组织走 向卓越，培养更快乐的团队，更快地提供更好的软件，并帮助个人和 组织蓬勃发展。前言的余下部分简要地介绍了我们的研究，包括我们 是如何开始的，以及是如何开展研究工作的。要更详细地了解该研究\n\n背后的科学，请参阅本书的第二部分。\n\n过程与数据\n\n我们经常被问及开始这项研究的缘由。对于高绩效技术组织的优 势以及软件如何使组织变得更优秀，我们怀有强烈的好奇心。在2013 年年末组成这个研究团队之前，本书的每位作者都花了大量时间，在\n\n各自的路径上努力研究关于卓越技术绩效的问题。\n\nNicole Forsgren 拥有管理信息系统博士学位。在2013年之前，她 花了几年时间研究影响技术组织的因素，尤其是那些开发软件和支持 基础架构的专业人士。她撰写了数十篇关于这一主题的文章，这些文 章都经过同行评审。在获得博士学位之前，她曾担任软件工程师、硬\n\n件工程师，以及系统管理员。\n\nJez Humble 是《持续交付：发布可靠软件的系统方法》《精益企\n\nxx    |   加速：企业数字化转型的24项核心能力\n\n业：高效能组织如何规模化创新》和《DevOps实践指南》的合著者。 他大学毕业后的第一份工作是在伦敦的一家创业公司任职，当时是 2000年。2005年～2015年，他作为基础设施专家、开发人员和产品\n\n经理，在ThoughtWorks 公司工作，提供软件产品交付和咨询服务。\n\nGene Kim 自 1999 年以来一直在研究高绩效技术组织。他是 Tripwire 的创始人兼首席技术官，并且是多部图书的合著者，包括\n\n《凤凰项目： 一个IT 运维的传奇故事》和 The Visible Ops Handbook。\n\n2013年年末，三位作者开始与 Puppet 公司合作，为《2014 年 DevOps状态报告》做准备”。通过结合专业实践知识和学术严谨性， 该团队生成了一份独特的行业报告，其内容是如何以一种可预测的方  式，利用技术为员工、组织和客户提供价值。在后续的4份报告中， Nicole 、Jez和Gene 继续与 Puppet公司合作，迭代优化研究设计，并 持续加深行业对一些重要问题的理解，包括如何实现卓越的软件交 付，如何成为伟大的技术团队，以及公司如何成为高绩效组织并利用\n\n技术杠杆赢得市场。本书涵盖了2014年～2017年的研究成果。\n\n为了收集数据，我们每年都会通过电子邮件发送邀请函，并利用\n\n社交媒体发出邀请，包括 Twitter、LinkedIn 和 Facebook。我们的邀请\n\n① 值得一提的是，第一份《DevOps 状态报告》早于2014 年就已发布。2012年， Puppet公司邀请Gene Kim参与对其 DevOps研究报告的第2次迭代工作。这份报 告旨在更好地理解 DevOps 这一在当时鲜为人知的现象——它是如何被采用的， 以及各组织所看到的绩效优势。Puppet 是 DevOps 运动的主要支持者和推动者。 Gene随后邀请Jez 参与这项工作，他们一起收集并分析了来自世界各地的4000份 调查问卷，使其成为规模最大的一次同类调查。\n\n前  言 |  xxi\n\n函针对的是从事技术工作的专业人士，特别是那些熟悉软件开发、交 付方法以及DevOps 的人。我们还鼓励读者邀请身边从事软件开发和 软件交付工作的朋友和同行，以帮助我们拓宽视野。这称为“雪球抽\n\n样”,第15章将讨论为什么这是适合该研究项目的数据收集方法。\n\n我们的数据来自调查问卷。之所以使用调查问卷，是因为这是能 在短时间内从数千个组织收集大量数据的最佳方式。如果想了解为什 么可以利用调查问卷做出好的研究，以及我们采取了哪些行动来确保 收集到的数据是准确可靠的，那么可以阅读本书的第二部分，其中涵\n\n盖了本书背后的科学和研究。\n\n以下是该研究项目的概述以及几年来的进展情况。\n\n2014年：打基础，关注交付绩效与组织绩效\n\n我们第一年的研究目标是为理解组织中的软件开发和交付奠定\n\n基础。 一些关键的研究问题如下。\n\n口软件交付意味着什么,可以衡量吗?\n\n口软件交付对组织有影响吗?\n\n口组织文化重要吗?如何衡量呢?\n\n口哪些技术实践是重要的?\n\n我们对第一年所获得的许多结果感到惊喜。我们发现，软件的开 发和交付可以使用有统计学意义的方式来衡量。卓越绩效企业以一贯\n\n优秀的方法来实现“卓越”这一目标，而这些方法明显优于很多其他\n\nxxii     |   加速：企业数字化转型的24项核心能力\n\n公司所采用的方法。我们还发现吞吐量和稳定性共同发挥作用，组织 的软件交付能力对盈利能力、生产力和市场份额能产生积极影响。我 们认识到文化和技术实践很重要，并找到了衡量它们的方法。这些内\n\n容将在本书的第一部分介绍。\n\n我们还修正了原来用于衡量大部分数据的方式，简单的“是/否” 问题被更换为利克特量表式问题(答案范围从“强烈不同意”到“非   常同意”)。这一简单的变化让团队收集了更多有细微差别的数据，而   不是“非黑即白”的数据。这使得我们能够进行更详细的分析。如果   想了解我们选择使用调查问卷来进行此项研究的考虑，以及为何可以\n\n信任我们的调查数据，请参阅第14章。\n\n2015年：扩展模型和深入分析\n\n与技术转型和业务增长类似，开展研究也要进行迭代式的增量改 进，并且要对重要结果进行重新验证。根据第一年的调查结果，我们 在第二年的目标是重新验证并确认一些重要发现(例如，能够以具有 统计学意义的方式定义和衡量软件交付", "metadata": {}}, {"content": "，而   不是“非黑即白”的数据。这使得我们能够进行更详细的分析。如果   想了解我们选择使用调查问卷来进行此项研究的考虑，以及为何可以\n\n信任我们的调查数据，请参阅第14章。\n\n2015年：扩展模型和深入分析\n\n与技术转型和业务增长类似，开展研究也要进行迭代式的增量改 进，并且要对重要结果进行重新验证。根据第一年的调查结果，我们 在第二年的目标是重新验证并确认一些重要发现(例如，能够以具有 统计学意义的方式定义和衡量软件交付，以及软件交付会影响组织绩\n\n效),同时扩展模型。\n\n下面是我们在这一年研究的一些问题。\n\n□对于“软件交付会影响组织绩效”这个发现，我们可以重新验\n\n证吗?\n\n口技术实践和自动化是否会影响软件交付?\n\n前  言 | xxiii\n\n口精益管理实践是否会影响软件交付?\n\n口技术实践和精益管理实践是否会影响与员工相关的一些方面，\n\n例如与代码部署和职业倦怠相关的焦虑心理?\n\n结果再次令我们惊喜。我们验证了假设，而且确认并扩展了我们\n\n前一年所做的工作。你可以在本书的第一部分中读到相关内容。\n\n2016年：扩展技术实践并探索模糊的前沿\n\n第三年，我们再次基于模型的核心基础进行扩展，并探索其他技 术实践的重要性(例如安全性、基于主干的开发，以及测试数据管理)。 我们从与产品管理同事的交谈中得到启发，将调查进一步扩展到上游 环节，试图了解在产品管理从传统项目管理实践转向应用精益原则的 过程中，我们能否衡量这种转变所带来的影响。我们将调查范围扩展 到质量管理措施，包含缺陷、返工和安全修复等。最后，我们还提出 了一些其他方面的问题，以帮助自己了解技术实践如何影响人力资\n\n源：员工净推荐值和工作认同度有助于减少职业倦怠。\n\n我们所研究的问题列举如下。\n\n口将安全性集成到软件的开发和交付中是加速了这一过程，还是\n\n减缓了这一过程?\n\n口基于主干的开发是否有助于更好地交付软件?\n\n口在产品管理中使用精益方法，是软件开发和交付的一个重要方\n\n面吗?\n\nxxiv  |  加速：企业数字化转型的24项核心能力\n\n口良好的技术实践是否有助于增强员工对公司的忠诚度?\n\n2017年：研究架构，探索领导者的角色，并衡量非营利组织\n\n的成功\n\n第四年，我们开始研究系统如何构建，以及架构对团队和组织交 付软件和价值的能力的影响。我们还将研究范围扩展到包含但不限于 盈利能力、生产力和市场份额等价值衡量指标，使分析结果也能面向 非营利组织。这一年的研究还探索了领导者的角色，借此衡量变革型\n\n领导力对组织的作用。\n\n我们在第四年研究的问题列举如下。\n\n口是什么架构实践提高了软件交付绩效?\n\n口变革型领导力对软件交付有何影响?\n\n口软件交付是否影响非营利结果?\n\n结论\n\n我们希望，作为技术专家和技术领导者的你在阅读本书时会发 现，要使你的组织变得更好，还是要从软件交付开始。正是通过提高 软件交付能力，组织才能更快地交付功能，在需要时发挥关键作用， 适应合规性和安全方面的变化，利用快速反馈吸引新客户，并让现有\n\n客户感到满意。\n\n前   言    XXV\n\n在接下来的章节中，我们将提炼出驱动软件交付绩效的核心能力 (还会定义“软件交付绩效”),并简要介绍每种能力涉及的关键点。 第一部分介绍我们的研究发现，第二部分讨论这些成果背后的科学和 研究方法。最后，第三部分提供一个案例研究，以说明当组织为了提\n\n高绩效而实现这些能力时，可能会发生什么情况。\n\n电子书\n\n扫描如下二维码，即可购买本书中文版电子书。\n\n目录 CONTENTS\n\n第一部分 研究发现  /1\n\n第 1 章 加 速 /3\n\n1.1 关注能力，而不是成熟度 /6\n\n1.2 基于实证的变革，聚焦于核心能力 /8\n\n1.3 采用DevOps的价值/9\n\n第2章 度量绩效 /11\n\n2.1 以往尝试度量绩效时存在的问题 /12\n\n2.2 度量软件交付绩效 /14\n\n2.3   软件交付绩效对组织绩效的影响  / 22\n\n2.4   驱动改变 /25\n\n第3章 度量和改变文化 /27\n\n3.1 建模文化 /27\n\n3.2 度量文化 /30\n\n3.3  Westrum组织文化预测了什么 /33\n\nxxviii      |  加速：企业数字化转型的24项核心能力\n\n3.4 Westrum组织文化带给技术组织的结果 /34\n\n3.5 如何改变文化/36\n\n第 4 章 技术实践 /38\n\n4.1 什么是持续交付 /38\n\n4.2 持续交付的影响 /41\n\n4.3 持续交付对质量的影响 /46\n\n4.4 持续交付实践：什么行，什么不行/49\n\n4.4.1 版本控制 /49\n\n4.4.2 测试自动化 /49\n\n4.4.3  测试数据管理  /51\n\n4.4.4  主干开发 /51\n\n4.4.5  安全左移 152\n\n4.5   采用持续交付 /5 2\n\n第 5 章  架 构  /54\n\n5.1 系统类型与软件交付绩效  /55\n\n5.2 关注可部署性和可测试性/56\n\n5.3  松耦合架构提供了伸缩能力 /59\n\n5.4  允许团队选择自己的工具 /60\n\n5.5    架构师应该关注结果，而不是工具或技术 /62\n\n第 6 章  将信息安全集成到交付生命周期中/63\n\n6.1 安全左移 /64\n\n6.2 坚固运动 /66\n\n第 7 章  软 件 开 发 的 管 理 实 践 / 6 8\n\n7.1 精益管理实践 /69\n\n目   录 |  xxix\n\n7.2 实现轻量级的变更管理流程/71\n\n7.3 结论 /74\n\n第 8 章  产 品 管 理  /7 5\n\n8.1  精益产品管理实践  176\n\n8.2  团队实验 /78\n\n8.3 有效的产品管理驱动绩效 179\n\n第 9 章 让工作可持续  /81\n\n9.1 部署之痛 /81\n\n9.2 倦怠 /85\n\n9.2.1  导致倦怠的常见原因  /87\n\n9.2.2 如何缓解或战胜倦怠 /88\n\n第 1 0 章  员工满意度和身份认同感 /92\n\n10.1 员工忠诚度 /93\n\n10.2  改变组织文化和身份认同感 195\n\n10.3 工作满意度如何影响组织绩效 198\n\n10.4 关于技术领域的多样性/100\n\n10.4.1 DevOps运动中的女性/100\n\n10.4.2 DevOps运动中的少数族裔 /102\n\n10.4.3 关于多样性", "metadata": {}}, {"content": "，其他研究能告诉我们什么/103\n\n10.4.4 我们能做什么 /104\n\n第11章 领导者和管理者 /10 5\n\n11.1 变革型领导力 /105\n\n11.2 管理者的角色 /111\n\n11.3 改善文化和支持团队的小技巧 /113\n\nxxx     |  加速：企业数字化转型的24项核心能力\n\n第二部分 调研方法 /117\n\n第12章 本书背后的科学 /119\n\n12.1 初级研究和次级研究 /119\n\n12.2   定性研究和定量研究 /120\n\n12.3 分析类型 /121\n\n12.3.1 描述性分析 /122\n\n12.3.2 探索性分析 /123\n\n12.3.3 推理预测性分析 /125\n\n12.3.4  预测性分析、因果分析和机械性分析 /127\n\n12.3.5  分类分析  /127\n\n12.4 本书背后的研究工作 /129\n\n第13章 心理测量学概述  /130\n\n第14章 为什么使用调查问卷  /141\n\n14.1 调查问卷有助于快速收集并分析数据 /142\n\n14.2 用系统数据进行全栈度量有困难 /144\n\n14.3 用系统数据完成全部度量有困难 /145\n\n14.4 调查问卷数据是可信的 /146\n\n14.5 有些方面只能通过调查问卷才能度量 /149\n\n第15章 研究项目所用的数据  /152\n\n第三部分 转型 /159\n\n第16章 高效地领导和管理 /161\n\n16.1 实践中的高效能管理框架 /162\n\n16.2 改变领导力实践、管理实践和团队实践 /173\n\n目  录 | xxxi\n\n第17章 总结 /180\n\n附录A   驱动改进的能力  /182\n\n附录 B  统计数据 /190\n\n附录C  本书所用的统计方法 /202\n\n参考文献 /209\n\n致谢 /216\n\n第一部分 研究发现\n\n在准备《DevOps 状态报告》的过程中，借助可靠的数据收集和 统计分析技术(第二部分将详细讨论),我们得以获得重要的发现， 其中某些发现令人惊讶。我们已经能够度量和量化软件交付绩效及其\n\n对组织绩效的影响，以及促成这些结果的各种能力。\n\n这些能力分为技术、过程和文化等不同类别。我们衡量了技术实 践对组织文化的影响，以及组织文化对软件交付和组织绩效的影响。 对于如架构和产品管理一样迥然不同的各种能力，我们研究了它们在\n\n缓解职业倦怠和部署之痛等重要方面的贡献。\n\n本书的第一部分将介绍我们的研究成果。\n\n第1章\n\n加   速\n\n“业务一切正常”已不足以保持竞争力了。从金融业和银行业到 零售业和电信业，甚至政府部门，所有行业和机构都不愿再使用交付 周期较长的大型项目来提供新产品和服务。相反，它们希望使用小型 团队，在短时间内交付，并衡量用户的反馈，以构建既能让客户满意 又能快速为其组织创造价值的产品和服务。即使面对高风险和不确定 性，卓越绩效企业也在不断努力，试图在工作中取得更好的成绩，没\n\n有什么可以阻挡它们前进的道路。\n\n为了保持竞争力并在市场中脱颖而出，组织必须加速开展以下\n\n工作。\n\n口提供产品和服务，以满足客户的需求。\n\n口与市场接触，以发现和了解客户需求。\n\n口预期影响其系统的合规性和监管变化。\n\n口应对安全威胁或经济变化等潜在风险。\n\n4   |  加速：企业数字化转型的24项核心能力\n\n而这类加速的核心是软件，对于任何垂直行业中的组织来说都是 如此。银行不再通过在金库中持有金条来实现价值，而是通过更快、 更安全地交易，以及通过发现新渠道和产品来吸引客户。零售商通过 提供卓越的产品和服务来赢得和留住客户，其服务包括快速结账体 验、在结账时推荐商品，或无缝的线上/线下购物体验    这些都是 通过技术实现的。政府机构认为，对技术的利用是高效服务公众的关\n\n键，同时可以节省纳税人的钱。\n\n软件和技术是组织为客户和利益相关者创造价值的关键差异因 素。本书所展现的研究已经确认了这一点，并且这一点也受到了来自 其他研究的支持。例如，波士顿大学法学院讲师James Bessen在最近 的一项研究中发现，对技术的战略性使用比并购和创业更能解释收入 和生产力的提升。此外， Andrew McAfee和Erik Brynjolfsson也发现\n\n了技术与盈利能力之间的联系。\n\n软件正在改变各种组织，并使之加速发展。本书将讨论的实践和 能力来自所谓的 DevOps 运动，它们正在改变各行各业。DevOps 诞 生于少数面临着一个棘手问题的组织，即“如何大规模构建安全、灵 活、快速发展的分布式系统”。为了保持竞争力，组织必须学习如何 解决这类问题。我们已经看到，通过采用本书所述的方法，那些历史 悠久且用着数十年前的技术的大型企业也可以获得加速交付和降低\n\n成本等显著优势。\n\n尽管许多组织在技术转型方面取得了巨大的成功(突出的例子包\n\n第1章 加速 |  5\n\n括 Netflix 、亚马逊、谷歌和 Facebook  等互联网级的技术巨头，以及 Capital One 和 Target 等传统大型组织，甚至还包括美国联邦政府的技 术转型服务组织和数字服务组织),但在更广泛的行业和个体组织中 仍有很多工作要做。Forrester 最近的一份报告发现，31%的行业仍旧 没有采用那些加速技术转型所必需的H实践和原则，例如持续集成、  持续交付、精益实践和协作文化 (DevOps  运动所倡导的能力)。然而， 我们也知道技术转型在当今组织中势在必行： Gartner在2017年的一 项研究发现，47%的首席执行官面临来自董事会关于数字化转型要求\n\n的压力。\n\n在组织内部，技术转型之旅处于不同的阶段。多份报告表明，组 织内部的转型还有许多工作要做，而且比我们当前认为的要多。  Forrester  的另一份报告称，DevOps  正在加速技术发展，但组织往往 高估了自身的进步速度9。该报告还指出，与从事基层工作的人相比，\n\n高管尤其容易高估组织的进步速度。\n\n高管和基层员工对 DevOps 成熟度的估计不一致，这突出说明了 领导者经常忽略的两个考虑因素。首先，如果我们假设，因为基层员 工接触更多的实际工作，所以对DevOps 成熟度或能力的估计更准确， 那么在组织内部，价值交付和增长的潜力应该远远大于管理层目前所 意识到的。其次，这种不一致恰恰清楚地表明，需要准确地衡量 DevOps 能力，并将结果传达给领导者，这样他们就可以使用这些结\n\n果来做决策，并准确传达其改善组织技术状况的策略。\n\n6   |  加速：企业数字化转型的24项核心能力\n\n1.1 关注能力，而不是成熟度\n\n技术组织需要快速且可靠地交付软件，以赢得市场。对于许多公 司而言，这需要极大地改变软件交付方式。成功改变的关键是正确地\n\n衡量和理解事物——要重点关注能力，而不是成熟度。\n\n虽然成熟度模型在业内非常受欢迎，但我们要强调的是，成熟 度模型是不适用于组织的，或者说组织不应该有这种思考方式。相 反，能力模型对于希望加速软件交付的组织至关重要，有以下四个 理由。\n\n第一，成熟度模型专注于帮助组织“到达”成熟状态，然后宣布 自己大功告成，而技术转型应遵循持续改进范式。与成熟度模型相反， 能力模型专注于帮助组织不断改进，并意识到技术和商业环境会不断 变化。那些最具创新性的公司和表现最好的组织始终致力于变得更 好，从不认为自己在改进或转型的过程中已经“成熟”或“完成”——\n\n我们在研究中看到了这一点。\n\n第二，成熟度模型通常是线性的，其中为每组团队和组织规定了 一组类似的技术、工具或功能。成熟度模型假设所有团队和组织的“1 级”和“2级”都在同一水平线上，但从事技术工作的人都知道情况 并非如此。相比之下，能力模型是多维和动态的，它允许组织的不同 部分采取自定义的方法来改进，并根据其当前的情况以及短期目标和\n\n长期目标，专注于提升能够给予其最大利益的能力。团队既有自己要\n\n第1章加速  |  7\n\n面对的情况，也有自己的系统、目标和约束。因此，我们应该把重点\n\n放在基于这些方面的加速转型上。\n\n第三，能力模型关注的是关键结果，以及能力(也就是杠杆)如 何推动这些结果的改进。也就是说，它是基于结果的。这为技术领导 层提供了明确的方向和战略来实现总体目标(侧重于改善关键结果的 能力)。它还使团队领导者和个人贡献者能够设定与团队在当前时间 段关注的能力相关的改进目标。大多数成熟度模型只衡量组织中的技 术熟练程度或工具和基础设施", "metadata": {}}, {"content": "，也有自己的系统、目标和约束。因此，我们应该把重点\n\n放在基于这些方面的加速转型上。\n\n第三，能力模型关注的是关键结果，以及能力(也就是杠杆)如 何推动这些结果的改进。也就是说，它是基于结果的。这为技术领导 层提供了明确的方向和战略来实现总体目标(侧重于改善关键结果的 能力)。它还使团队领导者和个人贡献者能够设定与团队在当前时间 段关注的能力相关的改进目标。大多数成熟度模型只衡量组织中的技 术熟练程度或工具和基础设施，而不是将其与结果联系起来。这些最 终会成为虚荣指标：虽然衡量起来相对容易，但这些指标并没有体现\n\n它们对业务的影响。\n\n第四，成熟度模型定义了要实现的技术、流程和组织能力的静态 水平。它没有考虑到技术和商业环境不断变化的本质。我们自己的研 究和数据已经证实，行业正在发生变化：今年好的甚至“高绩效”的 做法，到了明年就不够好了。相比之下，能力模型考虑到了动态变 化的环境，并允许团队和组织专注于开发保持竞争力所需的技能和\n\n能力。\n\n通过关注能力范式，组织可以不断改进。通过专注于正确的能力， 组织可以推动其结果的改进，使其能够以更快的速度和更高的稳定性  开发和交付软件。事实上，我们看到的最出色的组织正是这样做的。\n\n它们年复一年地连续创收，并且永远不会满足于昨天的成就。\n\n8  |  加速：企业数字化转型的24项核心能力\n\n1.2  基于实证的变革，聚焦于核心能力\n\n无论是在能力模型还是在成熟度模型中，对于关注哪些能力，都 存在分歧。产品供应商通常倾向于与其产品一致的能力。产品顾问倾 向于与他们的背景、服务和他们自己开发的评估工具相匹配的能力。 我们已经看到有的组织试图设计自己的评估模型，它们或是选择那些 与内部最佳团队技能集合相匹配的解决方案，或是因为组织中需要改\n\n进的领域数量过于庞大而陷于分析瘫痪。\n\n我们需要一个更具指导性且基于实证的解决方案。本书中讨论的\n\n方法就描述了这样的解决方案。\n\n我们的研究深入了解了如何让软件交付绩效和组织绩效在盈利 能力、生产力和市场份额上有所反映。事实上，我们的研究表明，以\n\n下这些经常被提到的因素都无法预测绩效：\n\n口应用程序的存续时间和所用的技术(例如，是大型机的“记录\n\n型系统”,还是新开发的“交互式系统”);\n\n口部署任务是由运维团队执行，还是由开发团队执行；\n\n口是否有变更审批委员会。\n\n能真正提高软件交付绩效和组织绩效的因素，就是让那些高绩效 公司和最具创新性的公司取得成功的因素。我们的研究已经确定了\n\n24项核心能力，这些能力可以提高软件交付绩效，进而提高组织绩\n\n第 1 章 加 速  |  9\n\n效。它们易于定义、衡量和改进°。本书将帮助你开始定义和衡量这 些能力。我们还将为你提供一些有助于提高这些能力的绝佳资源，让\n\n你可以加速自己的技术转型之旅。\n\n1.3  采用 DevOps 的价值\n\n你可能会问：我们如何知道这些能力才是技术和组织绩效的驱动\n\n因素?我们为什么如此自信?\n\n我们的研究结果清楚地表明，采用 DevOps的价值甚至比我们原先\n\n想象的还要大，高绩效企业和低绩效企业之间的差距还在继续变大。\n\n第2章将讨论如何度量软件交付绩效，并详细介绍我们所用的研 究方法。总而言之，我们在2017年发现，与低绩效企业相比，卓越\n\n绩效企业具有如下优势：\n\n口代码部署频率高46倍；\n\n口从提交代码到部署代码的速度快440倍；\n\n口平均恢复时间 (MTTR)   只有低绩效企业的1/170;\n\n口变更失败率只有低绩效企业的1/5。\n\n与2016年的结果相比，高绩效企业和低绩效企业之间在节奏方\n\n面(部署频率和变更前置时间)的差距缩小了，而在稳定性方面(平\n\n① 附录A详细地列出了这24项核心能力。\n\n10  |  加速：企业数字化转型的24项核心能力\n\n均恢复时间和变更失败率)的差距加大了。我们推测这是由于低绩效  团队虽然也在努力，想加快节奏，但并没有在内建质量方面投入足够  的资源。结果导致更高的部署失败率，并需要更长的时间来恢复服务。 而卓越绩效企业明白，它们不必以稳定性为代价来换取交付速度，反\n\n之亦然。这是因为，通过内建质量，鱼和熊掌可以兼得。\n\n你可能想知道：高绩效团队如何实现如此出色的软件交付绩效? 他们是通过“转动正确的杠杆”来实现这一点的，即通过提高正确的\n\n能力。\n\n通过为期四年的研究，我们总结出了提升软件交付绩效和组织绩 效的核心能力，并且我们发现，它们适用于所有类型的组织。我们的 研究调查了各种各样的行业以及各种规模的组织，采用了世界各地的 遗留技术栈和新技术栈。因此，本书中的发现同样适用于你的组织及\n\n团队。\n\n第2章\n\n度量绩效\n\n有很多框架和方法论试图改进我们构建软件产品和服务的方式。 我们想以一种科学的方式找出哪些是可行的，哪些是不可行的。本章 介绍了为实现这一目标所使用的框架与方法，以及本书余下章节的关 键结果。我们希望你在读完本章后能够足够了解我们所用的方法，并\n\n对本书余下章节所讲的研究成果有充分的信心”。\n\n在软件领域度量绩效是困难的， 一个原因是它与制造业不同，其 “库存”是不可见的。而且，软件领域拆分工作的方式相对随意，设 计活动与交付活动同时进行，特别是在采用敏捷开发范式的时候。的 确，我们期望基于所学知识改变或改善设计，而这样的知识是在实践 中获得的。因此，第一步必须定义一个能有效且可靠地度量软件交付\n\n绩效的体系。\n\n① 要更详细地了解我们的方法，请阅读本书的第二部分。\n\n12  |  加速：企业数字化转型的24项核心能力\n\n2.1 以往尝试度量绩效时存在的问题\n\n已经有很多方法尝试度量软件团队的绩效。这些度量方法大部分 关注生产力。它们通常有两个缺点：首先，它们关注的是产出而不是 结果；其次，它们关注个人或局部指标，而不是团队或全局指标。我\n\n们来看3个例子：代码行数、速度和利用率。\n\n在软件领域，根据代码行数来度量生产力有很长的历史。有些公 司甚至要求开发人员记录每周提交的代码行数”。然而事实上，相比 用1000行代码解决问题，我们更希望只用10行代码。奖励编写更多 代码的开发人员会导致软件膨胀，以及更高的维护成本和变更成本。 理想情况下，我们应该奖励用最少量的代码解决业务问题的开发人 员。如果可以在不编写代码的情况下解决问题，甚至通过删除代码来 解决问题(可能通过业务流程变更),那就更好了。但是，最小化代 码行数也不是一个理想的度量指标。在极端情况下，它也有缺点：用 一行代码完成一项任务，但其他人都无法理解这行代码，这比编写易\n\n于理解和维护的多行代码更不可取。\n\n随着敏捷软件开发的出现，我们有了一种度量生产力的新方法： 速度。在敏捷方法的许多流派中，需求被分解为“用户故事”。然后， 由开发人员对这些用户故事进行估算，并分配一个“点数”,用于表\n\n示预期完成它们所需要的相对工作量。在一次迭代结束时，记录客户\n\n① 推荐阅读 “Negative  2000  Lines  Of Code”, 这是一篇不错的文章，其中描述了 Apple Lisa 团队如何发现代码行数对于度量生产力毫无意义。\n\n第2章 度量绩效  |  13\n\n签字验收的总点数，这就是团队的速度。速度旨在用作容量规划工具。 举例来说，它可以用于推断团队完成计划和估算的所有工作需要多长  时间。但是， 一些管理人员还将其用作度量团队生产力的方法，甚至\n\n是在团队间进行比较的方法。\n\n使用速度作为生产力度量指标有几个缺陷。首先，速度是一种依 赖于具体团队的相对度量指标，而不是绝对度量指标。每个团队通常 面对截然不同的情况，这使得他们的速度没有可比性。其次，当速度 被用作度量生产力的指标时，团队不可避免地要努力提高速度。有些 团队会夸大他们的估计，并以牺牲与其他团队的合作为代价，专注于 完成尽可能多的用户故事。(这是因为帮助他人可能会降低自己的速 度，并提高其他团队的速度，这会让自己的速度看起来很糟糕。)这\n\n不仅会破坏速度本身的实用性，还会阻碍团队之间的协作。\n\n最后，许多组织采用利用率 (utilization)   来间接地度量生产力。 这种方法的问题在于，利用率达到某一水平就好，不应过分追求高利 用率。 一旦利用率超过一定水平，就没有备用容量(或称“弹性”)  来吸收计划外的工作、计划的变更或改进工作。这导致完成工作的前 置时间更长。数学中的排队理论告诉我们，当利用率接近100%时， 前置时间接近无穷大。换句话说， 一旦达到极高的利用率，无论完成 什么工作，团队都需要花费指数级的时间。由于前置时间(用于度量 工作完成速度)是一种生产力指标，不会被其他指标的弊端所影响， 因此我们必须管理利用率", "metadata": {}}, {"content": "，利用率达到某一水平就好，不应过分追求高利 用率。 一旦利用率超过一定水平，就没有备用容量(或称“弹性”)  来吸收计划外的工作、计划的变更或改进工作。这导致完成工作的前 置时间更长。数学中的排队理论告诉我们，当利用率接近100%时， 前置时间接近无穷大。换句话说， 一旦达到极高的利用率，无论完成 什么工作，团队都需要花费指数级的时间。由于前置时间(用于度量 工作完成速度)是一种生产力指标，不会被其他指标的弊端所影响， 因此我们必须管理利用率，用一种经济上最优的方式平衡它与前置时\n\n间之间的关系。\n\n14  |  加速：企业数字化转型的24项核心能力\n\n2.2 度量软件交付绩效\n\n理想的绩效度量指标应该有两个关键特征。首先，它应该关注全 局结果，以确保各个团队不会互相较劲。典型的例子是根据开发人员 的吞吐量和运维人员负责的稳定性分别给予奖励。这是导致“混乱之 墙”的一个关键因素。在这面“混乱之墙”的两侧，开发人员将低质 量的代码抛给了运维人员，而运维人员制订出了非常痛苦的变更管理 流程，以此作为抵制变更的一种手段。其次，度量应该关注结果，而 不是产出：不应该鼓励人们投入更多的时间使自己忙碌，这实际上并没\n\n有帮助实现组织目标。\n\n在寻找符合上述标准的软件交付绩效度量指标时，我们选择了4 个指标：前置时间、部署频率、平均恢复时间以及变更失败率，如图\n\n2-1 所示。本节将讨论选择这些度量指标的原因。\n\n图2-1 软件交付绩效度量指标\n\n作为度量指标，前置时间的缩短是精益理论的关键要素。前置时 间是指从客户提出请求到满足该请求所需的时间。不过在产品开发\n\n中，我们的目标是以超出客户预期的方式满足多个客户，因此前置时\n\n第2章 度量绩效  |  15\n\n间包括两部分： 一是设计和验证产品或功能所需的时间，二是向客户 交付功能的时间。在前置时间的设计部分，通常不清楚在什么时间点 算启动，而且通常它存在较高的可变性。出于这个原因， Donald Reinertsen 将此部分时间称为“模糊前置”。但是，前置时间的交付部 分(开发、测试和交付工作所需的时间)更容易度量，并且具有较低\n\n的可变性。表2-10列出了这两个部分之间的区别。\n\n表2-1 对比前置时间的两个部分\n\n产品设计与开发                  产品交付(构建、测试、部署)\n\n应用假说驱动的交付、现代UX,以及设\n\n计思维来创建新产品和服务，解决客户的 问题\n\n功能的设计与实现可能需要做以前没有做 过的事情\n\n估算通常具有较大的不确定性\n\n结果的可变性较高\n\n通过标准化工作、降低可变性和缩减批量 大小，令软件从开发环境向生产环境的流 动更快，且发布更稳定\n\n尽可能快地持续执行集成、测试和部署\n\n周期时间应该是众所周知且可预期的 结果的可变性较低\n\n产品交付前置时间越短越好，因为我们能够更快地获得反馈并进 行校正。当出现缺陷或发生故障时，较短的前置时间也很重要，因为 我们需要提供快速且可信的修复。在研究过程中，我们度量了产品交 付前置时间，即从提交代码到其在生产环境中成功运行所需的时间，\n\n并要求受访者选择以下选项之一：\n\n口少于1小时\n\n口少于1天\n\n口1天到1周\n\n口1周到1个月\n\n口1个月到6个月\n\n16   |  加速：企业数字化转型的24项核心能力\n\n口6个月以上\n\n我们起初认为第2个重要的度量指标是批次大小。小批量生产是  精益范式的一个核心要素。事实上，它是丰田生产系统成功的关键之  一。小批量生产方式可缩短周期时间、减少工作流的变化、加速反馈、 降低风险、节省开支、提高效率、增加动力和紧迫性、减少成本和加  快进度。但在软件领域，由于“库存”是不可见的，批次大小很难定 义和度量，并且在不同的环境中也比较难以沟通，因此我们将部署频  率确定为批次大小的代理指标，因为它易于度量，并且可变性通常  较低”。“部署”是指将软件部署到生产环境中或发布到应用商店中。 除非组织已实现单件流，即每次提交代码都可以发布到生产环境中 (这种做法称为持续部署),否则一次发布(变更被部署)通常包含多 次提交的代码。我们询问受访者，他们的组织部署其开发或维护的主\n\n要服务或应用程序的频率如何，并提供了以下选项：\n\n口按需发布(每天部署多次)\n\n口每小时一次到每天一次\n\n口每天一次到每周一次\n\n口每周一次到每月一次\n\n□每月一次到每6个月一次\n\n口超过6个月一次\n\n① 严格地说，部署频率是批次大小的倒数。部署频率越高，批次大小就越小。若要 更详细地了解如何在信息技术服务管理背景下度量批次大小，请参阅 “DevOps: Profiles in ITSM Performance and Contributing Factors”7]。\n\n第2章 度量绩效  |  17\n\n前置时间和部署频率都是度量软件交付绩效节奏的指标。但是， 我们想调查绩效提升的团队是否是以牺牲其所构建系统的稳定性为 代价的。在传统认知上，稳定性是根据故障发生的间隔时间来度量的。 然而，现代软件产品和服务包含快速变化的复杂系统，故障是不可避 免的，因此关键问题变成了“服务的恢复速度有多快”。我们询问受 访者，当服务遭遇事故时(例如计划外停机、服务受损),恢复主要\n\n的服务通常需要多长时间，其选项与前置时间的选项相同。\n\n最后，对系统进行变更时， 一个关键指标是生产变更(例如软件 版本和基础架构配置变更)失败的百分比。在精益理论上下文中，它 等同于产品交付流程的完成百分比和精确度，并且是关键的质量指 标。我们询问受访者，因其主要服务或系统的变更而导致服务降级或 后续需要修复的百分比是多少(例如，导致服务受损或中断，需要热\n\n修补、回滚、向前修复或打补丁)。\n\n为了分析调查问卷中的软件交付绩效，我们使用了一种被称为 聚类分析的技术。聚类分析是统计数据分析中的一种基础技术，它试 图对问卷反馈进行分组，以使同一组中的反馈相似度更高，而与其他 组中的反馈相似度更低。每个度量指标都放在一个单独的维度上，聚 类算法尝试最小化所有组内成员之间的距离，并最大化组间的差异。 这种技术并不需要真正了解问卷反馈的语义。换句话说，对度量项来\n\n说，它不知道哪些反馈算“好”,哪些反馈算“不好”①。这种通过数\n\n① 若要进一步了解聚类分析，请参阅附录C。\n\n18 |加速：企业数字化转型的24项核心能力\n\n据驱动的方法对数据进行分类，而不帶任何“好”或“坏”的偏见。 这使我们有机会观察行业趋势，而不会先入为主地偏向某一种结果。 使用聚类分析还可以让我们将在行业中看到的软件交付绩效分别归\n\n类：哪些是高绩效企业，哪些是低绩效企业，它们各自有什么特点?\n\n我们在研究项目的4年中都应用了聚类分析，并且发现，每年 行业中的软件交付绩效类別都有很大差异。我们还发现，软件交付 绩效的4 个度量指标都是良好的分类器，我们在分析过程中确定的 组(高绩效、中等绩效、低绩效)在这4 个度量维度上的表现都有 显著差异。表2-2和表2-3分别展示了2016年和2017年的软件交付\n\n绩效详情。\n\n表2-2 软件交付绩效详情(2016年)\n\n2016年            高绩效              中等绩效              低绩效\n\n部署频率 按需(每天多次) 每周一次到每月一次 每月一次到每6个月 一次 变更前置时间 少于1小时 1周到1个月 1个月到6个月 平均恢复时间 少于1小时 少于1天 少于1天* 变更失败率 0%～15% 31%～45% 16%～30%\n\n低绩效企业的平均值较差(在统计显著性水平上),但其中位数与中等绩效企业的相同。\n\n表2-3 软件交付绩效详情(2017年)\n\n2017年 高绩效 中等绩效 低绩效 部署频率 按需(每天多次) 每周一次到每月一次 每周一次到每月一次 变更前置时间 少于1小时 1周到1个月 1周到1个月 平均恢复时间 少于1小时 少于1天 1天到1周 变更失败率 0%～15% 0%～15% 31%～45%\n\n低绩效企业的平均值较差(在统计显著性水平上),但其中位数与中等绩效企业的相同。\n\n第2章 度量绩效  |  19\n\n令人惊讶的是，这些结果表明", "metadata": {}}, {"content": "，这些结果表明，在提高绩效与实现更高水平的稳 定性和质量之间不存在折中。相反，高绩效企业在所有这些度量维度 上都做得更好。这正是敏捷和精益运动预测的结果，但软件行业中的 许多教条仍然依赖下面这个错误的假设：想要快速交付，就意味着必\n\n须与其他绩效目标进行折中，而不是彼此促进和增强”。\n\n此外，在过去几年中，我们发现高绩效企业正在逐渐与落后的 企业拉开距离。持续改进的 DevOps 口号既令人兴奋又真实，它推动 一些公司做到最好，同时甩掉那些没有改进的组织。显而易见的是，\n\n3年前最先进的技术放在今天的商业环境中已经不够好了。\n\n与2016年相比，2017年的高绩效企业保持或改善了表现，始终 如一且最大限度地加快节奏和提高稳定性。低绩效企业在2014年~ 2016年保持了相同的吞吐量水平，直到2017年才刚刚开始增长。这 很可能是因为它们意识到行业中的其他组织正在将它们甩在后面。我 们在2017年看到，绩效欠佳的企业在稳定性方面失去了一些阵地， 这可能是因为它们加快了节奏，但是缺乏提高整体绩效所需的行为准 则。高绩效企业仍然可以做到在1小时内恢复服务。图2-2和图2-3\n\n展示了这些趋势。\n\n① 推荐阅读 “The Flaw at the Heart of Bimodal IT” 这篇文章，其中分析了ITSM双模 方法的问题。该方法就基于这个错误的假设。\n\n20  |  加速：企业数字化转型的24项核心能力\n\n部署频率 (单位：次)\n\n变更前置时间(单位：分钟)\n\n160000\n\n120000\n\n80000\n\n2014年         2015年          2016年          2017年\n\n—高绩效企业     一  低绩效企业\n\n图2-2 年度趋势(节奏)\n\n第2章 度量绩效  |  21\n\n平均恢复时间 (单位：小时)\n\n变更失败率(单位：%)\n\n—高绩效企业           —低绩效企业\n\n图2-3 年度趋势(稳定性)\n\n22  」 加速：企业数字化转型的24项核心能力\n\n意料之外\n\n细心的读者会注意到，在变更失败率方面，中等绩效企业 在2016年比低绩效企业更差。2016年，我们首次在研究过程中 发现在所有绩效分组的各个度量维度上出现了些许不一致。这 种情况限于中低绩效组。我们的研究并未对此给出定论，但我 们猜到了出现这种情况的一些原因。 一种可能的解释是，中等 绩效企业正在进行技术转型，并且应对大规模的架构改造工作 充满挑战，例如改进遗留代码库。这也与2016年研究中的另一 部分数据相符。我们发现，与低绩效企业相比，中等绩效企业花 了更多的时间在计划外返工任务上，因其称自己花在新任务上 的时间占了很大一部分。我们认为，这些新任务可能是以忽视 关键性的返工任务为代价的，从而增加技术债，让系统更脆\n\n弱，进而导致变更失败率更高。\n\n我们已经找到了一种有效且可靠的方法来度量满足要求的软件 交付绩效。它侧重于全局的系统目标，并度量不同职能部门必须合作 才能改善的那些结果。我们要回答的下一个问题是：软件交付绩效是\n\n否重要?\n\n2.3 软件交付绩效对组织绩效的影响\n\n为了度量组织绩效，我们要求受访者评估其组织在多个方面的相\n\n对表现：盈利能力、市场份额和生产力。这是在先前的研究中已经多\n\n第2章 度量绩效  |  23\n\n次验证的量表8]。这种度量组织绩效的指标也被发现与投资收益率 (return   on   investment,ROI)  高度相关，并且对经济周期而言是稳健  的。这对我们的目的来说是一个很好的度量指标。多年来的分析表明， 高绩效企业的业务指标一直是低绩效企业的两倍。这表明，企业的软\n\n件交付能力的确可以为业务提供竞争优势。\n\n2017年，我们在研究中还探索了信息技术绩效(以下简称为 IT  绩效)如何影响组织实现更广泛目标的能力，即超越度量利润和收入 的目标。无论是否想获利，如今的任何企业都依靠技术来实现其目标， 并利用技术来快速、可靠、安全地为其客户或利益相关者提供价值。 无论是什么样的目标，技术组织的绩效都能够预测整体组织绩效。为  了度量非商业绩效，我们使用了经过多次验证的量表，它尤其适用于  这一任务。我们发现，高绩效企业的产品和服务数量、运营效率、  客户满意度、产品和服务质量，以及实现组织或任务目标的可能性都\n\n超过了其目标的两倍。图2-4显示了这种关系。\n\n组织绩效\n\n软件交付绩效\n\n非商业绩效\n\n图2-4  软件交付绩效的影响\n\n24   |  加速：企业数字化转型的24项核心能力\n\n在软件开发组织中，小批量工作和交付的能力尤为重要，因为这 么做让你能够使用 A/B 测试等技术快速收集用户反馈。值得注意的 是，“使用实验方法进行产品开发”的能力与有助于持续交付的技术\n\n实践密切相关。\n\n软件交付绩效至关重要，这一事实为“反对将与业务战略相关的 软件开发工作外包”提供了强有力的论据。相反，应该将这些工作纳 入组织的核心。甚至连美国联邦政府也通过美国数字服务这样的计划 及其附属机构，以及总务管理局技术转型服务团队来投入资金，为内\n\n部战略计划提供软件开发能力。\n\n① 构念是统计学术语。 ——译者注\n\n第2章 度量绩效  |  25\n\n相比之下，企业使用的大多数软件(例如办公软件和工资单系统) 不是战略性的，在许多情况下应该使用软件即服务模式来获取。区分 战略性和非战略性的软件，并适当地管理它们，这样做非常重要。这个\n\n主题被 Wardley映射方法0的提出者 Simon Wardley详细讨论过。\n\n2.4 驱动改变\n\n我们已经以严格和可度量的方式定义了软件交付绩效。对于构建 基于软件的产品和服务的团队，现在可以就如何提升其绩效做出基于 证据的决策。我们可以对团队与其所在的大型组织进行比较和基准测 试，并与更广泛的行业进行对比。我们可以度量团队随着时间的进步 或退步。最令人兴奋的也许是，我们能够超越相关性而开始验证预测 性了。我们可以检验到底是哪些实践(从在制品管理到测试自动化) 对软件交付绩效造成了实际影响，以及这些影响的强度。我们还可以 度量所关心的其他结果，例如团队倦怠和部署痛点。我们可以回答“变 更管理委员会是否真的提高了软件交付绩效”之类的问题。(剧透警\n\n告：并没有提高，因为它们与交付速度和稳定性负相关。)\n\n正如第3章将展示的那样，我们也可以定量地对文化进行建模和 度量。这使我们能够度量 DevOps与持续交付实践对文化的影响，进 而度量文化对软件交付绩效和组织绩效的影响。这种能够度量并解释 实践、文化与成果之间关系的能力是一套非常强大的工具，可以帮助\n\n我们追求更高的绩效。\n\n26  |  加速：企业数字化转型的24项核心能力\n\n当然，你可以使用这套工具来建模你自己的组织绩效。使用本书 中的高中低绩效表格，看看你的组织在哪个位置。使用本书中的度量 指标来确定你的前置时间、部署频率、平均恢复时间以及变更失败率，\n\n并要求你的团队为这些指标项设定目标。\n\n但是，必须小心使用这套工具。在具有学习型文化的组织中，这 套工具的确非常强大。不过，正如 Jez Humble 所说：“在具有病态和 官僚文化的组织中，度量被作为一种控制工具。人们会隐藏那些挑战 现有规则、战略和权力结构的信息。正如 Deming 所说，‘哪里有恐惧， 哪里就有错误的数字’。”在准备采用科学方法来提高绩效之前，你首\n\n先必须了解和塑造组织文化。这正是第3章的主题。\n\n第3章\n\n度量和改变文化\n\n在 DevOps 圈子中，文化具有非常重要的意义。但是，文化是无 形的，它的定义和模型也是多种多样的。我们的挑战是找到一种在科 学文献中有明确定义的文化模型，它可以有效地进行度量，并在软件 领域中具有预测能力。我们不但实现了这些目标，还发现通过DevOps\n\n实践可以影响和改进文化。\n\n3.1 建模文化\n\n文献中有许多对文化进行建模的方法。你既可以关注国家文化  (例如某个人所归属的国家),也可以讨论组织文化价值观是如何影响  团队行为方式的。甚至在组织文化中，也有多种定义和建模“文化” 的方法。组织文化可以存在于组织的3个层面：基本假设、价值观和  工件[1。在组织文化的第1层，随着时间的推移，团队或组织的成员\n\n对于关系、事件与活动形成了基本假设。组织文化的这一层是最不可\n\n28  |  加速：企业数字化转型的24项核心能力\n\n见的，并且在我们身处于团队中的时间足够长之后，虽然我们对其心\n\n知肚明", "metadata": {}}, {"content": "，也有多种定义和建模“文化” 的方法。组织文化可以存在于组织的3个层面：基本假设、价值观和  工件[1。在组织文化的第1层，随着时间的推移，团队或组织的成员\n\n对于关系、事件与活动形成了基本假设。组织文化的这一层是最不可\n\n28  |  加速：企业数字化转型的24项核心能力\n\n见的，并且在我们身处于团队中的时间足够长之后，虽然我们对其心\n\n知肚明，但很可能难以将其用语言表达出来。\n\n组织文化的第2层是价值观，这一层对组织成员来说更“可见”, 因为对于集体价值观和规范，那些了解它们的人可以讨论甚至辩论。 透过价值观，组织成员可以理解自己周围的关系、事件和活动。价值 观还通过建立社会规范来影响群体互动和活动。社会规范塑造群体成 员的行为，并提供相关规则12]。当谈论团队和组织的文化时，我们通\n\n常是指这一层的“文化”。\n\n组织文化的第3层是最明显的，可以在工件中观察到。这些工件 包括书面的使命宣言或信条，以及技术和正式流程，甚至还有英雄和\n\n仪式[13]。\n\n根据 DevOps圈子中的讨论以及第2层“组织文化”的重要性， 我们决定选择由社会学家 Ron Westrum定义的模型。Westrum一直在 研究系统安全中的人为因素，特别是航空和医疗保健等高度复杂和高\n\n风险的技术领域中的事故。1988年，他开发了组织文化的类型学。\n\n口病态型 (权力导向)组织的特点是大量的恐惧和威胁。人们经 常出于办公室政治原因隐瞒信息，或者通过扭曲信息来使自己\n\n看起来更好。\n\n口官僚型 (规则导向)组织会保护部门。部门中的人希望保住自 己的“地盘”,坚持自己的规则，并且通常按规矩办事——他\n\n们自己的规矩。\n\n第3章 度量和改变文化  |  29\n\n口生机型(绩效导向)组织专注于使命。我们如何实现目标?一\n\n切都服务于良好的绩效，以及做该做的事。\n\nWestrum的进一步见解是，组织文化预测了信息在组织中的流动\n\n方式。Westrum提供了良好信息的3个特征：\n\n1. 它为接收者需要回答的问题提供答案；\n\n2. 它是及时的；\n\n3. 它以某种方式呈现，使得接收者可以有效地利用它。\n\n要使快节奏、高风险的环境(包括技术组织)能够安全且有效 地运行，良好的信息流至关重要。Westrum 描述了3类组织的特征\n\n(见表3-1)。\n\n表3-1  各类组织的特征\n\n病态型组织(权力导向)     官僚型组织(规则导向)     生机型组织(绩效导向)\n\n低协作性 中等协作性 高协作性 消灭信使 忽视信使 训练信使 逃避责任 限制责任 共担风险 不鼓励连接 允许连接 鼓励连接 失败后寻找替罪羊 失败后寻求公平 失败后进行调查 不创新 创新导致问题 实现创新\n\nWestrum的另一个见解是，组织文化的这种定义可以预测绩效。 我们特别关注这一点，因为我们经常听到人们说文化在DevOps中很\n\n重要，所以我们很有兴趣了解文化是否可以预测软件交付绩效。\n\n30  |  加速： 企业数字化转型的24项核心能力\n\n3.2 度量文化\n\n为了度量组织文化，我们利用这样一个事实：各种组织类型组成  了“一把刻度尺上的点……也就是‘Westrum 频谱’”[4]。这使它成  为利克特式问题的绝佳候选方案。在心理测量学中，利克特量表用于  度量人们的感知，要求人们评估自己对某项陈述的同意程度或不同意  程度。当人们回答利克特式问题时，我们将答案分为1～7的等级，  其中1表示“非常不同意”,7表示“非常同意”。要达到好的效果，  陈述必须保证措辞的色彩强烈，这样人们的反馈才能是“非常同意” 或“非常不同意”(或确实持中立态度)。图3-1显示了根据 Westrum\n\n模型所创建的陈述以及利克特式问题。\n\n非常  不同意 不同意 些许  不同意 既不同意 也不反对 些许 同意 同意 非常 同意 选项1:积极寻求信息 Q Q Q O G O 选项2:当传递失败信息或坏消息时， 信使不会受惩罚 C 选项3:共担责任 ○ ⑦ D ○ C 选项4:鼓励和嘉奖跨职能协作 ○ C 口 □ 0 ① □ 选项5:失败后进行调查 0 C 0 2 0 C Q 选项6:鼓励提出新想法 △ □ 0 〇 ○ □ 选项7:失败首先被认为是改进机会\n\n图3-1 度量文化所用的利克特式问题\n\n一旦从多人(通常是几十个或几百个人)那里得到这些问题的答 案，我们就需要从统计学的角度来确定对组织文化的度量是有效和可 靠的。也就是说，我们需要确认所有受访者对这些问题的理解是相似\n\n的，并且这些问题综合起来能够从实际上度量组织文化。如果使用几\n\n第3章 度量和改变文化  |  31\n\n种统计检验方法分析后，证实了我们的度量指标具备这些属性，那么 它就称为一个“构念”(在本例中，我们的构念是 “Westrum 组织文\n\n化”)。然后，就可以将这个度量指标用于下一步的研究。\n\n总之，对效度和可靠性的分析为我们确认了度量项的有效性，而 且这是在分析关联性(如相关性或预测)之前就得到了确认。有关效 度和可靠性的更多信息，请参阅第13章。若要了解用于确认效度和\n\n可靠性的统计检验，请参阅附录C。\n\n32  |  加速：企业数字化转型的24项核心能力\n\n我们的研究始终表明， Westrum 构念——度量组织文化对信任和 协作的鼓励程度    -既有效又可靠”。这意味着你可以在自己的问卷 调查中使用我们所用的问题。要计算每一份反馈的“得分”,请记下 每个问题的答案所对应的数值(1～7),并计算所有问题的平均值。\n\n然后，就可以对问卷调查中的所有反馈进行统计分析。\n\n文化通过3种机制来实现信息处理。第一，在具有生机型文化的 组织中，人们可以更高效地协作，并且无论是在同事之间还是在上下 级之间都有更高的信任度。第二，生机型文化强调使命，这一关键点 使人们能够将个人问题放在一边，并且不再纠结于官僚型组织中明显 存在的部门问题。完成使命才是首要的目标。第三，生机型文化鼓励\n\n“公平竞争”,其中等级制度扮演的角色较少。\n\n应该强调的是，官僚主义不一定是坏事。正如 Mark Schwartz 在 其著作 The Art of Business Value中所指出的，官僚主义的目标是“通 过将规则应用于行政行为来确保公平。规则面前，人人平等——没有 人会得到特殊优待，也没有人会被歧视。不仅如此，规则还能很好地 体现组织所积累的知识：制定规则的官僚是来自各个领域的专家，这 些规则将高效的结构和流程强加于组织，同时保证公平性，消除任意 性”[15]。也许，最好将官僚型文化理解为，比完成使命更重要的是遵\n\n循规则。\n\n① 2016年，31%的受访者被归类为病态型，48%为官僚型，21%为生机型。\n\n第3章 度量和改变文化| 33\n\n3.3 Westrum 组织文化预测了什么\n\nWestrum 的理论认为，具有更好信息流的组织能够更有效地发挥 作用。根据 Westrum 的说法，这种组织文化有几个重要的先决条件。 首先，良好的文化需要整个组织内的人员彼此信任和合作，因此它反 映了组织内部的信任与合作程度。其次，更好的组织文化可以体现更 高质量的决策：在拥有这种文化的团队中，不仅有更好的信息可用于 决策，而且如果这些决策结果是错误的，那么决策也更容易被逆转， 因为团队更有可能是开放和透明的，而不是封闭和分层的。最后，拥 有这些文化的团队可能会更好地完成工作，因为当问题出现时就可以\n\n早发现、早解决。\n\n我们假设Westrum 组织文化可以预测软件交付绩效和组织绩效。 此外，我们还预测它能提高工作满意度”。这两个假设都被证明是正\n\n确的。图3-2展示了这些关系。\n\n图3-2 Westrum 组织文化与软件交付绩效和组织绩效的关系\n\n① 这些假设基于之前的研究和现有理论，并由我们自己的经验以及我们在行业中的 所见所闻支持。我们的研究假设都是这样构建的。这是一个推理预测研究的例 子，详见第12章。\n\n34  |  加速：企业数字化转型的24项核心能力\n\n3.4 Westrum 组织文化带给技术组织的结果\n\n对于希望在技术和经济日益飞速变化的环境中蓬勃发展的现代 组织而言，弹性和通过应对变化来创新的能力都是必不可少的。通过 着眼于 Westrum的理论在技术组织中的应用，我们的研究表明这两个 特征是相互关联的。最初这一研究只用于预测安全性结果，但后续的 研究表明", "metadata": {}}, {"content": "，详见第12章。\n\n34  |  加速：企业数字化转型的24项核心能力\n\n3.4 Westrum 组织文化带给技术组织的结果\n\n对于希望在技术和经济日益飞速变化的环境中蓬勃发展的现代 组织而言，弹性和通过应对变化来创新的能力都是必不可少的。通过 着眼于 Westrum的理论在技术组织中的应用，我们的研究表明这两个 特征是相互关联的。最初这一研究只用于预测安全性结果，但后续的 研究表明，它还能预测软件交付绩效和组织绩效。这是有道理的，因 为在健康环境中，安全性结果就是绩效结果。通过将其扩展到技术组 织中，我们期望这种类型的组织文化能够对软件交付绩效和组织绩效\n\n产生积极影响。这也印证了谷歌公司对如何创建高绩效团队的研究。\n\n软件交付绩效构念\n\n第2章提到了软件交付绩效的4个度量指标：前置时间、部 署频率、平均恢复时间和变更失败率。在执行聚类分析时，这4 个度量指标对高、中、低绩效者的分类和判别都是有意义的。 也就是说，这4个度量指标都很适用于给团队分类。然而，当 试图将这4个度量指标转变为构念时，我们遇到了一个问题： 它们没有通过所有的效度和可靠性统计检验。分析表明，只有 前置时间、部署频率和平均恢复时间能够一起形成一个有效、 可靠的构念。因此，在本书的剩余内容中，当讨论软件交付绩 效时，我们仅使用这3个度量指标的组合来定义它。此外，当软\n\n件交付绩效与某些其他构念相关联时，或者当我们的讨论涉及软\n\n第3章 度量和改变文化  |  35\n\n件交付绩效的预测时，也只使用以这种方式定义和度量的构念。\n\n但请注意，变更失败率与软件交付绩效构念密切相关，这 意味着在大多数情况下，与软件交付绩效构念相关的事物也与\n\n变更失败率相关。\n\n谷歌公司希望了解其表现最佳的团队中是否存在共同点。于是，\n\n谷歌公司开展了一项为期两年的研究项目，旨在调查是什么让谷歌团  队能够高效地工作，并对员工进行了“200多次采访……以及调查了 180多个活跃的谷歌团队的250多个属性”。谷歌公司希望找到个人特  质和技能的组合，也就是成就高绩效团队的关键因素。但研究发现， “团队成员如何彼此互动、如何开展工作，以及如何看待自己对团队 的贡献，这些要比团队中有什么人更重要”[16]。换句话说，这一切都\n\n归结为团队动力。\n\n组织如何处理故障或事故尤其具有指导意义。病态型组织会寻找\n\n“替罪羊”:调查的目的是找到一人或多人对问题“负责”,然后惩罚 或责备他们。但是，在复杂的自适应系统中，事故几乎从来都不是某 个人自己的责任。比如，这个人清楚地看到了将要发生的事情，却任 由它发展，或者没有采取行动来阻止事情恶化。相反，事故通常源自 不同因素的复杂相互作用。与此类系统中的其他类型行为一样，复杂\n\n系统的失败都是突现的。\n\n因此，如果事故调查止步于“人为错误”的结论，那这不仅是坏\n\n事，而且是危险的。相反，人为错误应该只是调查的开始。我们的目\n\n36  |  加速：企业数字化转型的24项核心能力\n\n标应该是找到方法来改善信息流，让人们能够获得更准确或更及时的 信息，或者找到更好的工具来帮助避免因日常操作中的隐患而导致的\n\n灾难性故障。\n\n3.5 如何改变文化\n\nJohn Shook描述了他改变加利福尼亚州弗里蒙特汽车制造厂的团队 文化的经历，这是美国精益制造运动的起源°。他写道：“我的经验告诉 了我一个不争的事实，那就是，改变文化不是首先要改变人们的思维\n\n方式，而是首先要改变人们的行为方式，也就是他们的所作所为。”[\n\n因此，我们假设，遵循由精益运动和敏捷运动所发展出来的理论， 贯彻这些运动的实践可以对文化产生积极影响。我们着手研究技术和  管理实践，并度量它们对文化的影响。我们的研究表明，精益管理以  及一系列其他技术实践——统称为持续交付[19]——实际上的确影响\n\n了文化，如图3-3所示。\n\n图3-3 Westrum  组织文化的驱动力\n\n① 广播节目 “This American Life” 第561期讲述了这一转型故事。\n\n第3章 度量和改变文化  |  37\n\n你可以通过在技术组织中贯彻这些实践来成就更好的文化，就像 在制造行业里一样。第4章将研究技术实践，第7章和第8章将讨论\n\n管理实践。\n\n第4章\n\n技术实践\n\n当《敏捷宣言》在2001年发表之时，极限编程是最受欢迎的敏捷 框架之一。与 Scrum不同，极限编程规定了许多技术实践，如测试驱 动开发和持续集成。《持续交付》一书强调，正是这些技术实践(结合\n\n全面的配置管理)使频繁、高质量、低风险地发布软件版本成为可能。\n\n本章将讨论我们的研究成果。我们将“持续交付”作为一种能力 进行度量，并评估它对软件交付绩效、组织文化和其他结果指标(如 团队倦怠感和部署工作的难度)的影响。我们发现，持续交付实践确\n\n实会对这些结果产生可度量的影响。\n\n4.1 什么是持续交付\n\n持续交付是一组能力，这组能力让我们能够安全、快速、可持续\n\n① 根据谷歌趋势，Scrum的热度在2006年1月前后超过了极限编程，并在极限编程 的热度趋势趋于平缓的同时继续受到欢迎。\n\n第4章 技术实践  |  39\n\n地将各种功能改进、配置变更、bug 修复和试验特性等交付到生产环\n\n境中或用户手中。持续交付有5个核心原则，如下所述。\n\n口质量内建。在 W.Edwards Deming提出的14条管理原则中，第 3条就是“请停止依赖大规模的检查来获得质量，而应该从一 开始就将质量嵌入到生产过程中”[20]。在持续交付中，我们要 致力于创造一种文化，即通过工具和人的相互支持，我们可以 很快发现任何问题，以便在这些问题的发现成本和修复成本都\n\n较低时，直接解决它们。\n\n口小批量工作。无论是构建新产品或服务，还是投资于组织变革， 组织往往都会规划大批量的工作。然而，通过将工作分解成多 个子项目，可以快速为目标市场中的一小部分用户群提供可度 量的业务成果，从而为我们正在进行的工作获取重要的反馈， 以便我们及时调整工作方向。尽管这种小批量的工作方式会增 加一些开销，但它可以让我们避免进行无价值甚至负价值的工 作，从而为组织获得巨大的回报。持续交付的一个关键目标是 改变整个软件交付过程的经济情况，从而让单一变更的发布成\n\n本非常低。\n\n口计算机执行重复性任务，而人类解决问题。降低变更发布成本的 一个重要策略，就是找出那些需要很长时间执行的重复性工 作，例如回归测试和软件部署，并投入精力将这类工作简化或 自动化。这样一来，我们就可以腾出更多的时间去解决更高价\n\n值的问题，例如改进系统或流程的设计，以响应反馈。\n\n40  | 加速：企业数字化转型的24项核心能大\n\n口坚持不懈地追求持续改进。高绩效团队最重要的特点是他们永\n\n远不会满意，而总会努力变得更好。高绩效企业将“改进”作\n\n为每位员工日常工作的一部分。\n\n口每个人都有责任。正如我们从Ron  Westrum那里学到的那样，\n\n在官僚型组织中，团队倾向于关注部门目标而不是组织目标。 因此，开发部门关注吞吐量，而测试部门关注质量，运维部门 则关注稳定性。然而事实上，这些都是系统级结果，只有参与 软件交付过程的所有人密切合作才能实现。对于管理层来说， 一个关键目标就是让这些系统级结果的状态透明化，并与组织 的其他成员合作，为这些结果设定可度量、可实现、有时限的\n\n目标，然后帮助团队努力实现这些目标。\n\n为了实现持续交付，必须建立下面这些基础。\n\n口全面的配置管理。我们应该可以仅依据存储在版本控制系统中 \t的信息，就能够准备软件的运行环境，并以完全自动化的方式 \t构建、测试和部署软件。对环境或在其中运行的软件的任何更 \t改，都应该通过受版本控制的自动化过程来进行。审批仍然是 \t手动进行的，但是一旦获得批准，所有更改都应该自动执行。 口持续集成。许多软件开发团队习惯于在分支上开发特性，而且  \t这些代码分支的生命周期会持续数天，甚至数周。将所有这些 \t分支集成在一起，需要花费大量时间，还可能会有大量的返工。 如果遵循小批量工作和质量内建的原则，那么高绩效团队应让\n\n分支的生命周期很短暂(通常不到一天),并频繁地将它们合\n\n第4章技术实践  |  41\n\n并到开发主干。每次变更都应该触发包含执行自动化单元测试 的构建过程。如果此过程中的任何一个任务失败，那么开发人\n\n员都要立即修复它。\n\n口持续测试。不应该只在特性或软件版本达到“开发完成”状态 之后才测试。由于测试非常重要", "metadata": {}}, {"content": "，需要花费大量时间，还可能会有大量的返工。 如果遵循小批量工作和质量内建的原则，那么高绩效团队应让\n\n分支的生命周期很短暂(通常不到一天),并频繁地将它们合\n\n第4章技术实践  |  41\n\n并到开发主干。每次变更都应该触发包含执行自动化单元测试 的构建过程。如果此过程中的任何一个任务失败，那么开发人\n\n员都要立即修复它。\n\n口持续测试。不应该只在特性或软件版本达到“开发完成”状态 之后才测试。由于测试非常重要，因此应该始终将其作为整个 开发过程中不可或缺的一部分。应该针对每次向版本仓库提交 的代码，都执行自动化单元测试和验收测试，以便快速地为开 发人员提供有关本次代码变更的反馈。开发人员应该能在其工 作站上执行所有自动化测试，以便对缺陷进行分类和修复。测 试人员应该对持续集成的最新版本进行持续的探索性测试。只 有在所有相关的自动化测试全部执行成功之后，开发人员才能\n\n说他们的任务完成了。\n\n实施持续交付意味着创建多个反馈循环，以确保能够更频繁、更 可靠地将高质量的软件交付给用户“。如果能够正确地加以实施，那 么向用户发布新版本的过程应该就是一种按需进行的例行活动，这种 活动随时都可以进行。持续交付要求开发人员和测试人员以及与用户\n\n体验、产品和运维相关的人员在整个交付过程中进行有效的协作。\n\n4.2  持续交付的影响\n\n在2014年到2016年的最初几次研究过程中，我们对一些能力进\n\n① 连接这些反馈循环的关键模式被称为部署流水线。\n\n42  |  加速：企业数字化转型的24项核心能力\n\n行了建模和度量。\n\n口对应用程序代码、系统配置、应用程序配置以及构建脚本和配\n\n置脚本应用版本控制。\n\n口有规律地执行可靠且易维护的全面自动化测试。\n\n口部署自动化。\n\n口持续集成。\n\n口安全左移：将安全事宜(以及安全团队)融入到软件交付过程\n\n当中，而不是作为它的下游环节。\n\n口使用主干开发模式，而不是长生命周期的特性分支开发模式。\n\n口进行有效的测试数据管理。\n\n我们使用利克特式问题以构念的形式度量大多数能力°。举例来 说，为了度量版本控制能力，我们请受访者针对下列陈述在利克特量\n\n表中给出答案。\n\n口我们的应用程序代码是放在版本控制系统中的。\n\n口我们的系统配置信息是放在版本控制系统中的。\n\n口我们的应用程序配置信息是放在版本控制系统中的。\n\n口我们的自动化构建和配置所使用的脚本是放在版本控制系统\n\n中的。\n\n然后，我们使用统计分析来确定这些能力对我们所关心的那些结\n\n① 一个显著的例外是部署自动化。\n\n第4章 技术实践  |43\n\n果的影响程度。正如我们所预期的那样，这些能力结合在一起，对软  件交付绩效产生了显著的积极影响。(本章稍后会讨论这些实践的一  些细微差别。)而且，它们还有另外一些重要的好处：它们有助于降  低部署工作的难度并缓解团队倦怠感。虽然多年来一直听说在与我们  合作的组织中，上述与质量相关的活动可以带来收益，但能够在数据  中看到证据让我们感觉很棒。这是有道理的：当团队采用持续交付实  践时，部署到生产环境已经不再是一个大事件了——作为日常工作的  一部分，它可以在正常的工作时间内完成(第9章将讨论团队健康)。 有趣的是，那些持续交付做得很好的团队拥有更强的组织认同感。这\n\n是组织绩效的一个关键预测因子(第10章会详细讨论)。\n\n正如第3章所述，我们假设实施持续交付可以给组织文化带来积 极影响。分析表明，实际情况确实如此。如果想改善组织文化，实施 持续交付就会有所帮助。通过为开发人员提供发现问题的工具，在开 发过程中投入一些时间和资源，以及给他们直接解决问题的权限，我 们就创造了一种环境，让开发人员为质量和稳定性等整体结果负责。 这可以对团队成员所处的组织环境和文化，以及他们彼此间的互动产\n\n生积极影响。\n\n2017 年，我们扩展了分析范围，以便更明确地度量那些对持续 交付非常重要的技术能力之间的关系。为了做到这一点，我们创建了 一阶持续交付构念。也就是说，我们直接度量持续交付，这让我们能\n\n够深入了解让团队达到下述状态的能力。\n\n44  |  加速：企业数字化转型的24项核心能力\n\n口团队能够在整个软件交付周期中按需部署到生产环境(或交付\n\n到最终用户手中)。\n\n口团队中的每个人都能快速获得有关系统质量和可部署性的反\n\n馈，并且会将处理该反馈作为其最高优先级的工作。\n\n我们的分析表明，从统计角度看，在2014年～2016年所度量的 原始能力对上述结果具有较强的影响”。此外，我们还度量了两项新\n\n能力，并且证明它们对持续交付同样具有较强的影响。\n\n口 松 耦 合 的 架 构 ( 第 5 章 将 详 细 讨 论 )\n\n口可以根据自己的需求自主选择工具的团队\n\n图4- 1 显示了持续交付与各个技术能力之间的关系。\n\n第4章 技术实践  |  45\n\n交付对组织的影响。我们认为，它应该能够推动软件交付绩效的改善， 并且以前的研究表明，它甚至能够改善组织文化。和以前一样，我们\n\n发现在持续交付方面表现良好的团队取得了以下成果。\n\n口组织认同感较强(详见第10章)。\n\n口软件交付绩效较高(如前置时间、部署频率和平均恢复时间)。\n\n口变更失败率较低。\n\n口具有以绩效为导向的生机型文化(详见第3章)。\n\n上述关系如图4-2所示。\n\n图4-2  持续交付的影响\n\n更好的是，我们的研究发现，持续交付同时改善了人们的工作体\n\n验。这意味着对技术的投资也是对人的投资，并且这些投资将使我们\n\n46  | 加 速 ：企业数字化转型的24项核心能力\n\n的技术过程更具可持续性。因此，持续交付帮助我们实现了《敏捷宣 言》中的12项原则之一：“敏捷过程提倡可持续发展。发起人、开发\n\n人员和用户应该能够始终保持稳定的步调。”\n\n在改善工作体验方面，持续交付有以下益处，如图4-3所示。\n\n口缓解部署工作的痛苦。\n\n口缓解倦怠感(详见第9章)。\n\n缓解部署工作 的痛苦\n\n持续交付\n\n缓解倦怠感\n\n图4-3 持续交付有助于提高工作的可持续性\n\n4.3  持续交付对质量的影响\n\n我们想回答的一个关键问题是：持续交付能否提高质量?为了回 答这个问题，我们首先要找到度量质量的方法。这具有挑战性，因为 质量与具体情况密切相关，并且主观性较强。正如软件质量专家 Jerry\n\nWeinberg 所说：“质量是针对某个人的价值。”\n\n我们已经知道，持续交付预示着较低的变更失败率，这是一个 重要的质量指标。不过，我们还检验了关于质量的几个额外的代理\n\n变量。\n\n第4章 技术实践  |  47\n\n口应用程序的质量和性能(从应用程序开发人员的角度来看)。\n\n口返工或计划外工作所花时间占总工作时间的百分比。\n\n口处理最终用户发现的缺陷所花费的时间占总工作时间的百\n\n分比。\n\n我们的分析发现，所有度量指标都与软件交付绩效相关，而返工  或计划外工作所占的时间百分比具有最强的相关性，这类工作包括中 断或修复工作、紧急的软件和补丁部署、响应紧急审计文档请求等。 此外，在统计显著性方面，持续交付预示了较少的计划外工作和返工。 我们发现，在新工作、计划外工作或返工以及其他工作所花费的时间\n\n上，高绩效企业和低绩效企业之间存在显著差异。\n\n高绩效企业表示，在其工作时间中，49%用于新工作，21%用于 计划外工作或返工。相比之下，低绩效企业将38%的时间花在新工\n\n作上，而将27%的时间用于计划外工作或返工，如图4-4所示。\n\n计划外工作和返工可以有效地反映软件质量，因为它们表示，我 们未能做到产品质量内建。在 The Visible Ops Handbook一书中，计划 外工作被描述为“关注汽车上的低燃料警示灯与在高速公路上汽油耗 尽”之间的区别21]。在第1种情况下，组织可以有计划地解决问题， 而不会对其他预定工作造成太大的紧迫性或中断。在第2种情况下， 组织必须以非常紧急的方式解决问题，通常需要所有人都时刻忙碌 着——就好比让6名工程师放下所有工作，抱起灌满的汽油桶，狂奔\n\n着去给停在高速公路上的卡车加油。\n\n48  |  加速：企业数字化转型的24项核心能力\n\n49%\n\n30%\n\n高绩效企业\n\n38%\n\n低绩效企业\n\n新工作\n\n计划外工作或返工\n\n其他工作(开会、例行维护等)\n\n图4-4  各类工作的时间百分比\n\n同 样", "metadata": {}}, {"content": "，通常需要所有人都时刻忙碌 着——就好比让6名工程师放下所有工作，抱起灌满的汽油桶，狂奔\n\n着去给停在高速公路上的卡车加油。\n\n48  |  加速：企业数字化转型的24项核心能力\n\n49%\n\n30%\n\n高绩效企业\n\n38%\n\n低绩效企业\n\n新工作\n\n计划外工作或返工\n\n其他工作(开会、例行维护等)\n\n图4-4  各类工作的时间百分比\n\n同 样 ，Vanguard  方法的提出者John    Seddon 强调，要通过改善我 们提供的服务质量来减少所谓的失败需求，这是非常重要的。这种失 败需求通常是指由于未能在第一 时间做正确的事情而导致的工作需 求。减少失败需求是持续交付的一个关键目标，其重点是小批量工作\n\n和持续不断地在过程中测试。\n\n第4章 技术实践  | 49\n\n4.4  持续交付实践：什么行，什么不行\n\n通过研究，我们发现了驱动持续交付的9项核心能力，这在本章 前面已经提到过。本章不再进一步讨论持续集成和部署自动化。此外， 除了架构和工具选择(另有一章单独讨论),本章将讨论其他能力，\n\n其中一些能力之间存在很有意思的细微差别。\n\n4.4.1  版本控制\n\n版本控制的全面使用基本上是没有争议的。我们询问受访者是否  将应用程序代码、系统配置信息、应用程序配置信息和脚本保存在版  本控制系统中，以便自动构建和配置。这些因素共同预测了IT 绩效， 并构成持续交付的关键组成部分。最有趣的是，与将应用程序代码保  存在版本控制系统中相比，在版本控制系统中保存系统配置信息和应  用程序配置信息与软件交付绩效更相关。在配置管理中，与应用程序  代码相比，配置信息通常被认为是次要的，但我们的研究表明，这是\n\n一种错误认识。\n\n4.4.2 测试自动化\n\n如上所述，测试自动化是持续交付的关键部分。根据我们的分析，\n\n以下实践可以预测IT 绩效。\n\n口拥有可靠的自动化测试：当自动化测试通过时，团队确信，他们\n\n的软件是可发布的。此外，他们确信，如果测试失败，就表明\n\n50  | 加速：企业数字化转型的24项核心能力\n\n的确存在缺陷。事实上，可能有太多不稳定或不可靠的测试套 件，以至于产生误导信息。对于可靠测试套件的维护，是值得 持续投入精力去做的。实现此目的的一种方法是将不可靠的自 动化测试运行于单独的隔离环境中(检疫环境)。当然，假如 它们是受版本控制的(应该如此),你完全可以将其删除，因\n\n为反正是可以从版本控制系统中找回来的。\n\n口创建和维护自动化验收测试的人主要是开发人员，他们可以轻松  地在开发工作站上重现和修复问题。值得注意的是，主要由QA   人员或外包方创建和维护的自动化测试对提高 IT 绩效是无益 的。这背后的理论是，当开发人员参与创建和维护验收测试时， 有两个重要的积极影响。首先，当开发人员编写测试时，代码 的可测试性有所提高。这也是测试驱动开发 (test-driven   development,TDD)     成为重要实践的主要原因之一——它促 使开发人员做出可测试性更高的设计。其次，当负责自动化测 试时，开发人员会更加关心它们，并会投入更多精力来进行维\n\n护和修复。\n\n上述内容并不表明我们应该解雇测试人员。在软件交付生命周期 中，测试人员扮演着非常重要的角色，例如执行探索性测试、可用性 测试、验收测试等需要手动完成的测试，通过与开发人员一起工作，\n\n帮助他们创建并改进自动化测试用例集。\n\n我们的分析表明， 一旦有了自动化测试，就应该定期执行它们。\n\n每次提交都应该触发一次构建，并执行一系列快速的自动化测试。\n\n第4章 技术实践  |  51\n\n同时，开发人员应该每天都能从更加全面的自动化验收测试和性能 测试中得到反馈。而且，当前的构建产物应该被测试人员用于探索性\n\n测试。\n\n4.4.3  测试数据管理\n\n当创建自动化测试时，管理测试数据是非常难的一项任务。成功 的团队拥有充足的测试数据，可用于运行全自动化的测试套件，并且 为了执行自动化测试，可以按需获得测试数据。另外，测试数据并不\n\n局限于自动化测试所需要的数据。\n\n4.4.4  主干开发\n\n我们的研究还发现，与基于长生命周期的特性分支相比，基于主 干开发更有利于提高软件交付绩效。在这方面做得好的团队，其活跃 分支数通常在任何时候都不会超过3个。而且，在合并回主干之前， 他们的分支生命周期都比较短(不足一天),并且根本没有“代码冻 结期”,或者质量打磨阶段。值得再次强调的是，这些结果与团队规\n\n模、组织规模或行业无关。\n\n即便发现主干开发实践对软件交付绩效有益，习惯于 GitHub Flow  工作流模式的一些开发人员也仍旧持怀疑态度。这种工作流模 式严重依赖于分支开发，并且仅会周期性地将分支合并回主干。我们 听过这样的说法：“只要开发团队不让分支的生命周期太长，这种分\n\n支策略就是高效的。”我们赞同这样的观点：每天都能将分支合并回\n\n52  |  加速：企业数字化转型的24项核心能力\n\n主干，这种实践与常说的持续集成实践并不冲突。\n\n进一步的研究发现，使用短分支生命周期(集成时间少于一天) 且合入和集成周期也短(不足一天)的团队，其软件交付绩效比使用 长分支生命周期的团队要好。根据所见所闻和自己的经验，我们猜测 这是因为多个长生命周期的分支不利于重构和团队的内部沟通。然 而，应该注意的是， GitHub Flow工作流模式适合于开源项目，因为 其贡献者并不是全职参与一个项目。在这种情况下，兼职贡献者在一\n\n个分支上工作较长时间，且没有将分支合并回主干，也是正常的。\n\n4.4.5 安全左移\n\n与低绩效团队相比，高绩效团队更有可能将信息安全集成到交付 过程当中。信息安全责任人在软件交付生命周期的各个阶段都能提供 反馈，例如从设计到演示，再到帮助测试实现自动化。这种集成并不 会拖慢开发流程，而是将安全工作融入到团队的日常工作中。事实上，\n\n集成安全实践有助于提高软件交付绩效。\n\n4.5 采用持续交付\n\n我们的研究表明，持续交付的技术实践对组织的很多方面有着巨 大的影响。持续交付不仅有助于提高软件交付绩效和软件质量，还有 助于改善文化，降低部署工作的难度并缓解团队倦怠感。然而，采用\n\n这些实践常常需要重新思考每一件事情——从团队如何工作，到彼此\n\n第4章 技术实践  |  53\n\n如何互动，再到使用什么工具与流程。此外，团队也需要在测试和部 署自动化方面持续投入，坚持不懈地持续简化系统架构，以确保这种\n\n自动化成本不会过高。\n\n综上所述，实现持续交付的一个关键障碍是企业和应用程序的架\n\n构。第5章将围绕这个重要主题讨论我们的研究结论。\n\n第 5 章\n\n架     构\n\n我们已经看到，采用持续交付可以提高软件交付绩效，改善组织 文化，降低部署工作的难度并缓解团队的倦怠感。然而，对于加快开 发节奏和提高系统的稳定性，软件架构和它所依赖的服务可能是非常\n\n大的障碍。\n\n因为 DevOps和持续交付最早源于基于Web的系统，所以我们很 自然地要问：它们能否用于大型机系统、固件或者通常由紧紧耦合在\n\n一起的数千个系统组成的大泥球似的企业环境|?\n\n因此，我们开始研究架构决策对软件交付绩效的影响和约束，以 及怎样才能创建有效的架构。我们发现，对于上述所有类型的系统， 都可以实现高绩效，只要系统以及开发和维护系统的团队保持较低的\n\n耦合度。\n\n第5章 架构  |  55\n\n5.1 系统类型与软件交付绩效\n\n我们研究了大量的系统类型，希望找到系统类型与团队绩效之间 的相关性。以下列出我们研究的系统类型，其中既有正在开发中的主\n\n系统，也有已经集成的服务。\n\n口新项目：还没有发布过的系统。\n\n口交互型系统：直接被最终用户使用。\n\n口记录型系统：用于保存对业务关键的信息，其数据的一致性和\n\n完整性至关重要。\n\n口由另一个公司开发的定制化软件。\n\n口由自己公司开发的定制化软件。\n\n口现成的商业化套装软件。\n\n口运行于硬件设备之上的嵌入式软件。\n\n口需要用户自行安装的软件(包括移动应用程序)。  口运行于由其他公司维护的服务器上的非主机软件。 口运行于由自己公司维护的服务器上的非主机软件。\n\n口主机软件。\n\n我们发现，低绩效企业更可能会说，他们正在构建的软件(或者  他们与之交互的服务)是由另外一个公司(例如外包团队)定制开发的。 不仅如此，低绩效企业也更可能会说自己正在开发或使用主机软件。\n\n有意思的是，不得不与主机软件集成，这一点与绩效并非显著相关。\n\n56  |  加速：企业数字化转型的24项核心能力\n\n对于其他情况", "metadata": {}}, {"content": "，低绩效企业更可能会说，他们正在构建的软件(或者  他们与之交互的服务)是由另外一个公司(例如外包团队)定制开发的。 不仅如此，低绩效企业也更可能会说自己正在开发或使用主机软件。\n\n有意思的是，不得不与主机软件集成，这一点与绩效并非显著相关。\n\n56  |  加速：企业数字化转型的24项核心能力\n\n对于其他情况，系统类型与软件交付绩效之间没有显著的相关 性。这一发现令我们感到意外，我们原本以为那些开发商业化套装软 件、记录型系统或嵌入式系统的团队会有较低的绩效，而那些开发交 互型系统或新项目的团队会有较高的绩效。然而数据显示，事实并非 如此。这进一步强化了下述观点：关注架构的特征比关注架构的实现 细节更重要。即使是套装软件和“遗留”的主机系统，拥有良好的架 构特征也并非不可能。相反，如果忽略这些特征，那么即便使用了容\n\n器技术和最新的微服务架构，也无法保证高绩效。\n\n正如第2章所述，因为软件交付绩效会影响组织绩效，所以有必 要努力创建并持续改进你的核心战略性软件产品或服务，使它成为 业务的一个关键驱动因素。低绩效企业更有可能使用或集成由其他公 司开发的定制化软件，这一事实说明了企业自身拥有核心开发能力的\n\n重要性。\n\n5.2 关注可部署性和可测试性\n\n尽管对于达到高绩效来说，你所构建的软件类型往往并不重要， 但有两种架构特征非常重要。那些同意下述说法的人很可能身处高绩\n\n效组织中。\n\n口不需要集成环境就可以完成大部分测试”。\n\n① 我们将集成环境定义为多个独立服务一起部署的环境，例如模拟环境。在许多企 业中，集成环境的成本较高，并且需要较长的设置时间。\n\n第5章 架构 |  57\n\n口可以独立部署或发布应用程序，而不必与其依赖的应用程序或\n\n服务一起部署或发布。\n\n我们发现，架构决策的这两种特征，即可测试性和可部署性，对  于实现高绩效非常重要。为了实现这两种特征，需要设计松耦合的系 统，即不同的系统能够进行独立的变更和验证。在2017年的问卷调查 中，我们扩展了分析范围，试图检验松耦合、封装良好的架构能否驱  动IT绩效。我们发现，的确可以。实际上，2017年的分析结果显示， 对持续交付贡献较大的因素(甚至大于测试自动化和部署自动化)是\n\n团队能够做到以下几点。\n\n口无须经过团队之外的人批准，即可对他们所负责的系统设计进\n\n行大范围的变更。\n\n口无须依赖其他团队，即可对他们所负责的系统设计进行大范围\n\n的变更，同时不会给其他团队带来巨大的工作量。\n\n口无须与团队外部的人员沟通和协调，即可完成自己的工作。\n\n口按需部署和发布产品或服务，无须考虑其依赖的其他服务如何。\n\n口无须集成测试环境，即可按需做大部分测试。\n\n口在正常的上班时间执行部署操作，且停机时间可忽略不计。\n\n在架构能力得分较高的组织中，交付团队之间只需少量沟通就能 完成自己的工作，其系统架构旨在使团队能够在不依赖其他团队的情 况下变更、测试和部署自己的系统。换句话说，架构和团队的耦合度\n\n较低。为了实现这一目标，必须确保交付团队是跨职能团队，即同一\n\n58  |  加速：企业数字化转型的24项核心能力\n\n团队具备设计、开发、测试、部署和运维自己负责的系统所需的所有\n\n技能。\n\n关于沟通强度和系统架构之间的关系，最早是由马尔文·康威 (Melvin Conway)[23提出来的。他说：“设计软件系统的组织……会 受到限制，使得该系统的通信结构与该组织的沟通结构近似。”我们 的研究为“逆康威行动”提供了支撑，即组织应该通过调整团队结构 和组织结构，来实现理想的架构。这样做的目的是让软件架构可以支 持团队快速完成其工作(从设计到部署),而无须团队彼此进行大量\n\n的沟通。\n\n让这种策略成为可能的架构方法包括使用限界上下文和 API 将 大型领域分解为更小且耦合度更低的单元领域，以及使用测试替身对 象和虚拟化作为隔离技术，对服务或组件进行隔离测试。就像任何真 正的微服务架构一样，面向服务的架构 (service-oriented architecture,  SOA)  也能够实现上述目的。但是，在实现此类架构时，对结果严格 要求是非常关键的。遗憾的是，在现实生活中，许多所谓的面向服务 的架构并不支持服务之间彼此独立测试和部署，因此团队无法达到更\n\n高的绩效。\n\n当然，DevOps 旨在支持团队更好地协作。我们并不是说，团队 不应该协作。松耦合架构的目标是确保可用的沟通带宽不会被实现级 别的细粒度决策所耗尽。只有这样，我们才能使用更多的沟通带宽来\n\n讨论如何实现更高级别的目标。\n\n第5章架构 | 59\n\n5.3 松耦合架构提供了伸缩能力\n\n如果实现了松耦合且封装良好的架构，并且拥有与之匹配的组织 结构，那么我们会有两大收获。首先，我们能够提高软件交付绩效， 加快开发节奏，提高系统的稳定性，同时降低部署工作的难度并缓解 团队倦怠感。其次，我们还能够大幅扩大工程团队的规模，同时线性\n\n提升生产力(甚至超越线性提升)。\n\n为了度量生产力，我们从所收集的数据中计算了以下指标：开发 人员每人每天的部署次数。对于扩大软件开发团队规模， 一种传统观 点认为，虽然增加开发人数可能会提高整体生产力，但实际上，开发 人员的个体工作效率会因沟通和集成的成本开销而降低。但是，对于 那些每人每天至少部署一次的受访者来说，我们发现这个指标展示了\n\n图5-1所示的结果。\n\n开发人数\n\n图5-1 开发人数与部署频率\n\n60  |  加速：企业数字化转型的24项核心能力\n\n随着开发人数的增长，我们发现了如下趋势。\n\n口低绩效企业的部署频率越来越低。\n\n口中等绩效企业的部署频率基本稳定。\n\n口高绩效企业的部署频率显著增长。\n\n通过关注有助于提高软件交付绩效的因素，例如以绩效为导向 的生机型文化、模块化架构，以及支撑持续交付的工程实践和有效的 领导力，可以实现每人每天的部署次数呈线性增长，甚至超越线性 增长。这让业务能够随着人手的增加而更快地增长，而不是我们经常\n\n看到的与之相反的情况。\n\n5.4 允许团队选择自己的工具\n\n在许多组织中，工程师必须按要求使用统一的工具和框架。这个\n\n规定通常用于实现以下一个或多个目的。\n\n口降低环境的复杂性。\n\n口确保具备必要的能力来管理在整个生命周期内所使用的技术。\n\n口提高跟供应商议价的能力和购买力。\n\n口确保所用的技术或软件都有合法的许可证。\n\n然而，这种做法的缺点是缺乏灵活性。它使团队无法选择那些最 适合自己特殊需求的技术，也不利于团队尝试新方法或新范式来解决\n\n他们遇到的问题。\n\n第5章 架构  |  61\n\n我们的分析表明，工具选择是一项重要的技术工作。团队对工具 的自主选择权有助于提高软件交付绩效，进而提高组织绩效。这并不 奇怪：对于那些开发和交付软件并运行复杂基础设施的技术人员来 说，他们基于什么最适合完成工作和支持用户，来选择自己的工具。 其他一些针对技术人员的研究也得出了类似的结论24]。这表明，将工\n\n具选择权交给团队是利大于弊的。\n\n尽管如此，仍有一些需要标准化的地方，特别是架构和基础设施 的配置。2017年，Jez Humble详细地讨论了标准化运维平台的好处。 另一个例子是 Steve Yegge 对亚马逊转而使用 SOA的描述。他指出： “在调试问题时要依赖其他人写的代码，这是极其困难的。除非以一 种通用的标准方式在可调试的沙箱里运行每个服务，否则基本上是不\n\n可能做到的。”[25]\n\n我们的研究还有另一个发现：将对安全性的要求融入日常工作的 团队，在持续交付方面做得更好。这其中的一个关键因素是，确保信 息安全团队为开发人员和运维人员提供预先批准且易于使用的库、软\n\n件包、工具链和流程，以便他们在工作过程中方便地使用。\n\n这并不矛盾。当工具能够令工程师感觉工作起来更容易时，他们 就会自愿地采用它。这种方式要比强迫他们使用为了方便其他利益相 关者而选择的工具更好。和为外部客户构建产品一样，在为内部客户 选择或构建工具时，关注可用性和客户满意度同样重要。允许工程师\n\n自己选择工具可以确保我们在这方面保持诚实。\n\n62  |  加速：企业数字化转型的24项核心能力\n\n5.5  架构师应该关注结果，而不是工具或技术\n\n围绕架构的讨论通常关注工具和技术。组织应该采用微服务架构 还是无服务器架构?应该使用Kubernetes 还是Mesos?  应该标准化哪 种持续集成服务器、语言或框架?我们的研究表明，这些都不应该作\n\n为关注点。\n\n如果工程师必须使用自己讨厌的工具，或者无法实现期望的目 标，那么无论采用何种工具都无关紧要。真正重要的是让团队可以变 更他们所负责的产品或服务", "metadata": {}}, {"content": "，而不是工具或技术\n\n围绕架构的讨论通常关注工具和技术。组织应该采用微服务架构 还是无服务器架构?应该使用Kubernetes 还是Mesos?  应该标准化哪 种持续集成服务器、语言或框架?我们的研究表明，这些都不应该作\n\n为关注点。\n\n如果工程师必须使用自己讨厌的工具，或者无法实现期望的目 标，那么无论采用何种工具都无关紧要。真正重要的是让团队可以变 更他们所负责的产品或服务，而无须依赖于其他团队或系统。架构师 应该与其用户(也就是那些构建和维护系统以实现组织目标的工程\n\n师)紧密协作，为他们提供工具和技术，以使他们能实现期望的目标。\n\n第6章\n\n将信息安全集成到交付生命周期中\n\n有人说，“DevOps 运动”这个名字起得不好，因为它忽视了测试、 产品管理以及信息安全。DevOps  运动的初衷是，将开发人员和运维  人员拉在一起，创建双赢局面，以实现系统级的目标，而不是将任务  扔过“部门墙”,并且在系统出错时互相指责。然而，这种行为并不  局限于开发部门与运维部门之间。在软件交付价值流中，只要不同的\n\n职能部门无法有效协作，就可能出现这种相互指责的行为。\n\n当讨论信息安全团队的作用时，上述行为尤其明显。在威胁无处  不在且一直持续存在的时代，信息安全是非常重要的职能。然而，信  息安全团队常常人手不足。Signal  Sciences 公司的研究部门负责人  James Wickett指出：在大型公司中，每100名开发人员对应10名基 础设施人员，但只对应1名信息安全人员26。信息安全人员通常只在  软件交付生命周期的最后阶段才参与进来。这时，如果为了提高安全  性而进行必要的变更，那么往往是非常痛苦的，并且成本很高。此外，\n\n许多开发人员不了解常见的安全风险(例如OWASP列举的十大安全\n\n64  |  加速：企业数字化转型的24项核心能力\n\n漏洞风险),以及如何预防它们。\n\n我们的研究表明，在软件开发过程中注重安全保障措施，不仅能 提高软件交付绩效，还能提高软件的安全性。具有高交付绩效的组织\n\n在解决安全问题时所花费的时间会显著减少。\n\n6.1 安全左移\n\n安全左移是指将安全工作融入软件交付流程，而不是将其作为开 发流程的下游阶段。我们发现，安全左移会对实践持续交付产生积极\n\n的影响，进而提高软件交付绩效。\n\n“左移”到底意味着什么呢?首先，对所有主要特性都进行安全 审查，并且审查不会拖慢开发流程。我们如何确保在关注安全性的同 时，不会降低开发吞吐量呢?这就是“左移”的第二个要点：应该将 信息安全集成到整个软件交付生命周期中(从开发到运维)。这意味 着，信息安全专家应该参与应用程序的设计过程，参与有关软件的演 示并提供反馈，同时确保安全性检查作为自动化测试套件的一部分执 行。最后，我们希望开发人员能够轻松地在信息安全方面做正确的事 情。要做到这一点，需要确保将预先批准且易于使用的库、软件包、\n\n工具链和流程提供给开发人员和运维人员使用。\n\n“左移”是指这样的转变：从信息安全团队自己进行安全审查，\n\n转变为向开发人员提供构筑安全性的方法。这基于下面两个事实。首\n\n第6章 将信息安全集成到交付生命周期中  |  65\n\n先，确保构建软件的人做正确的事要比去检查几乎完工的系统和特性 并解决严重的架构问题容易得多。其次，当频繁部署时，信息安全团 队根本无法进行安全审查。在很多组织中，对安全性和合规性的检查 是从“开发完成”到“部署上线”的一个严重的瓶颈。将信息安全人 员纳入整个开发过程中，可以改善沟通和加快信息流动——这既是双\n\n赢的局面，也是 DevOps 运动的核心目标。\n\n美国联邦信息系统的合规性\n\n美国联邦信息系统受《2002 年联邦信息安全管理法案》 (FISMA)  的约束。FISMA 要求美国联邦政府机构遵循美国国家  标准与技术研究院的风险管理框架 (RMF) 。RMF    包含多个步  骤，例如制订系统安全计划，记录相关信息安全控制项的实施  情况，然后评估并生成报告，用于记录验证情况。这个过程可  能需要几个月甚至一年的时间，并且通常只在系统“开发完\n\n成”后才开始。\n\n为了缩短交付联邦信息系统所需的时间并降低成本， 一个 小型公务员团队基于Pivotal公司的Cloud Foundry开源版本创建了 一个“平台即服务”,并把它托管在 AWS上。大多数的安全控制 项(325个控制项中的269个)由平台控制。这样一来，在该平台 上托管的系统从“开发完成”到“部署上线”的时间只需几周就 可以了。这大大地减少了满足RMF要求所需的工作量，从而降低\n\n了成本。\n\n66   | 加速：企业数字化转型的24项核心能力\n\n如果保证安全性成为开发人员日常工作的一部分，并且信息安全 团队为开发人员提供了所需的工具、培训和支持，那么软件交付绩效 就会得到提高。此外，这对提高软件的安全性产生了积极的影响。我 们发现，与低绩效企业相比，高绩效企业在解决安全问题时只需花费 一半的时间。换句话说，通过在日常工作中保证安全性，而不是到最\n\n后再关注安全问题，可以大大地减少解决安全问题的时间。\n\n6.2 坚固运动\n\n为了将信息安全纳入 DevOps,  人们提出了一些新的名称，其中 一个就是 DevSecOps。(这个词是由多位业内人士创造的，包括\n\nCapital One公司的 Topo Pal和 Intuit公司的 Shannon Lietz。)\n\n另外一个名称是坚固 DevOps(Rugged DevOps),由 Josh Corman  和 James Wickett创造。坚固DevOps结合了DevOps与“坚固宣言”。\n\n以下是“坚固宣言”的内容。\n\n口我很坚实，更重要的是，我的代码很坚固。\n\n口我认识到软件已经成为现代社会的基础。\n\n口我认识到这一基础角色带来的巨大责任。\n\n口我认识到自己的代码将以我无法预料的方式被使用，以非其设\n\n计目的的方式被使用，而且使用时间长于预期。\n\n口我认识到自己的代码将受到强劲对手的持续攻击，而这会威胁\n\n我们的人身安全、经济安全和国家安全。\n\n第6章 将信息安全集成到交付生命周期中  |  67\n\n口我认识到上述诸点，并且我选择坚实。\n\n口我坚实，因为我拒绝成为漏洞的起源。\n\n口我坚实，因为我保证自己的代码将服务于它的使命。\n\n口我坚实，因为我的代码可以面对挑战并坚持不懈。\n\n口我坚实，不是因为这样做很容易，而是因为我有必要这样做。\n\n我将直面挑战。\n\n与 DevOps原则肩并肩，为了坚固运动的成功，坚实是每个人的\n\n责任。\n\n第7章\n\n软件开发的管理实践\n\n软件交付管理理论与实践在过去的几十年中发生了重大的变化， 并且出现了多种范式。多年来，项目管理研究所 (Project Management  Institute) 和 PRINCE2等框架所采用的项目管理范式占主导地位。随\n\n着《敏捷宣言》在2001年发表，敏捷方法迅速获得了关注。\n\n同时，制造业中的精益运动思想开始应用于软件。这一运动源于 丰田的制造方法，该方法最初旨在解决在相对较小的日本市场制造各 类汽车的问题。丰田致力于不断改进，这使它能够比竞争对手更快、 更便宜、更高质量地制造汽车。丰田和本田等公司深深地切入了美国 汽车制造行业，这使得行业中的其他玩家只能采纳它们的方法，才能 幸免于难。精益思想最初是由 Mary Poppendieck和 Tom Poppendieck\n\n通过“精益软件开发”系列丛书引入软件开发行业的。\n\n本章将讨论由精益运动衍生而来的管理实践，以及这些实践如何\n\n驱动软件交付绩效的提升。\n\n第7章 软件开发的管理实践  |69\n\n7.1 精益管理实践\n\n我们在研究过程中对精益管理及其在软件交付方面的应用进行\n\n了建模，包括以下3个部分。\n\n限制在制品数量 (workin      progress,WIP),并应用这一限制来推\n\n动流程改进，以提高吞吐量。\n\n创建并维护可视化图表，展示关键的质量指标和生产力指标，以 及当前工作状态(包括缺陷),使工程师和管理层可以对齐这些指标\n\n和运营目标。\n\n基于监控应用程序性能和基础设施的工具所提供的数据，做出每\n\n日决策。\n\n图7-1进一步展示了精益管理的3个部分。\n\n图7-1  精益管理的3个部分\n\n在精益社区中，限制 WIP 和可视化是众所周知的实践。它们不\n\n仅用于确保团队不会变得负担过重(这可能导致前置时间变长),还\n\n70  |  加速：企业数字化转型的24项核心能力\n\n用于暴露工作流程中的障碍。有趣的是，仅仅限制 WIP 并不能显著 提高软件交付绩效。只有当它与可视化技术结合使用，并且交付团队 或业务团队能从生产环境监控工具获得反馈之后，我们才能看到明显\n\n的效果。\n\n现在，值得更深入地看一下我们到底要度量什么。就WIP 而言", "metadata": {}}, {"content": "，限制 WIP 和可视化是众所周知的实践。它们不\n\n仅用于确保团队不会变得负担过重(这可能导致前置时间变长),还\n\n70  |  加速：企业数字化转型的24项核心能力\n\n用于暴露工作流程中的障碍。有趣的是，仅仅限制 WIP 并不能显著 提高软件交付绩效。只有当它与可视化技术结合使用，并且交付团队 或业务团队能从生产环境监控工具获得反馈之后，我们才能看到明显\n\n的效果。\n\n现在，值得更深入地看一下我们到底要度量什么。就WIP 而言， 我们并不只是问团队：“你们能否很好地限制 WIP,  并且实施了相关  的流程?”我们还会问：“限制 WIP能否让你们看到阻碍工作流程的  那些因素?团队是否通过改进流程来移除这些障碍，从而使产出得到  进一步的提升?”如果没有让工作流程变得更畅通，那么仅限制WIP\n\n无济于事。\n\n就可视化而言，我们提出的问题是：“是否使用视觉展示或仪表 板来共享信息?团队是否使用看板或故事墙等工具来组织他们的工 作?是否可以随时获得关于质量和生产力的信息?是否公开展示故 障或缺陷率?能否很方便地获得这些信息?”这里的关键点是了解展 示了哪些类型的信息，共享程度如何，以及是否方便获得这些信息。\n\n可视化及它所带来的高质量沟通是关键。\n\n我们的假说是，结合上述实践可以提高软件交付绩效，事实也的 确如此。而且，这些精益管理实践对团队文化和团队绩效也产生了积 极影响。它们既可以缓解团队倦怠感(第9章将讨论),也可以形成\n\n生机型文化(如第3章所述)。\n\n图7-2展示了精益管理实践的积极影响。\n\n第7章 软件开发的管理实践| 71\n\n图7-2 精益管理实践的影响\n\n7.2 实现轻量级的变更管理流程\n\n在对生产环境进行变更时，每个组织都有自己的变更管理流程。 创业公司的变更管理流程可能非常简单，比如请某个开发人员做一下 代码审查，然后就直接变更了。相比之下，大型组织的变更管理流程 往往需要数天或数周，除了团队级别的审查(如正式的代码审查流程), 还需要团队外部的变更顾问委员会 (change    advisory    board,CAB) 审\n\n查每一项变更。\n\n我们想调研变更管理流程对软件交付绩效的影响。因此，我们针\n\n对以下4种可能的情况询问了受访者。\n\n1. 对生产环境的所有变更都必须得到外部人员(例如经理或CAB)\n\n的批准。\n\n2. 只有高风险的变更(比如数据库变更)才需要审批。\n\n72  |  加速： 企业数字化转型的24项核心能力\n\n3. 依赖同行评审来管理变更。\n\n4. 变更不需要审批。\n\n结果令人惊讶。我们发现，仅审批高风险的变更完全无助于提高软 件交付绩效，而不需要审批变更或依赖同行评审的团队则实现了更高的\n\n软件交付绩效。最后，对于需要外部人员审批变更的团队，其绩效较低。\n\n我们进一步调查了外部人员审批变更的情况，试图了解这种做法 是否有助于提高稳定性。我们发现，外部审批与前置时间、部署频率 和平均恢复时间呈负相关，且与变更失败率无关。简而言之，外部人 员(例如经理或 CAB)  的审批根本无法提高生产系统的稳定性(稳 定性是通过平均恢复时间和变更失败率来度量的)。这种做法明显会\n\n拖慢流程。事实上，它比根本没有变更审批流程更糟糕。\n\n基于研究结果，我们建议使用基于同行评审的轻量级变更管理 流程，例如结对编程或内部代码审查，并结合部署流水线来检测和拒 绝不良变更。此过程可用于各种变更，包括对代码、基础设施和数据\n\n库的变更。\n\n职责划分\n\n在受监管的行业中，职责划分通常要么在法规中明确要求 (例如支付卡行业的数据安全标准),要么由审计员明确要求。但 是，实现此控制不需要通过 CAB或单独的运维团队。有两种机\n\n制可用于有效地实现该控制。\n\n第7章软件开发的管理实践  |  73\n\n首先，对于提交到版本控制系统中的任何类型的变更，都应由某 个未参与变更的人在提交之前或之后立即审查。这个人可能与变更提 交者处于同一个团队。此人应使用GitHub 等记录系统(通过批准 pull request)  或部署流水线工具(通过在提交后立即触发手动审批阶段)\n\n记录其审批动作。\n\n其次，变更只能通过全自动化流程部署到生产环境，并且这个流 程必须是部署流水线的一部分。也就是说，变更必须被提交到版本控 制系统，自动触发部署流水线，并经过标准的构建与测试过程，才能 进行部署。作为实施部署流水线的结果，审计员将完整记录应用了哪 些变更，它们被应用到了哪些环境，这些变更来自版本控制系统中的 哪个版本，经过了哪些测试和验证，以及谁在何时批准了这些变更。\n\n因此，在对安全性要求比较高的行业中，部署流水线尤其有价值。\n\n从逻辑上讲，由外部人员审批变更明显是有问题的。毕竟，软件 系统很复杂。每个开发人员都可能做过看似无害的变更，结果却令系 统的某个部分不工作了。 一个不太熟悉系统的外部机构，通过审查那 由数百名工程师写出来的数万行代码，就能确认这些代码对复杂生产 系统的影响，这种可能性有多大呢?由外部人员审批变更是一种“风 险管理作秀”:我们在选项上打勾，这样一来，当出现问题时，我们 至少可以说自己是照章办事的。在最好的情况下，这种做法也只会导\n\n致时间延迟和推卸责任。\n\n我们认为，对于有效地管理变更风险，外部人员的确有用武之地，\n\n74   | 加速：企业数字化转型的24项核心能力\n\n但他们往往起的是治理作用，而非审查作用。他们应该监控软件交付 绩效，并通过采用那些已知能够提高稳定性、质量和速度的实践来帮\n\n助团队改进，例如本书中描述的持续交付实践和精益管理实践。\n\n7.3   结论\n\n本章研究了管理实践对软件交付绩效的影响。我们看到，可以采 用精益管理实践来提高软件交付绩效，例如限制 WIP 以揭示改善工 作流的方法，创建可视化图表，以及使用生产系统的反馈来做出业务 决策。我们还看到，团队最好采用轻量级同行评审流程来管理对生产\n\n环境的变更，而无须通过外部人员来审批所有变更。\n\n在第8章中，我们将把注意力转向影响组织绩效的产品管理实践。\n\n第8章\n\n产品管理\n\n作为一个品牌，“敏捷”在方法论战争中或多或少已经取得了胜 利。然而，大多数敏捷实践并非真正敏捷。人们遵循一些常见的实践， 却没有解决组织文化和流程的问题。举例来说，在一些大型公司中， 人们在开始工作之前仍然需要花数月时间来讨论预算、分析，以及收 集需求。所有工作被放到一个大项目里， 一次性交付，而不是多次发 布，用户反馈也是在事后处理的。相反，精益产品开发和精益创业运 动强调的是，从产品生命周期的一开始就通过频繁的用户调研来检验\n\n产品设计和商业模式。\n\nEric Ries的书《精益创业》掀起了一股热潮，人们希望利用轻量 级方法在不确定的条件下探索新的商业模式和产品创意。Eric Ries将  精益运动、设计思维和企业家Steven Blank的创业思想127综合在一起， 强调采用实验方法进行产品开发的重要性。这种方法包括从一开始就  构建和验证产品原型、小批量工作，以及基于用户调研结果尽早、频\n\n繁地改善或“调整”(pivoting)   产品及其背后的商业模式。\n\n76  |  加速：企业数字化转型的24项核心能力\n\n我们想了解上述实践是否直接影响组织绩效。度量指标包括生产\n\n力、市场份额和盈利能力。\n\n8.1 精益产品管理实践\n\n我们研究了4个因素，它们共同构成了我们的精益产品开发方法\n\n模型。\n\n1. 产品开发和特性开发的分解程度。团队将相关工作分解成可 在1 周内完成的小批量工作，并经常发布，包括使用最小可\n\n行产品 (minimum  viable  product,MVP)。\n\n2. 团队是否充分了解从业务直到客户的完整工作流，以及他们 是否可以清楚地“看到”这个流程，例如产品和特性的状态\n\n如何。\n\n3. 组织是否积极且定期地寻求用户反馈，并将这种反馈纳入产\n\n品设计考虑之中。\n\n4. 在开发过程中，开发团队是否可以不经过审批就创建或修改\n\n规格说明文档。\n\n分析表明，以上因素在统计意义上能够显著提高软件交付绩效和 组织绩效，而且能够改善组织文化并缓解团队倦怠感。经过几年的研 究，我们也发现软件交付绩效会影响精益产品管理实践。这种相辅相 成的关系形成了良性循环。提高软件交付效率会提高小批量工作的能\n\n力，进而提高处理用户反馈的能力。\n\n第8章 产品管理  |77\n\n图8-1总结了精益产品管理模型的4个组成部分。\n\n图8-1 精益产品管理模型的4个组成部分\n\n小批量工作\n\n小批量工作的关键在于将工作分解成多个可以迅速开发的 特性，而不是在分支上开发复杂的特性", "metadata": {}}, {"content": "，我们也发现软件交付绩效会影响精益产品管理实践。这种相辅相 成的关系形成了良性循环。提高软件交付效率会提高小批量工作的能\n\n力，进而提高处理用户反馈的能力。\n\n第8章 产品管理  |77\n\n图8-1总结了精益产品管理模型的4个组成部分。\n\n图8-1 精益产品管理模型的4个组成部分\n\n小批量工作\n\n小批量工作的关键在于将工作分解成多个可以迅速开发的 特性，而不是在分支上开发复杂的特性，从而导致低频发布。 这种方法既可以用于特性级别，也可以用于产品级别：MVP  是 一个产品原型，这个原型只具有刚好能够对产品及其商业模式 进行验证式学习的特性。小批量工作能缩短前置时间，并加速\n\n反馈循环。\n\n在软件组织中，具备小批量工作和交付的能力特别重要， 因为它让你能够通过 A/B 测试快速收集用户反馈。值得注意的\n\n是，实验性的产品开发方法与持续交付实践密切相关。\n\n收集用户反馈包括多种实践：定期调查用户满意度，积极收集 用户对产品质量和特性的意见，使用这种反馈来为产品和特性的设 计提供信息依据。因此，确保团队有权对这种反馈做出响应也非常\n\n重要。\n\n78   | 加速：企业数字化转型的24项核心能力\n\n8.2  团队实验\n\n在那些声称自己敏捷的组织中，很多团队仍旧需要严格遵守其他 团队的规定。这种限制会造成一些问题，从而导致产品无法真正取悦\n\n用户，也无法交付所期望的业务结果。\n\n敏捷开发的一个重点就是在整个开发过程中寻求用户反馈，包括 在早期阶段。这让开发团队能收集一些重要信息，从而指导下一阶段 的开发工作。但是，假如没有团队外部人员的许可，就不允许开发团 队变更需求或规格说明文档，以便及时解决他们所发现的问题，那么\n\n开发团队的创新能力就被严重束缚了。\n\n我们的分析表明，当用盈利能力、生产力和市场份额来度量组织 绩效时， 一个重要因素是开发团队能否不经过外部审批，就可以尝试\n\n新的创意和更新规格说明文档。\n\n我们并不是建议你让开发人员随意实现他们自己喜欢的想法。为 了有效地提高组织绩效，团队实验应该与我们所度量的其他能力相结 合：小批量工作，可视化管理，收集并采纳用户反馈。这样做就能保 证团队在做设计、开发和交付工作时，可以做出有理有据的决策，并 且可以根据反馈做出变更。此外，这样做也能确保团队所做出的决策 可以在整个组织中得到充分理解。这样一来，他们所交付的特性也就\n\n可能更容易令用户满意，同时给组织带来更多的价值。\n\n第8章 产品管理 |  79\n\n8.3  有效的产品管理驱动绩效\n\n我们花了两年时间对精益产品管理能力进行分析。在第一年的模 型中，我们看到精益产品管理实践对软件交付绩效有积极影响，并能\n\n促进生机型文化和缓解倦怠感。\n\n在第二年，我们翻转了模式，并且证实了软件交付绩效也能驱动 精益产品管理实践。提高软件交付能力有助于团队采用小批量工作方 式，并开展用户研究，从而产出更好的产品。如果将前后两年的模型 结合在一起，我们就得到了一个双向模型，或者说一个良性循环。我 们还发现，如果以生产力、盈利能力和市场份额来衡量，那么精益产 品管理实践也提高了组织绩效。由软件交付绩效和精益产品管理实践\n\n形成的这个良性循环能够促进组织取得更好的成果，如图8-2所示。\n\n图8-2 精益产品管理实践的影响\n\n80  |  加速； 企业数字化转型的24项核心能力\n\n在软件组织中，具备小批量工作和交付的能力特别重要，因为 它让团队能够将用户研究集成到产品的开发和交付过程中。此外， 在产品开发中采用实验方法的能力与持续交付所用的技术实践密切\n\n相关。\n\n第9章\n\n让工作可持续\n\n为了确保提高软件交付绩效不是靠蛮力或以团队成员的精神健 康为代价，我们调研了团队的倦怠度，以及部署过程的痛苦程度。 之所以度量这些，是因为我们知道在技术行业，它们是非常重要的问\n\n题，可能导致疾病、人员流失或者数百万美元的损失。\n\n9.1 部署之痛\n\n关于一个团队的软件交付绩效如何，其工程师和技术人员在向生 产环境部署代码时所感到的害怕和焦虑说明了一切。我们把这种害怕 和焦虑叫作“部署之痛”,对它进行度量非常重要。这是因为，它突 出了软件的开发和测试工作与运维工作之间的摩擦和裂痕。开发团队 和运维团队之间常常存在这种裂痕，差异无处不在：环境、流程、方\n\n法论、思维方式，甚至各个团队用于描述自己工作的语言。\n\n82   |  加速：企业数字化转型的24项核心能力\n\n除了自己的切身感受，我们在过去多年里与负责构建和部署软件 的专业人员交流时也发现，缓解部署之痛至关重要。正因如此，我们 想调研部署之痛，看看它是否可以度量，更重要的是，它是否受 DevOps 实践的影响。我们发现，组织在部署代码时越痛苦，它的软\n\n件交付绩效、组织绩效和组织文化就越差。\n\n微软在持续交付方面的收获\n\n对于从持续交付中受益，微软工程团队是一个活生生的例 子。Thiago Almeida 是微软的高级软件开发工程负责人，他在 Azure 团队负责云计算、开源和 DevOps 实践。在向团队宣讲持 续交付实践的额外收益时，他说道：  “你可能认为，所有的好 处都给你的客户了，但是我们公司内部也受益。”在 Bing 团队 采用持续交付实践之前，工程师对工作与生活平衡的满意率只 有38%。在采用持续交付实践之后，满意率提升到了75%。如 此显著的差异说明，技术人员能够在工作时间更好地完成任\n\n务，不必手动进行部署，也不会把工作压力带回家。\n\n部署之痛可能表明，软件开发和交付工作在你的组织里是不可持 续的。还有另外一个问题：开发团队和测试团队对代码的部署过程不 够了解。如果对你的团队来说，代码部署过程是不可见的——当被问 及软件部署是怎样进行的时，团队成员的答案是“我不知道……我从 来没有想过这个问题”——那么这是软件交付绩效可能较低的另一个\n\n警告信号。这是因为，如果开发人员或测试人员不了解部署过程，那\n\n第9章 让工作可持续  |  83\n\n么很可能是因为一些屏障将他们与部署工作隔开了。用屏障将部署工 作与开发人员或测试人员隔离开，这么做几乎没有好处，因为开发人\n\n员或测试人员无法了解他们的工作结果。\n\n开发人员和运维人员常常问我们：“可以采取哪些措施来缓解部 署之痛，并改善技术人员的工作?”为了回答这个问题，我们在2015 年～2017年的研究中纳入了部署之痛。根据我们自己在软件开发和 交付方面的经验，以及与系统工作人员的交谈，我们创造了一种方法， 用来捕捉人们在部署代码时的感受。度量部署之痛非常简单直接：我 们询问受访者是否害怕部署，部署是否会使他们的工作受到干扰，或\n\n者相反，他们是否认为部署过程非常容易。\n\n我们的研究表明，提高关键的技术能力可以减轻部署之痛。当采 用下列实践时，团队可以减轻部署之痛：使测试和部署全面自动化； 开展持续集成，包括基于主干的开发、安全左移、有效地管理测试数 据；采用松耦合的系统架构；自主地工作；对一切进行版本管理以便\n\n重现生产环境。\n\n换句话说，那些有助于提高软件交付速度和系统稳定性的技术实 践也会减轻将代码推向生产环境所带来的压力和焦虑。第4章和第5\n\n章概述了这些技术实践。\n\n统计分析表明，部署之痛与关键结果高度相关：部署越痛苦，软\n\n件交付绩效、组织绩效和组织文化就越差。\n\n84  |  加速：企业数字化转型的24项核心能力\n\n从根本上说，大多数部署问题是由复杂且脆弱的部署过程引起 的。这通常涉及3个因素。首先，人们在写软件时通常不会考虑可部 署性。 一个常见的问题就是需要进行复杂的编排部署，因为软件对其 运行环境和依赖关系有非常特殊的要求，并且在要求无法滿足时就会 出错，而管理员又得不到太多有关系统为何出错的有用信息。(这些\n\n特征也表明，该分布式系统的设计很糟糕。)\n\n其次，如果在部署过程中必须对生产环境执行手工变更，那么部 署失败的可能性会大大增加。手工變更很容易因打字、复制或粘贴的 失误，以及参考不良或过时的文档而导致出错。此外，如果人工管理 运行环境的配置信息，那么不同的环境经常会出现差异(这也被称为 “配置漂移”),这会导致在部署时需要做大量的工作，因为操作员需 要通过调试才能够了解配置之间的差异，而且可能会进一步增加手工\n\n變更引发的问题。\n\n最后，复杂的部署通常需要在不同团队之间进行多次工作交接，\n\n第9章 让工作可持续  |  85\n\n这种情况在筒仓式组织中尤为明显。在筒仓式组织中，数据库管理员、 网络管理员、系统管理员、信息安全工程师、测试人员/QA 人员，以\n\n及开发人员在各自的团队中工作。\n\n为了减轻部署之痛", "metadata": {}}, {"content": "，因为操作员需 要通过调试才能够了解配置之间的差异，而且可能会进一步增加手工\n\n變更引发的问题。\n\n最后，复杂的部署通常需要在不同团队之间进行多次工作交接，\n\n第9章 让工作可持续  |  85\n\n这种情况在筒仓式组织中尤为明显。在筒仓式组织中，数据库管理员、 网络管理员、系统管理员、信息安全工程师、测试人员/QA 人员，以\n\n及开发人员在各自的团队中工作。\n\n为了减轻部署之痛，我们应该做到如下几点。\n\n口在构建系统时，就考虑如何能将其轻松地部署到多种环境，检 测并容忍其运行环境中的故障，并且系统的各个组件可以独立\n\n更新。\n\n口确保可以通过版本控制系统保存的信息以一种自动化方式重\n\n现生产系统的状态(生产数据除外)。\n\n口将智能构建于应用程序和平台之中，以便部署过程尽可能简单。\n\n对于那些依赖“平台即服务”供应商(例如 Heroku 、Pivotal Cloud Foundry 、RedHat OpenShift 、Google Cloud Platform 、AWS 或 Microsoft Azure)  进行开发的应用，应该做到用一个命令就能完成部署。你可\n\n以在Twelve-FactorApp 网站上找到支持这种部署的一组架构模式。\n\n既然我们已经讨论了部署之痛，并且已经了解了一些应对策略， 那么让我们来讨论倦怠度吧。如果不加以控制，部署之痛就可能导致\n\n倦怠感。\n\n9.2 倦怠\n\n倦怠感是指由过度劳累或压力引起的身体、精神或情绪上的疲\n\n86   |  加速：企业数字化转型的24项核心能力\n\n惫，而不只是过度劳累或压力大。它会让我们对曾经喜爱的工作和生 活提不起兴趣，通常表现为无助感，并且常常与病态型组织文化和低\n\n效且徒劳的工作相关。\n\n对个人及其团队和组织来说，倦怠感的后果都很严重。研究表明， 压力大的工作对身体健康的影响可能与二手烟28)和肥胖l29一样大。  倦怠感的表现包括感到精疲力竭，愤世嫉俗或低效；少有或根本没  有工作成就感；在工作上的这些感受还会对生活中的其他方面产生  负面影响。在极端情况下，倦怠感会导致家庭问题、严重抑郁，甚至\n\n自杀。\n\n工作压力也会影响雇主。美国每年因病假、长期无法工作和过高 的换岗率而导致的经济损失约为3000亿美元[30]。因此，雇主既有照\n\n顾员工的责任，也有义务确保员工不会过度疲劳。\n\nDevOps 有助于预防职业倦怠，甚至让生活变得更好。组织可以 通过提供温馨的工作环境来确保工作有意义，并让员工了解自己的工\n\n作如何与组织的战略目标联系在一起。\n\n与其他快节奏、高产出的工作一样，软件开发及相关技术工作也 受到职业倦怠的困扰。尽管从长期来看，工作环境更为重要，但像许 多其他善意的管理者一样，技术团队的管理者仍旧试图去帮助出现问 题的员工，而忽视了工作环境。希望避免员工疲劳的管理者应该将注\n\n意力和精力集中在以下方面。\n\n第9章 让工作可持续  |  87\n\n口营造尊重且支持员工的工作环境，强调从失败中学习，而不是\n\n责备。\n\n口传达强烈的目标感。\n\n口投资于员工的发展。\n\n口询问员工，是什么阻止他们实现工作目标，然后解决这些问题。\n\n口为员工提供时间、空间和资源进行尝试和学习。\n\n最后，同样重要的是，员工必须有权做出关乎其工作和岗位的决\n\n策，特别是在他们对结果负责的领域中。\n\n9.2.1  导致倦怠的常见原因\n\n美国加州大学伯克利分校心理学教授Christina Maslach 是职业倦\n\n怠研究方面的先行者，她发现了预测职业倦怠的6个组织风险因素”。\n\n1. 超负荷工作：工作需求超出人的极限。\n\n2. 缺乏控制：对那些影响自身工作的决策没有话语权。\n\n3. 奖励不足：经济奖励或其他奖励不充分。\n\n4.  社区割裂：工作环境缺乏支持。\n\n5. 缺乏公平性：决策过程缺乏公平性。\n\n6. 价值冲突：组织价值观与个人价值观不匹配。\n\nMaslach发现，尽管她的研究表明改善工作环境的成功概率更高，\n\n① 我们注意到有其他倦怠模型， 一个突出的例子是 Marie Asberg 的模型。不过，我 们在研究中专注于Christina Maslach的模型。\n\n88  |  加速：企业数字化转型的24项核心能力\n\n但大多数组织仍旧试图解决人的问题，而忽视工作环境的问题。上述 所有风险因素都是管理层有能力改变的事情。要了解领导力和管理层\n\n在 DevOps中的重要性和影响，请参阅第11章。\n\n为了度量倦怠感，我们询问受访者如下问题。\n\n口是否感到疲惫不堪或者筋疲力尽? 我们中的许多人知道倦怠感\n\n是什么感觉，而且常常因此而筋疲力尽。\n\n口是否对自己的工作漠不关心，或者觉得自己在白费力气? 倦怠感的\n\n典型标志是对工作漠不关心，并且感觉自己的工作不再有用。\n\n口工作是否对生活产生了负面影响? 当工作开始对生活产生负面\n\n影响时，你经常会出现职业倦怠。\n\n我们的研究发现，对于受访者，改善技术实践(例如那些有助于 持续交付的实践)和精益实践(例如精益产品管理实践)可以缓解他\n\n们的倦怠感。\n\n9.2.2  如何缓解或战胜倦怠\n\n我们通过研究找到了与职业倦怠感最为密切相关的组织因素，\n\n以及应从哪些方面着手寻找解决方案。以下列出这5个组织因素。\n\n1. 组织文化。在以权力为导向的病态型组织文化中，人们往往 具有强烈的职业倦怠感。管理者有责任营造支持和尊重员工 的工作环境，而且这是可以做到的：不责备员工，大家努力\n\n从失败中学习，并且齐心协力地实现共同的目标。此外，管\n\n第9章 让工作可持续  | 89\n\n理者还应该留意其他有关因素，并谨记人为错误绝非系统失\n\n败的根本原因。\n\n2. 部署之痛。在非工作时间执行复杂且痛苦的部署必定会导致 高压力和缺乏控制感”。如果采用合适的实践，那么部署并不 一定痛苦。经理或负责人应该向他们的团队了解部署的痛苦\n\n程度，并且解决那些引起严重伤害的问题。\n\n3. 领导者的作用。团队领导的职责包括限制在制品数量和消除团 队的障碍，以便团队顺利完成工作。那些表示职业倦怠程度\n\n较低的受访者通常有一个能干的团队负责人，这一点儿也不\n\n奇怪。\n\n4. 组织在 DevOps 方面的投入。在培养团队技能和能力方面有所 投入的组织可以获得更好的结果。在培训方面进行投入，并 且为员工提供必要的支持和资源(包括时间)以获得新技能，\n\n这些措施对于成功实践DevOps 至关重要。\n\n5. 组织绩效。我们的数据显示，精益管理实践和持续交付实践 有助于提高软件交付绩效，从而提高组织绩效。精益管理的 核心是为员工提供必要的时间和资源来改善自己的工作。这 意味着，营造一个大力支持试错和学习的工作环境，并授权 员工对影响其自身工作的事情做出决策。这也意味着为员工 创造空间，让他们在工作时间进行新的、有创造性的增值活\n\n动，而不是期望他们在下班以后花费额外的时间做这些事。\n\n① 请注意，部署后的痛苦也需要留意：在非工作时间不断呼叫待命人员的问题系统 不利于员工的身心健康。\n\n90  |  加速：企业数字化转型的24项核心能力\n\n举两个很好的例子。谷歌公司允许员工将每周工作时间的 20%用于新项目。IBM 在周五下午不安排会议，并鼓励员工\n\n在周五下午做那些平时没有时间做的新项目。\n\n值得一提的是，价值观一致性在对抗倦怠时扮演着重要的角色。 当组织价值观和个人价值观不一致时，员工更有可能倦怠，尤其是在 要求苛刻且高风险的工作中，比如科技行业。这种情况很普遍，其伤\n\n害很大。\n\n我们认为，相反的情况才是更有希望且可行的：当组织价值观和 个人价值观一致时，倦怠的影响可以降低甚至抵消。如果一个人极其 重视环境保护，但是他所在的组织向附近的河流倾倒污水，并花钱游 说当地政府允许他们这样做，那么这个人及其组织就缺乏价值观一致 性。如果另一个组织承诺对环境保护负有社会责任，那么具有环保意 识的人可能更愿意为该组织工作。这是容易被组织忽视却可能危及组  织的一个方面。通过将组织价值观和个人价值观结合起来，可以缓解 员工的职业倦怠。想象一下它对员工满意度、生产力和离职率的影响，\n\n其对组织和经济的潜在价值十分惊人。\n\n值得注意的是，这里提到的组织价值观是员工真实感受到的组织 价值观。如果员工感受到的组织价值观与组织宣称的价值观(也就是 印在纸上或者标语牌上的使命宣言)不同，那么员工更有可能相信自 己的感受。如果员工的个人价值观与其组织价值观不符，或者组织宣\n\n称的价值观与其实际价值观不符，则员工将出现倦怠问题。但是，如\n\n第9章让工作可持续  |  91\n\n果它们是一致的，员工就会茁壮成长。\n\n总之，我们的研究发现，持续交付实践和精益管理实践有助于缓 解倦怠感和部署之痛，如图9-1所示。这些发现对技术组织产生了重 要影响：技术上的投入不但使组织能够更好地开发和交付软件", "metadata": {}}, {"content": "，那么员工更有可能相信自 己的感受。如果员工的个人价值观与其组织价值观不符，或者组织宣\n\n称的价值观与其实际价值观不符，则员工将出现倦怠问题。但是，如\n\n第9章让工作可持续  |  91\n\n果它们是一致的，员工就会茁壮成长。\n\n总之，我们的研究发现，持续交付实践和精益管理实践有助于缓 解倦怠感和部署之痛，如图9-1所示。这些发现对技术组织产生了重 要影响：技术上的投入不但使组织能够更好地开发和交付软件，还使\n\n专业人员的工作和生活变得更加美好。\n\n图9-1 持续交付实践和精益管理实践的影响\n\n我们讨论了组织文化的重要组成部分，以及改进和度量组织文化 的方法。接下来，我们讨论身份认同感和员工满意度，以及它们对技\n\n术转型的意义。\n\n第 1 0 章\n\n员工满意度和身份认同感\n\n人是技术转型的核心。由于市场压力迫使技术解决方案的交付 速度更快，因此员工的招聘、留存和幸福感变得比以往任何时候都\n\n重要。\n\n我们希望在研究中覆盖受实施 DevOps所影响的人群，并看看哪 些实践能够改善他们的工作，以及这些实践是否会对组织产生积极影 响。我们的研究发现，员工的敬业度和满意度体现了其忠诚度和身份 认同感，有助于缓解职业倦怠感，并且可以促进关键的结果，比如盈 利能力、生产力和市场份额。本章将展示如何度量这些关键的人力因 素，以便你在自己的团队中加以利用，无论你是领导者、管理者还是\n\n普通的员工。\n\n本章将先讨论员工忠诚度(通过员工的净推荐值和身份认同感来\n\n度量)和工作满意度，然后讨论多样性。\n\n第10章 员工满意度和身份认同感  | 93\n\n10.1 员工忠诚度\n\n我们通过净推荐值 (Net Promoter Score,NPS)     来了解员工在技 术转型和 DevOps背景下的敬业度。NPS 是被广泛使用的客户忠诚度\n\n基准。\n\n根据对员工净推荐值 (eNP S)  的度量，我们发现高绩效企业的员 工忠诚度较高。具体地说，高绩效企业的员工认为其工作场所不错的 概率是其他企业的2.2倍。其他研究也表明，员工忠诚度与更好的业\n\n绩表现强相关。\n\n度量 NPS\n\nNPS 的计算仅基于这样一个问题：你向朋友或同事推荐我们的\n\n公司/产品/服务的可能性有多大?\n\nNPS介于0和10之间。我们按如下方式将客户分类。\n\n口给出9分或10分的客户被视为推荐者。推荐者能为公司创造 更大的价值，因为他们倾向于购买更多产品，留存成本更低，\n\n停留时间更长，并能产生良好的口碑。\n\n口给出7分或8分的人是被动者。被动者对产品比较满意，但并 不那么热情。他们不太可能推荐产品，而且当出现更好的竞品\n\n时，他们很有可能会转而使用竞品。\n\n口给出0～6分的人是批评者。批评者的留存成本更高，他们会\n\n94   |  加速：企业数字化转型的24项核心能力\n\n更快地转而使用竞品，并且可能通过负面评价来贬损产品。\n\n在研究中，我们询问受访者以下两个问题，并由此计算eNPS。\n\n1. 你会推荐朋友到你当前所在的组织里工作吗?\n\n2.  你会推荐朋友到你当前所在的团队里工作吗?\n\n我们对比了高绩效企业中的推荐者(得分为9或10)与低绩效 企业中的推荐者。我们发现，高绩效企业的员工将其组织推荐给朋友 的概率是低绩效企业的2.2倍，将其团队推荐给朋友的概率是低绩效\n\n企业的1.8倍。\n\n这是一项重大发现，因为有其他研究表明，“对于员工敬业度较 高的公司，其收入增长率是员工敬业度较低的公司的2.5倍。从1997 年到2011年，对于拥有高信任度工作环境的上市公司，其股票的表\n\n现优于市场指数”[31]。\n\n员工敬业度不仅仅是一种感觉良好的指标，它还能推动业务成\n\n果。我们发现eNPS 与以下构念显著相关。\n\n口组织能够在多大程度上收集用户反馈并将其作为产品和特性\n\n设计的依据?\n\n口团队能够在多大程度上了解“从开发到交付给用户”这一完整\n\n的产品流程?\n\n口员工在多大程度上与其组织的价值观和目标保持一致，并且愿\n\n意为组织的成功付出努力?\n\n第10章 员工满意度和身份认同感  |  95\n\n当员工看到自己所做的工作对用户产生积极影响时，他们会更加\n\n强烈地认同组织的目标，从而提高软件交付绩效和组织绩效。\n\n10.2  改变组织文化和身份认同感\n\n虽然人是组织最重要的资产，但往往被视为消耗性资源。如果 领导者投入资源帮助员工尽最大的努力做好工作，员工就会更加认同 组织，并愿意加倍努力，以帮助其取得成功。作为回报，组织可以提 高绩效和生产力，从而为业务带来更好的结果。图10-1 展示了这些\n\n发现。\n\n96  |  加速：企业数字化转型的24项核心能力\n\n图10-1 持续交付实践和精益管理实践对身份认同感和组织绩效的影响\n\n有效的管理实践与持续交付等技术方法相结合，不仅能提高绩效， 还能对组织文化产生可度量的积极影响。随着研究的深入，我们新增 了一个度量项：受访者对其所在组织的认同程度。为了度量这一点，  我们询问受访者在多大程度上赞同以下陈述(改编自Atreyi Kankanhalli\n\n等人的陈述(33)。\n\n口我庆幸自己选择了为这个组织工作。\n\n口在向朋友介绍时，我将组织描述为很好的工作场所。\n\n口我愿意付出超预期的努力，来帮助我的组织取得成功。\n\n口我发现自己的价值观和组织的价值观非常相似。\n\n口总体而言，我和同事都朝着同一个目标努力。\n\n口我觉得我的组织关心我。\n\n我们使用利克特量表来度量受访者对以上陈述的赞同程度。这些 条目符合度量构念(在这里是“身份认同感”)的所有统计条件。因 此，要度量你所在团队的身份认同感，你可以将所有条目的分数求平\n\n均值，作为某个团队成员的身份认同感分数。(有关心理测量学和潜\n\n第10章 员工满意度和身份认同感  |  97\n\n在构念的讨论，请参阅第13章。)\n\n我们的关键假设是，采用持续交付实践和做实验的方法进行产品 开发的团队将构建更好的产品，并且会感觉自己与组织里的其他人保 持更紧密的联系。这反过来又创造了良性循环：通过创造更高的软件 交付绩效，团队提高了验证其想法的速度，并实现了更高的工作满意\n\n度和组织绩效。\n\n另一个关键假设是，身份认同感意味着个人价值观与团队和组织 的目标一致。第9章说过，产生倦怠感的一个主要原因是个人价值观 和组织价值观不匹配。这告诉我们，身份认同感可以通过对齐个人价 值观和组织价值观来帮助缓解职业倦怠。由于持续交付实践和精益管 理实践有助于增强身份认同感，因此对这些实践的投入可能非常有助 于缓解职业倦怠。这为企业的价值创造建立了良性循环：对技术和流\n\n程的投入让员工能够更好地工作，从而为客户和业务创造更大的价值。\n\n这与许多公司仍旧采用的工作方式形成鲜明对比：这些公司将需 求传达给开发团队，然后开发团队必须大批量交付工作。在这种模式 下，员工对他们构建的产品及其创造的价值几乎没有任何控制权，他 们与其所在组织也几乎没有联系。这会极大地打击团队的积极性，并\n\n导致员工在情感上与工作脱节，进而导致糟糕的产出。\n\n从生产力、市场份额和盈利能力等方面来看，员工的身份认同程 度与组织绩效和以绩效为导向的生机型文化息息相关。这不难理解。\n\n如果说人是公司最重要的资产——许多企业领导者称自己是这样认\n\n98   |  加速：企业数字化转型的24项核心能力\n\n为的——那么拥有强烈认同公司的员工就是一大竞争优势。\n\n某财富500 強公司的一位高管曾经问 Netflix 的著名云架构师 Adrian   Cockcroft:“你是从哪里找到那么多出色人才的?”Cockcroft 回答：“我是从你那里找到的啊!”我们的分析结论很明确：在当今这 个快速发展和竞争激烈的世界里，你能为你的产品、公司和员工做的 最好的事情就是建立一种支持实验和学习的文化，并在促进这种文化 的技术和管理方法上有所投入。正如第3章所述，健康的组织文化有\n\n助于找到并留住人才，最优秀且最具创新性的公司正在利用这一点。\n\n10.3 工作满意度如何影响组织绩效\n\n我们之前提到了关于软件交付绩效的良性循环，它在员工与组织 的关系方面也发挥作用。研究结果表明，如果感受到来自组织的支持， 并拥有完成工作所需的工具和资源，还能感到自己的意见受到重视， 那么员工能够更好地完成工作。这可以提高软件交付绩效，从而提高\n\n组织绩效", "metadata": {}}, {"content": "，并在促进这种文化 的技术和管理方法上有所投入。正如第3章所述，健康的组织文化有\n\n助于找到并留住人才，最优秀且最具创新性的公司正在利用这一点。\n\n10.3 工作满意度如何影响组织绩效\n\n我们之前提到了关于软件交付绩效的良性循环，它在员工与组织 的关系方面也发挥作用。研究结果表明，如果感受到来自组织的支持， 并拥有完成工作所需的工具和资源，还能感到自己的意见受到重视， 那么员工能够更好地完成工作。这可以提高软件交付绩效，从而提高\n\n组织绩效，如图10-2所示。\n\n图10-2 持续交付实践和精益管理实践对工作满意度和组織绩效的影响\n\n第10章 员工满意度和身份认同感  |  99\n\n这种持续改进和学习的循环让一些公司脱颖而出。这些公司能够\n\n创新并领先于竞争对手。\n\nDevOps  如何提升工作满意度\n\n虽然 DevOps的根本在于文化，但需要注意的是，工作满意度在 很大程度上取决于是否拥有合适的工具和资源来完成工作。事实上， 我们利用几个关键点来度量工作满意度：是否对自己的工作感到满 意，是否拥有完成工作所需的工具和资源，以及工作本身是否充分利 用了你的技能和能力。把这3点列出来是非常重要的，因为它们对工\n\n作满意度有很大的影响力。\n\n工具是DevOps实践的重要组成部分，其中许多工具可以实现自 动化。此外，我们发现，良好的 DevOps 实践有助于提高工作满意度。 自动化很重要，因为它让计算机去做计算机擅长做的事情。这些重复  性的任务不需要思考，而且计算机会比人类做得更好。由于人类在这 类任务上的表现非常糟糕，因此将它们交给计算机去做，就可以让人  类专注于自己擅长的事情：权衡证据、思考问题和做出决策。能够将  自己的判断和经验应用于具有挑战性的问题上，是让人们对工作满意\n\n的重要因素。\n\n我们在与工作满意度密切相关的度量指标中找到了一些共性。主 动监控、测试自动化和部署自动化等实践都可以自动执行琐碎的任 务，并要求人们根据反馈循环做出决策。这样一来，人们不再管理任\n\n务，而是利用自己的技能、经验和判断力来做出决策。\n\n100   |  加速：企业数字化转型的24项核心能力\n\n10.4  关于技术领域的多样性\n\n多样性很重要。已有研究表明，在性别或少数族裔等方面更具多 样性的团队，往往表现更佳、绩效更高、业务成果更好。我们的研究 表明，团队的多样性往往不强。我们建议那些希望实现高绩效的团队 应该尽最大努力招募和留住更多女性和少数族裔，并努力提高其他方\n\n面的多样性，例如聘用残障人士。\n\n然而，只有多样性是不够的。团队和组织还必须具有包容性。在 具有包容性的组织里，“无论是谁、做了什么,所有成员都觉得受到 欢迎和重视。所有利益相关者都有强烈的归属感和实现共同目标的决\n\n心”134]。为了实现多样性，就必须有包容性。\n\n10.4.1 DevOps  运动中的女性\n\n我们在2015年的研究中开始询问有关性别的问题，这引发了社 交媒体关于女性科技主题的热烈讨论。我们听到了很多声音，DevOps 社区的许多女性和男性表达了对这项研究的支持，但也有人对技术领 域的性别多样性问题感到疑惑。对于女性在所有受访者中的占比， 2015年为5%,2016年为6%,2017年为6.5%。这些数字远低于我 们的预期，因为在系统管理员中，女性占7%左右(这是2011年的占 比，2007年是13%35.30),而在计算机与信息管理领域，这个数字约 为27%。我们希望找到拥有更多女性成员的技术团队。以下是我们\n\n的调查结果。\n\n第10章 员工满意度和身份认同感  |  101\n\n口33%的受访者表示，所在团队中没有女性。\n\n口56%的受访者表示，所在团队中女性不到10%。\n\n口81%的受访者表示，所在团队中女性不到25%。\n\n以下是2016年的研究报告中对于性别的基本统计数据，如图10-3\n\n所示。\n\n口91%为男性\n\n口6%为女性\n\n口 3 % 未 表 明 性 别\n\n性别\n\n3%             未表明性别\n\n6%           女性\n\n91%\n\n男性\n\n图10-32016年的研究报告中对于性别的基本统计数据\n\n102  |  加速：企业数字化转型的24项核心能力\n\n10.4.2     DevOps 运动中的少数族裔\n\n我们还询问受访者是否属于少数族裔。结果如图10-4所示。\n\n口77%的受访者回答否。\n\n口12%的受访者回答是。\n\n口11%的受访者没有回答或选择 N/A。\n\n是否属于少数族裔\n\n11%\n\n没有回答或选择\n\nN/A\n\n12%                  是\n\n77%\n\n否\n\n图10-4 2017年的研究报告中对于少数族裔的基本统计数据\n\n第10章 员工满意度和身份认同感  |  103\n\n由于数据是在全世界范围内收集的，因此这种自我认定方式是我 们能做到的最具体的反馈了。举例来说，美国对少数族裔的定义并非\n\n与其他国家一样。\n\n我们并没有提供关于“是否为残障人士”的选项，希望将来会有。\n\n10.4.3  关于多样性，其他研究能告诉我们什么\n\n有大量研究将女性担任领导职位与提高财务绩效37|、改善股市表 现3和提高对冲基金回报联系起来。此外，Anita Woolley  和 Thomas W.Malone进行的一项研究度量了团队的集体智慧。他们发现，拥有 更多女性的团队往往在集体智慧方面超过平均水平140]。尽管有这些明\n\n显的优势，但技术组织并未能招聘和留住足够多的女性员工。\n\n在 STEM领域(科学、技术、工程和数学领域),就能力或资质 而言，男女之间没有显著差异[41]。是什么令女性和少数族裔远离技术 领域呢”?这无非是由于“男性更适合做技术工作，因为他们拥有做\n\n技术工作的天赋”这种普遍的观念41]。\n\n正是这种普遍存在的观念渗透到了我们的文化中，让女性越来越 难留在技术领域里。女性离开技术领域的比例比男性高出45%,少 数族裔也面临类似的情况。许多女性和少数族裔称受到骚扰、歧视和\n\n不公平待遇。这些都是领导者和同行可以积极关注和改进的事情。\n\n① Sarah Jane Leslie 等人在2015年仅研究了女性和非裔美国人，但其研究结果可能适 用于其他少数族裔。\n\n104   |  加速：企业数字化转型的24项核心能力\n\n10.4.4  我们能做什么\n\n我们所有人都应优先考虑团队的多样性，并为打造包容性环境做 出贡献。这样做既对你的团队有好处，也对业务有好处。以下这些资\n\n源可以帮助你行动起来。\n\n口 Anita Borg Institute 提供了优秀的工具，推动技术领域里的女 性进步。这些工具包括 Grace Hopper会议——尽管并非不存在 问题，但对于许多女性来说，能够参加全部或大部分由女性参 与的技术会议是很好的体验。仅在2017年， Grace Hopper 会\n\n议就吸引了超过18000名女性。\n\n口Geek Feminism为极客社区中的女性提供了极好的在线资源。\n\n口 Project Include 从多个维度支持多样性，所有内容都是在线且\n\n开源的。\n\n第11章\n\n领导者和管理者\n\n几年来，我们研究了各种技术和精益管理实践对软件交付绩效和 团队文化的影响。不过在该研究项目的早期阶段，我们没有直接研究\n\n领导力对 DevOps实践的影响。\n\n本章将介绍一些研究成果，用于说明领导者和管理者在技术转型\n\n中的作用，并概述领导者可以采取哪些措施来改善团队文化。\n\n11.1  变革型领导力\n\n如果你还不确定技术领导力有多重要，那么请思考一下：据 Gartner 在2016年称，没有让团队转型的首席信息官在2020年有一\n\n半将被其所在组织的数字化领导团队取代。\n\n那是因为领导力的确对结果有巨大的影响。成为领导者，并不意\n\n味着有人要向你汇报      所谓领导力，是指能够鼓励和激励你周围的\n\n106   |  加速：企业数字化转型的24项核心能力\n\n人。优秀的领导者对团队的能力起到很大的作用，包括交付代码、构 建良好的系统架构，以及将精益原则应用于团队管理和产品开发工作 中。所有这些都会对组织的盈利能力、生产力和市场份额产生可度量 的影响，也会影响客户满意度、效率和实现组织目标的能力——非商 业目标对于寻求利润的组织和非营利组织都很重要。然而，这些对组 织和非商业目标的影响都是间接的，都需要通过领导者在其团队中所\n\n支持的技术实践和精益实践产生。\n\n我们认为，领导力在技术转型中的作用一直是被忽视的一个\n\nDevOps 主题。然而", "metadata": {}}, {"content": "，包括交付代码、构 建良好的系统架构，以及将精益原则应用于团队管理和产品开发工作 中。所有这些都会对组织的盈利能力、生产力和市场份额产生可度量 的影响，也会影响客户满意度、效率和实现组织目标的能力——非商 业目标对于寻求利润的组织和非营利组织都很重要。然而，这些对组 织和非商业目标的影响都是间接的，都需要通过领导者在其团队中所\n\n支持的技术实践和精益实践产生。\n\n我们认为，领导力在技术转型中的作用一直是被忽视的一个\n\nDevOps 主题。然而，变革型领导力对以下内容是非常重要的。\n\n口建立并支持生机型和高度信任的文化规范。\n\n口创造能够提高开发人员工作效率、缩短代码部署的前置时间，\n\n并提高基础设施可靠性的技术。\n\n口支持团队实验和创新，更快地创建和实现更好的产品。\n\n口跨组织筒仓进行工作，以实现组织战略的一致性。\n\n不幸的是，DevOps  社区有时会犯诋毁领导力的错误，例如当中 层管理人员或保守派坚持不让团队做出改变，以提高软件交付绩效和\n\n组织绩效的时候。\n\n我们最常听到的一个问题是：“如何才能让领导参与进来，以便 我们做出必要的改变?”我们都知道，积极的领导者对于成功的 DevOps 转型至关重要。领导者拥有大规模变革所需的权力和预算，也能为转\n\n型过程提供“空中支援”,还能改变对技术人员的激励机制，无论他\n\n第11章 领导者和管理者  | 107\n\n们是在开发部门、质量保证部门、运维部门，还是在信息安全部门。\n\n领导者就是那些确定组织的工作基调并强化组织文化规范的人。\n\n为了研究变革型领导力，我们使用了一个包含5个维度的模型42]。\n\n根据这个模型，变革型领导者有如下5个特征。\n\n口有清晰的愿景。变革型领导者清楚地了解组织在未来5年里的\n\n发展方向。\n\n口能够进行鼓舞人心的沟通。即使在不确定或不断变化的环境中，\n\n变革型领导者也能在沟通中鼓舞和激励他人。\n\n口能够提出挑战。变革型领导者能够挑战追随者，使其以新的方\n\n式思考问题。\n\n口提供支持。变革型领导者会表现出对追随者个人需求和感受的\n\n关心和考虑。\n\n口认可他人。变革型领导者赞扬并承认目标的实现和工作质量的 提高。当他人取得杰出的工作成果时，变革型领导者会亲自表\n\n示赞赏。\n\n什么是变革型领导力?\n\n变革型领导力意味着领导者鼓励和激励追随者，并通过契 合他们的价值观和目标感来实现更高的绩效，促进广泛的组织 变革。变革型领导者通过愿景、价值观、沟通、榜样设定，以\n\n及对追随者个人需求的关心来鼓励团队，从而实现共同目标。\n\n据观察，公仆型领导者与变革型领导者之间存在相似之\n\n108   |  加速：企业数字化转型的24项核心能力\n\n在度量变革型领导力时，我们所用的调查问卷改编自 Alannah\n\nRafferty 和 Mark Griffin 在2004年提出的问题2]。\n\n我们请受访者填写关于其上级领导的调查问卷，如下所示。\n\n口关于愿景\n\n■清楚地了解我们的目标。\n\n■清楚地了解他或她希望我们的团队在5年后会是什么样。\n\n■清楚地了解组织的发展方向。\n\n口关于鼓舞人心的沟通\n\n■会说一些话，使员工因为是组织中的一员而感到自豪。\n\n■积极地赞赏团队。\n\n■鼓励人们将变化的环境视为充满机遇。\n\n口关于智力激发\n\n① 我们的分析证实，这些问题可以很好地度量变革型领导力。第13章会讨论潜在构 念。要了解相关的统计方法，请参阅附录C。\n\n第11章 领导者和管理者    109\n\n■激励我以新方式思考旧问题。\n\n■有办法迫使我重新思考我以前从未质疑过的一些事情。\n\n■让我重新思考我在工作中所做的基本假设。\n\n口关于提供支持\n\n■在行动前会考虑我的个人感受。\n\n■表现出已经充分考虑了我的个人需求。\n\n■认为应充分考虑员工的利益。\n\n口关于认可他人\n\n■当我做得比平时更好时，会表扬我。\n\n■承认我的工作质量有所提高。\n\n■当我取得杰出的工作成果时，会从个人角度称赞我。\n\n我们的分析发现，变革型领导者的上述特征与软件交付绩效高度 相关。事实上，我们观察到高绩效、中等绩效和低绩效的团队在领导 者特征方面存在显著差异。高绩效团队称，其领导者在各个方面都表 现出非常明显的行为特征：愿景、鼓舞人心的沟通、智力激发、支持 和认可他人。相比之下，低绩效团队称其领导者特征处于最低水平。 这些差异均表现出统计显著性。当进一步分析时，我们发现那些缺乏 变革型领导者的团队是不太可能成为高绩效团队的。具体而言，那些 领导力强度处于底部三分之一的团队，只有一半可能成为高绩效团\n\n队。这符合常识：虽然我们经常听到从草根层传来的关于DevOps 和\n\n110   | 加速：企业数字化转型的24项核心能力\n\n技术转型成功的故事，但是当获得领导支持时，取得成功要容易得多。\n\n我们还发现，变革型领导力与eNPS 高度相关。员工的快乐程度、 忠诚度和敬业度越高，就越有可能在他们的团队中发现变革型领导  者。虽然我们的研究并没有在同一年里同时度量变革型领导力和组织  文化，但有其他研究发现，强大的变革型领导力有助于建立并支持健\n\n康的团队和组织文化。\n\n变革型领导者的影响力可以通过其对团队工作的支持展现出来， 无论是技术实践还是产品管理能力。领导者的积极影响或消极影响会\n\n体现在软件交付绩效和组织绩效上，如图11-1所示。\n\n图11-1 变革型领导力的影响\n\n换句话说，我们发现领导者无法单凭自己取得很好的 DevOps成 果。我们研究了具有最强变革型领导者的团队，也就是那些具有变革 型领导特征的前10%的团队。有人可能会认为这些团队的绩效高于平\n\n均水平。然而研究结果表明，这些团队的绩效基本上处于平均水平，\n\n第11章 领导者和管理者  |  111\n\n甚至更低。\n\n这是说得通的，因为领导者无法靠自己实现目标。他们需要团队 在恰当的架构上开展工作，并且要有良好的技术实践，还要运用精益\n\n原则。此外，团队的成功还取决于我们多年来研究的其他因素。\n\n总之，我们发现领导力有助于建立优秀的团队和组织，但这是通 过让团队重构系统并采用必要的持续交付实践和精益管理实践才间 接实现的。变革型领导力让与高绩效相关的实践得以采用，并且促进 团队成员有效地沟通和协作，以实现组织目标。这种领导力为我们希 望形成的生机型文化奠定了基础。在这种文化中，持续实验和学习成\n\n为每个人日常工作的一部分。\n\n因此，变革型领导者的行为强化了我们在研究中识别出来的价值 观、流程和实践。它既不是独立的行为，也不是一套新的实践，而只\n\n是放大了我们多年来一直在研究的技术实践和组织实践的效果。\n\n11.2  管理者的角色\n\n我们看到，领导者在任何技术转型中都发挥着至关重要的作用。 当领导者也是管理者时，他们可能在影响变革方面能发挥更大的作 用。管理者负责管理组织中的人、预算和资源。在最好的情况下，管 理者既是领导者，又具有变革型领导力的上述特征。在将业务的战略\n\n目标与其团队所做的工作联系起来时，管理者尤其发挥着关键作用。\n\n112  |  加速：企业数字化转型的24项核心能力\n\n管理者可以做很多事情来提高团队绩效，例如创造让员工感到安全的\n\n工作环境，在员工的能力提升方面做出投入，以及消除工作中的障碍。\n\n我们还发现，在DevOps上的投入与软件交付绩效高度相关。在 文化方面，管理者可以通过在团队中采用特定的DevOps实践，以及 在员工的职业发展方面有所投入来解决很多问题。此外，管理者还可 以通过采取措施来减少部署的痛苦，从而显著地提高软件交付绩效。 最后，但也同样重要的是，管理者应该使绩效指标可见，并努力使这 些指标与组织目标保持一致，还应该将更多权力交给员工。知识就是\n\n力量，应该给那些掌握知识的人赋予权力。\n\n你可能会问：怎样对DevOps和团队做出投入呢?技术领导者可\n\n以考虑以下方面。\n\n口确保现有资源可供组织中的每个人访问和使用。创造空间和机\n\n会，用于学习和改进。\n\n口专门做培训预算，并确保员工知道有这样的预算。此外，让员 工有权选择他们感兴趣的培训项目。培训可以利用上班时间，\n\n以便利用组织中的已有资源。\n\n口鼓励员工每年至少参加一次技术会议，并向整个团队总结他们\n\n所学到的知识。\n\n口设置内部黑客马拉松，让跨职能团队成员可以聚集在一起做\n\n项目。\n\n口鼓励团队组织内部“牦牛日”,即多个团队一起偿还技术债。\n\n第11章 领导者和管理者  |  113\n\n这是不错的尝试，因为技术债很少能排上优先级。\n\n口定期举行内部 DevOps 小型会议。我们已经看到，有组织利用 经典的DevOpsDays 形式取得了成功。该形式是指将预先准备\n\n的演讲与“开放空间”相结合", "metadata": {}}, {"content": "，并向整个团队总结他们\n\n所学到的知识。\n\n口设置内部黑客马拉松，让跨职能团队成员可以聚集在一起做\n\n项目。\n\n口鼓励团队组织内部“牦牛日”,即多个团队一起偿还技术债。\n\n第11章 领导者和管理者  |  113\n\n这是不错的尝试，因为技术债很少能排上优先级。\n\n口定期举行内部 DevOps 小型会议。我们已经看到，有组织利用 经典的DevOpsDays 形式取得了成功。该形式是指将预先准备\n\n的演讲与“开放空间”相结合，参与者自发组织各种对话。\n\n口给员工留一些时间来专门实验新的工具和技术，例如20%的 工作时间或发布后的几天时间。为特殊的项目分配预算和基础\n\n设施。\n\n11.3  改善文化和支持团队的小技巧\n\n领导者或管理者的真正价值体现在如何放大团队的工作效果。因 此，他们可以做的最有价值的工作就是在其所服务的团队中打造和支 持强大的组织文化。这使得与他们合作并为其工作的专家能够以最高\n\n的效率工作，并为组织创造价值。\n\n本节将列出一些简单的方法。利用这些方法，管理者、团队负责 人，甚至积极的员工都可以支持有益的团队文化。我们的研究表明， 有3个因素与软件交付绩效密切相关，并有助于形成强大的团队文\n\n化。它们分别是跨职能协作、学习氛围和工具。\n\n通过下列方法可以促进跨职能协作。\n\n口与其他团队里的同事建立信任。在团队之间建立信任是你可以\n\n做的最重要的事情。信任是一点一点建立起来的，它建立在履\n\n114   |  加速：企业数字化转型的24项核心能力\n\n行承诺和开放式沟通的基础上，并且团队即使在紧张的情况下 也可以表现得很好。你的团队将能够更高效地工作，并且团队\n\n之间的这种关系将向组织表明，跨职能协作受到重视。\n\n口鼓励员工在各部门之间转岗。随着技能的提升，系统管理员或 工程师可能会发现，自己对其他部门的工作感兴趣。这种横向 移动对于两个团队来说都是非常有价值的。员工为他的新团队 带来有关流程和挑战的宝贵信息，而之前的团队在寻求合作\n\n时，正好有一个熟悉的伙伴。\n\n口积极寻求、鼓励和奖励那些促进协作的活动。确保成功是可以复\n\n制的，并积极发现让协作变得更容易的潜在因素。\n\n利用灾难恢复测试练习建立关系\n\n很多大型技术公司会开展灾难恢复测试练习，也被称为 “游戏日”,即根据预先准备的计划来模拟或真的制造一次服务\n\n中断，而各个团队需要协作，共同维持或恢复服务等级。\n\n谷歌云运营总监Kripa Krishnan的团队就负责计划和执行这 种练习。她说： “要使灾难恢复测试活动取得成功，组织首先 需要将系统故障和流程问题视为一种学习手段……我们所设计 的测试常常涉及来自多个团队的工程师，他们平时可能不在一 起工作或交流。这样一来，如果真的发生了大规模灾难，这些\n\n人就可以很好地协作。”\n\n通过下列方法可以创造学习氛围。\n\n第11章 领导者和管理者 |  115\n\n口做培训预算，并在组织内部倡导培训。通过将资源投入正式的\n\n教育机会，强调组织非常重视学习氛围。\n\n口确保团队有资源参与非正式的学习，并且可以探索新想法。学习 不止正规教育。3M 和谷歌等公司为员工设置了一部分时间(分\n\n别为15%和20%),用于自由思考和探索副业项目。\n\n口让失败是安全的。如果失败会受到惩罚，人们就不会尝试新事 物。将失败看作学习机会，进行无问责的复盘，找出如何改进 系统和流程。当人们冒(合理的)风险时，让人们感觉不到紧\n\n张，这有助于打造创新文化。\n\n口创造共享信息的机会和空间。无论是举办每周一次的“闪电讲 座”,还是为每月的午餐交流会提供资源， 一定都要定期为员\n\n工提供分享知识的机会。\n\n口鼓励分享和创新，通过演示日和论坛，让团队彼此分享创造的新\n\n东西。这样做也让团队可以庆祝他们的工作成果，并相互学习。\n\n通过下列方法有效地利用工具。\n\n口确保团队可以自主选择工具。除非有充分的理由不这样做，否 则员工应该有权选择自己的工具。如果能够以自己的方式构建 基础设施和应用程序，那么员工可能会更加投入地工作。这是 有数据支持的：决定工作满意度的一个主要因素就是员工是否 认为自己拥有完成工作所需的工具和资源(参见第10章)。我 们在数据中也看到，这是持续交付的预测因素之一：有权选择\n\n自己所用工具的团队可以推动软件交付绩效(参见第5章)。\n\n116  |  加速：企业数字化转型的24项核心能力\n\n如果你的组织必须使用标准化工具，那么请确保采购和财务行\n\n为符合团队的利益，而不是相反。\n\n口让监控成为优先事项。优化你的基础设施和应用程序的监控系 统，确保你针对正确的服务收集相关信息，并且充分利用了这 些信息。有效监控的可见性和透明度是非常宝贵的。我们的研 究发现，主动监控与绩效和工作满意度密切相关，并且是强大\n\n技术基础的关键部分(参见第7章和第10章)。\n\n虽然许多 DevOps  成功案例突出强调了草根技术团队的自我努 力，但我们的经验和研究表明，技术转型会因积极的变革型领导者而 获益，因为他们会支持和放大团队的成就。这种支持贯穿于为业务创 造价值的过程，因此明智的组织会将领导力的提升视为对其团队、技\n\n术和产品的投入。\n\n第二部分 调研方法\n\n为了更深入地理解第一部分所阐述的内容，有必要透过研究案例 本身去了解严谨的调研方法。这样做可以帮助我们找到一些有助于成 功的实践，它们对于任何行业、任何规模的组织来说都是最关键的预\n\n测因子。\n\n第一部分论述了我们的研究发现，并概述了为什么技术是当今所 有组织的核心价值驱动力和差异化因素。第二部分将阐释调研背后的\n\n科学。\n\n第12章\n\n本书背后的科学\n\n我们每天听到的新闻都充斥着各种试图让我们的生活变得更轻\n\n松、更快乐的消息。\n\n我们也曾听过许多故事——团队和组织如何通过采用不同的策 略来实现技术转型并赢得市场。但是我们如何知道自己所采取的行动 是恰好赶上了市场环境的变化，还是正在驱动这些变化呢?严格的 初级研究可以在此发挥作用。不过在深入探讨之前，需要搞清楚“严\n\n格”和“初级”的具体含义。\n\n12.1 初级研究和次级研究\n\n研究分为两大类：初级研究和次级研究。这两种类型的关键区别 在于谁收集数据。次级研究利用别人收集的数据。你可能熟悉的次级 研究例子是读书报告或在学校里做的研究报告：你收集现有的信息，\n\n加以总结，并在结论中加入自己的见解。常见的例子还包括案例研究\n\n120   |  加速：企业数字化转型的24项核心能力\n\n和一些市场调研报告。次级研究报告有一定的价值，特别是在很难找 到现有数据的情况下，或者总结部分格外有见地，抑或是需要定期提 交报告。与初级研究相比，次级研究通常更快，调研成本更低，但数\n\n据可能不适合研究团队，因为团队可能会受到现有数据的约束。\n\n与次级研究不同，初级研究需要研究团队收集新的数据。 一个例 子就是美国人口普查。负责美国人口普查的研究团队每10年为国家 收集一次人口统计数据。初级研究的价值在于，它可以展示未知的信 息，并提供无法从现有数据集中获得的见解。针对要回答的问题，初 级研究可以给予研究人员更大的权限和控制度，不过经济成本和时间\n\n成本通常更大。本书和《DevOps 状态报告》都基于初级研究。\n\n12.2 定性研究和定量研究\n\n研究既可以是定性的，也可以是定量的。定性研究是指其数据为 非数字形式的任何研究，这类数据包括采访内容、博客文章、推文、 长篇日志数据，以及人种学家的长时间观察数据等。许多人认为调查 研究是定性的，因为它不是来自计算机系统，但事实未必如此。这要 取决于调查问卷中的问题类型。定性数据具有很强的描述性，特别是 在复杂或新的领域中可以让研究人员获得更多的见解和发现新的行 为。然而，此类研究的分析成本往往更大，难度也往往更高。通过自 动化方法分析定性数据通常需要将数据编码为数字格式，但这将使其\n\n成为定量研究。\n\n第12章 本书背后的科学  |  121\n\n定量研究是指数据包含数字的任何研究。这类数据包括数字形式 的系统数据或股票数据。系统数据是指由我们的工具产生的任何数 据，比如日志数据。如果调查问卷中的问题是以数字形式反馈的—— 最好是以量表反馈——那么它也属于定量研究。本书中的研究是定量\n\n的，因为我们是通过利克特调研工具收集数据的。\n\n什么是利克特量表?\n\n利克特量表通过指定数值来记录调研反馈。举例来说， 1 表示“非常不同意”,4表示“既不同意也不反对”,7表示 “非常同意”。这为度量所有研究对象提供了一致的方法", "metadata": {}}, {"content": "，比如日志数据。如果调查问卷中的问题是以数字形式反馈的—— 最好是以量表反馈——那么它也属于定量研究。本书中的研究是定量\n\n的，因为我们是通过利克特调研工具收集数据的。\n\n什么是利克特量表?\n\n利克特量表通过指定数值来记录调研反馈。举例来说， 1 表示“非常不同意”,4表示“既不同意也不反对”,7表示 “非常同意”。这为度量所有研究对象提供了一致的方法，并为\n\n研究和分析提供了数值基础。\n\n12.3  分析类型\n\n定量研究使我们能够进行统计数据分析。根据约翰斯·霍普金斯 大学彭博公共卫生学院的Jeffrey Leek博士提出的框架[43],数据分析 分为6种类型，按复杂度升序排列如下。复杂度取决于数据科学家所\n\n需掌握的知识、分析所涉及的成本和所需的时间。\n\n1. 描述性分析\n\n2. 探索性分析\n\n3. 推理预测性分析\n\n4. 预测性分析\n\n122   |  加速： 企业数字化转型的24项核心能力\n\n5. 因果分析\n\n6. 机械性分析\n\n本书中的分析属于Leek 博士所提出的框架中的前3类。此外， 本书还将额外描述一类分析，即分类分析，它不属于 Leek 博士提出\n\n的框架。\n\n12.3.1 描述性分析\n\n人口普查报告采用描述性分析。对数据进行汇总和报告，即对数 据进行描述。这种类型的分析所需的工作量最少，通常作为数据分析 的第一步，以帮助研究团队理解数据集(以及样本和用户总体)。在\n\n某些情况下，报告将止于描述性分析，如人口普查报告。\n\n什么是总体和样本?为什么它们至关重要?\n\n在统计学和数据分析中，“总体”和“样本”具有特殊的含 义。总体就是你准备研究的整个群体，这既可能是正在经历技 术转型的所有人，也可能是某个组织中的所有网站可靠性工程 师，甚至可能是某一份日志文件在某一时间段内的所有记录。 样本是从总体中仔细定义和选择的一部分，这是研究人员进行 分析的数据集。当总体太大或不容易进行研究时，就使用样本 抽样。为了确保从分析样本得出的结论能真实地反映总体的情\n\n况，采用严谨和适当的抽样方法十分重要。\n\n描述性分析最常见的例子是总结和汇报人口统计情况的人口普\n\n第12章 本书背后的科学  |  123\n\n查。其他例子包括大多数供应商报告和分析师报告，这些报告收集关 于行业中工具使用状态或技术人员教育和认证水平的数据、报告摘要 并汇总统计信息。2017年 Forrester 公司发布的提及开始敏捷或 DevOps 之旅的公司所占比例的报告5、2014年国际数据公司发布的 有关平均停机成本的报告I⁴,     以及2016年的 OReilly  数据科学薪资\n\n调研报告145|都属于这一类别。\n\n这些报告对于了解行业现状、参考群体(如总体或行业)当前和 曾经所处的位置，以及未来趋势都具有重要的价值。然而，只有当基 础研究设计和数据收集方法运用得当时，描述性的研究结果才有意 义。任何旨在体现总体情况的报告都必须确保从总体中仔细抽样并考\n\n虑到各种局限性。关于此类局限性的讨论超出了本书的论述范围。\n\n本书所涉及的一个描述性分析例子是关于受访者及其所在组织 的人口统计信息——受访者的国别、所在组织的规模、他们所处的垂\n\n直行业，以及他们的职位和性别(详见第10章)。\n\n12.3.2  探索性分析\n\n统计分析的下一个级别是探索性分析。这是一个宽泛的类别，用 于寻找数据之间的关系，并可以通过视觉化元素识别数据中的规律。 在这个步骤中，也可能检测到异常值，不过研究团队必须谨慎辨别，\n\n确保不会将群组中的正常值判断为异常值。\n\n探索性分析是研究过程中有趣和令人兴奋的一部分。在这个阶\n\n124  |  加速：企业数字化转型的24项核心能力\n\n段，具有发散性思维的人通常会产生新的想法和提出新的假设，进而 提出新的研究项目。我们会在这个阶段发现数据中的各个变量是如何 彼此关联的，并寻找潜在的新联系和新关系。然而，对于想做出预测\n\n或因果判断的团队来说，这并不是最后的阶段。\n\n很多人听过“相关性并不意味着因果关系”,这是什么意思呢? 在探索性分析阶段所做的分析包括相关性，但不包括因果关系。相关 性分析研究的是两个变量的紧密程度，但并不会揭示一个变量的变化 是否预示或导致另一个变量的变化。相关性分析只告诉我们两个变量 是否沿同一方向(或沿相反方向)变化，而没有告诉我们引起这种变 化的原因。有时，两个变量一起变化是由第3个变量导致的，而有时\n\n只是随机发生的。\n\n在 Spurious Correlations 网站上可以找到一组有趣的例子，这些 例子强调了随机性导致的高相关性。该网站的制作者 Tyler Vigen 计算 出了一些高度相关的变量，而常识告诉我们，这些变量之间既不能彼 此预测，也肯定不存在因果关系。举例来说，该网站称，人均奶酪消 费量与因被床单缠住而死亡的人数高度相关(相关系数r=0.9471),  如图12-1所示。当然，吃奶酪不会导致被床单勒死。(如果真的如此， 那么会是哪种奶酪呢?)同理，很难想象被床单勒死会导致奶酪消费， 除非奶酪是各地葬礼上的首选食物。(不妨再问一遍：是哪种奶酪?  这可是一个病态营销机会。)然而当探索数据时，我们的脑海中将产 生故事联想，因为数据集是相关的，而且往往解释得通。这就是为什\n\n么务必要记住这只是探索性阶段：我们可以报告自己发现了相关性，\n\n第12章 本书背后的科学  | 125\n\n但是需要进行更复杂的分析。\n\n人均奶酪消费量与因被床单缠住而死亡的人数高度相关\n\n800\n\n600\n\n400\n\n200\n\n因被床单缠住而死亡的人数      →人均奶酪消费量\n\n图12 - 1  Spurious  Correlations 网站给出的例子：人均奶酪消费量与因被床\n\n单缠住而死亡的人数\n\n在我们的研究中，有几个关于相关性的例子。之所以指出这些例 子，是因为我们知道并理解环境中的不同事物相互关联的重要性和价 值。在所有这些例子中，我们都给出了皮尔逊相关系数，它是当今商\n\n业环境中最常用的相关性度量方法”。\n\n12.3.3  推理预测性分析\n\n统计分析的第3个级别是推理，它是当今商业研究和技术研究中\n\n最常见的一种分析类型。推理也被称为推理预测，它帮助我们理解人\n\n① 皮尔逊相关系数度量两个变量之间的线性相关性的强度，用 r  表示，数值介于-1 和1之间。如果两个变量完全线性相关，也就是说它们的变化方向相同，那么r=1。\n\n如果两个变量的变化方向恰好相反，则r=-1 。 如果它们完全不相关，则r=0。\n\n126   |  加速：企业数字化转型的24项核心能力\n\n力资源政策、组织行为和动机的影响，以及技术如何影响用户满意度、 团队效率和组织绩效。推理式设计是在纯实验设计不可能实现的情况 下进行的，而现场实验是首选。如果数据是从错综复杂的商业环境中 收集的，而不是来自无菌的实验室环境，那么公司不会牺牲利润来适\n\n应由研究团队定义的控制组。\n\n为了避免“数据钓鱼”和出现虚假相关性的问题，假设应由理论 驱动。这种类型的分析是科学方法的第一步。很多人熟悉科学方法， 即先提出一个假设，然后进行验证。在推理预测性分析中，假设必须\n\n建立在一个健全且受充分支持的理论基础上。\n\n每当本书谈到影响或驱动结果时，就表明我们的研究设计利用了 推理预测性分析。虽然有些人认为，使用基于理论的设计会使我们产 生证真偏差，但这就是科学的方式。科学并不是简单地确认研究团队 想确认的事情，而是通过陈述假设、设计研究方案、收集数据来验证 假设。我们找到的证据越多，对假设就越有信心。这一过程也有助于 避免从数据中获取虚假信息的危险——发现可能只是随机出现的虚\n\n假相关性。\n\n在我们的项目中，通过推理预测性分析验证的假设包括持续交付 实践和架构实践驱动软件交付绩效，软件交付绩效积极地影响组织绩 效，以及组织文化对软件交付绩效和组织绩效都有积极影响。在这些 分析中，我们使用的统计方法是多重线性回归或偏最小二乘回归。附\n\n录C 对这些方法有更详细的描述。\n\n第12章 本书背后的科学| 127\n\n12.3.4 预测性分析、因果分析和机械性分析\n\n我们的研究没有涉及统计分析的后3个级别，因为我们没有这类 工作所需的数据。为了使内容完整并满足你的好奇心，我们简要地总\n\n结一下。\n\n口预测性分析是指基于以前的事件预测或预报未来的事件。常见 的例子包括商业领域中的成本预测或效用预测。预测是非常困 难的", "metadata": {}}, {"content": "，因为我们没有这类 工作所需的数据。为了使内容完整并满足你的好奇心，我们简要地总\n\n结一下。\n\n口预测性分析是指基于以前的事件预测或预报未来的事件。常见 的例子包括商业领域中的成本预测或效用预测。预测是非常困 难的，特别是当试图预测更远的未来时。这种分析通常需要历\n\n史数据。\n\n口因果分析被认为是黄金标准，但它的难度比预测性分析更大。 特别是对于大多数业务场景和技术场景而言，因果分析的难度 最大。这种类型的分析通常需要随机研究。在业务场景中， 一 种常见的因果分析是针对原型或网站进行A/B 测试，以此收集\n\n和分析随机数据。\n\n口机械性分析是所有方法中最费力的，它在商业环境中很少见。 在这种分析中，研究人员会计算在特定条件下导致确切行为的 变量的确切变化。这种分析在物理学或工程学中最为常见，但\n\n不适合用于复杂系统。\n\n12.3.5  分类分析\n\n另一种分析是分类分析，也叫作聚类分析。分类分析可以被视为  探索性分析、预测性分析，甚至是因果分析，这要取决于具体情况、\n\n研究设计方案和使用的分析方法。在本书中，当讨论高绩效、中等\n\n128   |  加速：企业数字化转型的24项核心能力\n\n绩效和低绩效的软件交付团队时，我们使用了分类分析。如果熟悉 客户档案或市场购物篮分析，那么你可能对分类分析并不陌生。笼统 地说，分类分析的过程如下：将分类變量输入到聚类算法中，并确定\n\n分组。\n\n我们在研究中使用分类这种统计方法，并使用节奏變量和稳定性 變量来理解和识别不同团队开发和交付软件的方式是否存在差异(如 果存在，那么具体是什么差异)。我们的具体做法如下：将4个技术 性能變量——部署频率、前置时间、平均恢复时间和變更失败率—— 输入聚类算法中，然后观察出现了哪些组。结果，我们看到了具有统 计显著性的差异。高绩效团队在4个方面都表现得较好，低绩效团队 则在这4个方面都表现得较差。中等绩效团队明显优于低绩效团队，\n\n却明显差于高绩效团队。更多细节详见第2章。\n\n第12章 本书背后的科学  |  129\n\n12.4  本书背后的研究工作\n\n本书背后的研究工作持续4年时间，并由本书作者亲自完成。因 为是初级研究，所以它特别适合解决我们头脑中的研究问题——具体 而言，是什么能力驱动了软件交付绩效和组织绩效?这个项目基于定 量调查数据，这使我们得以通过统计分析来验证假设，并揭示驱动软\n\n件交付绩效的因素。\n\n接下来的几章将讨论我们采取了哪些步骤来确保从调查问卷中 收集的数据是良好和可靠的。之后，我们将阐述为什么说调查问卷 是首选数据源，无论是在我们这样的研究项目中还是在你自己的研\n\n究中。\n\n第13章\n\n心理测量学概述\n\n我们往往会高估自己能度量的事物，而低估自己不能度量的事物。\n\n——John Hayes\n\n无论采用何种体系，度量都需要具备一致性和可重复性，并且尽\n\n可能做到公正客观。\n\n——Pearl Zhu,Change Insight:Change as an Ongoing\n\nCapability to Fuel Digital Transformation\n\n我们在研究过程中最常听到这样两个问题：为什么使用调查问卷 (第14章将详细讨论这个问题)?我们是否确信通过调查问卷采集的 数据(而非系统生成的数据)真实可靠?伴随着此类问题的往往还有质\n\n疑——质疑我们所用的基础数据的质量，乃至质疑调研结果的可信度。\n\n对数据质量的质疑是合乎情理的。鉴于此，让我们从数据质量开 始讨论。你在多大程度上相信通过调查问卷获得的数据?对于调查问\n\n卷数据的担忧大多来自于许多人接触过的调查问卷类型：推手民调\n\n第13章 心理测量学概述  |  131\n\n(也称为宣传调查)、快速调查和那些由没参加过任何调查培训的人所\n\n设计的调查问卷。\n\n推手民调是指那些用意明显的问卷调查——除非你赞同“研究 者”的观点，否则很难诚实地回答他们的问题。正是因为有像这样的 调查，人们往往对调查问卷持怀疑态度。通过推手民调获得的任何数\n\n据都不能可靠地反映受访者的观点或理解。\n\n即使没有像推手民调这样明显的例子，糟糕的调查问卷也随处可 见。大多数情况下，这些调查问卷出自善意但未经专业训练的调查者，\n\n他们希望了解客户或员工的意见。这类调查问卷的缺点如下。\n\n口问题具有诱导性。调查问卷应该让受访者在不被诱导的情况下 直接反馈。举例来说，“你如何描述拿破仑的身高”要比“拿\n\n破仑的个子矮吗”这样的问题质量更高，也更客观。\n\n口问题带有既定观点。调查问卷不应该迫使受访者给出对他们来  说不真实的答案。举例来说，“你是在哪里参加的认证考试”\n\n并没有考虑到受访者未参加过认证考试的可能性。\n\n口一题多问。在提问时，应该只问一件事。举例来说，“你的客 户和网络运营中心通知你系统出问题了吗”这个问题并没有告 诉受访者回答问题的哪一部分。是客户，还是网络运营中心?\n\n抑或是二者兼顾?\n\n口表述不清楚。调查问卷应使用受访者熟悉的语言，必要时应进\n\n一步阐明并举例说明。\n\n132  |  加速：企业数字化转型的24项核心能力\n\n商业调查问卷的一个潜在弱点是，只通过一个问题来收集数据。 这种调查问卷有时被称为“快速调查”,常用于市场营销和商业研究。 如果语言通俗易懂，那么这种调查问卷十分有用。然而需要注意的是， 从这种调查中只能得出狭隘的结论。 一个好的快速调查的例子是净推  荐值 (NPS) 。 它经过了仔细的开发和研究并得到了很好的理解，其  使用和适用性得到了很好的记录。虽然存在更好的统计方法来了解用 户满意度和员工满意度，例如使用更多问题的方法46],但通过单一的  度量项往往更容易从受访者那里获得信息。此外， NPS 的一个好处是\n\n它已经成为行业标准，因此很容易在不同的团队和企业之间进行比较。\n\n潜在构念提升数据可信度\n\n有这么多需要注意的事项，我们怎么能够相信从调查问卷中获得 的数据呢?怎样才能确保那些在回答问卷时撒谎的人不会影响调查 结果的准确性呢?我们在研究中通过潜在构念和统计分析来报告优\n\n质的数据，或者说至少为数据的含义提供一定的保障。\n\n潜在构念是针对无法直接度量的事物的一种度量方法。房间的温 度和网站的响应时间是可以直接度量的，组织文化则是不能直接度量 的。我们不能度量一个团队或组织的“文化温度”,而需要通过度量 组织文化的组成部分(称为显性变量)来度量它。调查问卷正是度量 这些组成部分的工具。这就意味着当向别人描述一个团队的文化时，\n\n你可能会提到一些特征。这些特征就是组织文化的组成部分——我们\n\n第13章 心理测量学概述| 133\n\n度量每个特征(显性变量),它们共同代表团队文化(潜在构念)。通 过调查问卷来获取这些数据是合适的，因为团队文化是其成员的实时\n\n体验。\n\n当使用潜在构念或者任意度量项时，首先要有一个明确的定义， 并理解我们到底想度量什么。对于本章而言，我们首先需要定义什么 是“组织文化”。正如第3章所述，我们希望组织文化能够强化信任 感并促进信息流动。因此，我们引用了 Ron Westrum博士提出的组织\n\n文化类型，如表13-1所示。\n\n表13-1 Ron Westrum博士提出的组织文化类型\n\n病态型(权力导向)         官僚型(规则导向)         生机型(绩效导向)\n\n低协作性 中等协作性 高协作性 消灭信使 忽视信使 训练信使 逃避责任 限制责任 共担风险 不鼓励连接 允许连接 鼓励连接 失败后寻找替罪羊 失败后寻求公平 失败后进行调查 不创新 创新导致问题 实现创新\n\n一旦确定了构念，就可以编写调查问卷中的问题。很明显， Westrum 博士提出的组织文化的概念不能用一个问题来概括。组织文 化涉及多个方面。面对“你的组织文化怎么样”这个问题，不同的人 会有不同的理解。通过使用潜在构念，我们可以针对基本概念的每个 方面提出一个问题。如果能够良好地定义构念并把每一项都写清楚， 那么理论上就有了一张维恩图，调查问卷中的每个问题都对应基本概\n\n念的一个方面。\n\n134     |  加速：企业数字化转型的24项核心能力\n\n在收集数据之后，可以使用统计方法来验证度量项确实反映了核 心的基本概念。 一旦完成这一步，我们就可以将度量结果结合起来， 并得到一个数字。在本章的例子中，通过结合针对组织文化的各个方 面的调查问题，我们得以度量基本概念。通过取所有指标的平均分数，\n\n我们得到了组织文化的度量结果。\n\n潜在构念的好处在于，通过使用多个度量项(称为显性变量，即 可以度量的潜在变量)来反映基本概念", "metadata": {}}, {"content": "，可以使用统计方法来验证度量项确实反映了核 心的基本概念。 一旦完成这一步，我们就可以将度量结果结合起来， 并得到一个数字。在本章的例子中，通过结合针对组织文化的各个方 面的调查问题，我们得以度量基本概念。通过取所有指标的平均分数，\n\n我们得到了组织文化的度量结果。\n\n潜在构念的好处在于，通过使用多个度量项(称为显性变量，即 可以度量的潜在变量)来反映基本概念，可以避免受到劣质度量项和 破坏性因素的影响。这是通过以下方式来实现的，这些方式同时适用\n\n于使用系统数据来度量系统性能。\n\n1. 潜在构念帮助我们仔细思考要度量什么和如何定义构念。\n\n2. 潜在构念为我们观察系统的行为和性能提供了一些视角，帮\n\n助我们消除异常数据。\n\n3. 潜在构念增加了单个错误数据源(无论是由于误解还是出于\n\n恶意)歪曲度量结果的难度。\n\n潜在构念帮助我们仔细思考要度量什么\n\n潜在构念帮助我们避免劣质数据的第一个方式是帮助我们仔细 思考要度量什么和如何定义构念。花些时间来思考这个过程有助于避 免错误的度量项。退一步思考你要度量什么,以及如何度量。让我们 再次以组织文化为例。因为经常听说文化在技术转型中很重要，所以 我们想度量它。不过，简单地询问员工“你们的文化好吗”或者“你\n\n喜欢团队的文化吗”,是否可以呢?\n\n第13章 心理测量学概述  |  135\n\n如果员工给出肯定的回答(或者给出否定的回答),那么意味着 什么呢?在第一个问题中，我们所说的“文化”是什么意思呢?受访 者又是如何理解这个词的呢?我们问的是团队文化还是组织文化?  如果指的是职场文化，那么又具体指的是职场文化的哪些方面呢?又 或者说，我们其实对民族认同感和民族文化更感兴趣?假设每个人都 理解了该问题的“文化”部分，那么“好”又如何定义呢? “好”是 指真实可靠，还是指有趣，抑或是指其他完全不同的意思?一种文化\n\n是否可能没有丝毫坏的方面或好的方面?\n\n相对而言，第二个问题稍微好一点，因为我们明确强调了要问的 是团队文化。然而，因为这个问题仍然没有向受访者阐明“文化”的 概念，所以我们可能得到非常不同的反馈数据。另一个值得注意的方 面是，我们询问受访者是否“喜欢”他们的团队文化。“喜欢文化”\n\n是什么意思呢?\n\n这似乎是一个极端的例子，但总有人犯这样的错误(即便不是你， 亲爱的读者)。通过仔细思考要度量什么,并真正定义“文化”,我们  可以得到更好的数据。当提到文化对技术转型很重要时，我们指的是 一种能强化信任、促进信息流动、增进团队间的交流、鼓励推陈出新 和共担风险的文化。有了这个定义，我们便能理解为什么 Westrum博\n\n士提出的组织文化类型非常适用于我们的研究。\n\n潜在构念为我们提供了关于数据的一 些视角\n\n潜在构念帮助我们避免劣质数据的第二个方式是为我们观察系\n\n136   |  加速； 企业数字化转型的24项核心能力\n\n统的行为和性能提供一些视角。这使我们能够识别任何不佳的度量 项。如果仅通过一个不佳的度量项来捕获系统行为，那么我们很难发 现它的问题。让我们回顾一下度量组织文化的例子。为了开始度量， 我们首先基于Westrum博士的定义提出了组织文化的几个方面。根据 这些方面，我们列出了几项内容”。本章稍后会详细讨论如何编写好\n\n的调查项并检查它们的质量。\n\n一旦收集了数据，我们就可以通过统计检验来确保这些调查项的\n\n确都能度量相同的基本概念——潜在构念。统计检验的内容如下。\n\n口辨别效度确保不应该相关的调查项确实是不相关的。例如，确\n\n保我们认为不能反映组织文化的调查项确实与组织文化无关。\n\n口 聚合效度确保应该相关的调查项确实是相关的。如果某个调查\n\n项应该能够度量组织文化，那么要确保它确实如此。\n\n除了检验效度，我们还检验了可靠性。这确保了所有受访者对调\n\n查项的理解是一致的。这也被称为内部一致性。\n\n通过结合效度检验和可靠性检验，我们在分析之前就确认了调查\n\n项的有效性。\n\n在 Westrum组织文化的案例中，我们把组织文化归纳为7个调查\n\n项，如下所述。\n\n① 这些内容通常被称为调查问题。然而，它们实际上不是问题，而是陈述。我们将 在本书中把它们称为调查项。\n\n第13章 心理测量学概述 |  137\n\n我的团队……\n\n口积极寻求信息。\n\n口当传递失败信息或坏消息时，信使不会受到惩罚。\n\n口共担责任。\n\n口鼓励和嘉奖跨职能协作。\n\n口失败后进行调查。\n\n口鼓励提出新想法。\n\n口失败首先被认为是改进的机会。\n\n使用从“1=非常不同意”到“7=非常同意”的量表，团队可以\n\n轻松、快速地度量自己的文化。\n\n上述调查项经过统计检验，被证明是有效且可靠的。也就是说， 它们度量的内容与预期相符，人们的理解也是一致的。你可能已经注  意到，我们是从团队层面(而不是组织层面)询问这些调查项的。这  与 Westrum博士提出的框架不同，之所以在创建调查项时做出这一决  定，是因为组织的规模可能非常大，并且组织内部可能存在多种文化。 此外，人们从团队层面回答问题比从组织层面回答问题更准确。这有\n\n助于我们收集更优质的反馈。\n\n潜在构念有助于防范恶意数据\n\n有必要阐明一点：定期用统计数据重新检验并表现出良好的心理\n\n测量特性的潜在构念有助于防范恶意数据。\n\n138  |  加速：企业数字化转型的24项核心能力\n\n这是什么意思呢?让我们解释一下。\n\n我们已经讨论了效度和可靠性——通过统计检验来确保度量潜在 构念的调查项属于同一类。当我们的构念通过所有这些统计检验时， 就可以说它“表现出良好的心理测量特性”。定期重新检验是确保没有\n\n发生任何变化的好办法，当你怀疑系统或环境发生变化时尤其如此。\n\n在组织文化的例子中，所有调查项都是构念的优质度量项。来看 另一个例子。在这个例子中，统计检验表明了如何改进调查项。我们\n\n研究的是故障通知，调查项如下所述。\n\n口我们主要通过客户反馈获得故障通知。\n\n口我们主要通过网络运营中心获得故障通知。\n\n口我们从日志和监控系统获得故障警报。\n\n口我们根据阈值警告(例如 CPU 使用率超过90%)来监控系统\n\n健康状况。\n\n口我们根据变化率警告(例如 CPU 使用率在10分钟内提高了\n\n25%)来监控系统健康状况。\n\n在初步调查设计中，我们邀请了约20 名专业人士对构念进行初 步检验，并将调查项叠加在一起(它们度量同一个基础构念)。然而， 当完成最终的数据收集并对构念进行检验之后，我们发现所用的调查 项实际上度量了两个构念。也就是说，我们的统计检验不是确认了一 个构念，而是确认了两个。前两个调查项度量的构念是“故障通知来\n\n自非自动化流程”。\n\n第13章 心理测量学概述  |  139\n\n口我们主要通过客户反馈获得故障通知。\n\n口我们主要通过网络运营中心获得故障通知。\n\n后3个调查项度量的是另一个构念，即“故障通知来自系统”,\n\n或者说“主动通知”。\n\n口我们从日志和监控系统获得故障警报。\n\n口我们根据阈值警告(例如 CPU 使用率超过90%)来监控系统\n\n健康状况。\n\n口我们根据变化率警告(例如 CPU 使用率在10 分钟内提高了\n\n25%)来监控系统健康状况。\n\n如果只询问受访者一个问题(是否监控系统故障),那么我们不 会意识到了解故障通知来自何处的重要性。此外，如果调查项提到的 某个通知源发生了改变，那么通过进行统计检验，我们将有所察觉。 同样的概念也适用于系统数据。我们可以使用来自系统的多个度量项 捕获系统行为，这些度量项可以通过有效性检验。尽管如此，仍需定\n\n期检验这些度量项，因为它们可能会改变。\n\n我们的研究发现，“主动通知”是一种能够预测软件交付绩效的\n\n技术能力。\n\n如何将潜在构念用于系统数据\n\n一些关于潜在构念的思想也可用于系统数据。借助这些思想，我\n\n们通过使用多个度量项来寻找相似的行为模式，从而规避劣质数据。\n\n140  |  加速：企业数字化转型的24项核心能力\n\n不仅如此，这些思想还帮助我们思考究竟要度量什么。以度量系统性 能为例。我们可以简单地记录系统在某个方面的响应时间。为了在数 据中寻找相似的模式，我们可以从系统中收集几条数据，这些数据可 以帮助我们了解系统的响应时间。考虑到真正要度量的是性能，我们 可以考虑性能的各个方面，以及它是如何通过系统指标反映出来的。 我们可能意识到真正感兴趣的是对系统性能的概念性度量", "metadata": {}}, {"content": "，从而规避劣质数据。\n\n140  |  加速：企业数字化转型的24项核心能力\n\n不仅如此，这些思想还帮助我们思考究竟要度量什么。以度量系统性 能为例。我们可以简单地记录系统在某个方面的响应时间。为了在数 据中寻找相似的模式，我们可以从系统中收集几条数据，这些数据可 以帮助我们了解系统的响应时间。考虑到真正要度量的是性能，我们 可以考虑性能的各个方面，以及它是如何通过系统指标反映出来的。 我们可能意识到真正感兴趣的是对系统性能的概念性度量，而这很难\n\n直接实现，最好通过多个相关度量项来捕获信息。\n\n需要注意的是，所有度量项都是“代理”。也就是说，即便在我 们没有主观意识到的情况下，这些度量项对我们来说也代表了一种观 点。无论是系统数据还是调查问卷数据，都是如此。例如，可以将响\n\n应时间作为系统性能的“代理”。\n\n如果只使用一个数据点作为度量工具，那么我们将无法知晓这个 数据点是否有问题。举例来说，对收集数据的源代码的更改可能影响 某一个度量项，除非收集了与该度量项相关的数据，否则不太可能发 现源代码有变化。相反，如果收集与多个度量项相关的数据，那么发 现这种行为变化的可能性会更大。潜在构念提供了一种保护机制，让 我们不受劣质度量项或劣质“代理”的影响。这对于调查问卷数据和\n\n系统数据都是如此。\n\n第14章\n\n为什么使用调查问卷\n\n至此，我们知道调查问卷数据是可信的。也就是说，我们可以保 证，针对精心设计并经过充分检验的心理调查问卷构念所收集的数据 是值得信任的。不过，为什么我们要使用调查问卷呢?为什么其他所 有研究也都应该使用调查问卷呢?如果想了解自己的软件交付绩效， 团队往往会首先收集有关交付流程和工具链的数据(本书称以这种 方式收集的数据为“系统数据”)。事实上，现在市面上有多款工具提 供了对前置时间等度量项的分析。既然如此，为什么还要通过调查问\n\n卷收集数据，而不通过工具链收集数据呢?\n\n使用调查问卷数据有几个原因，本章将简要介绍其中的一些\n\n原因。\n\n1. 调查问卷有助于快速收集并分析数据。\n\n2. 用系统数据进行全栈度量有困难。\n\n3. 用系统数据完成全部度量有困难。\n\n142  |  加速：企业数字化转型的24项核心能力\n\n4. 调查问卷数据是可信的。\n\n5. 有些方面只能通过调查问卷才能度量。\n\n14.1 调查问卷有助于快速收集并分析数据\n\n一般而言，使用调查问卷的首要原因是数据收集过程的速度优势 和便捷性，对于新的、 一次性的或者跨多个组织的数据收集工作而言 尤其如此。本书所采用的数据是在4个时间段内收集的，每个时间段 持续4～6周。在每个时间段里，我们从世界各地的数千位受访者 那里收集数据，他们来自数千个组织。设想一下在同一时间段里从如 此多的团队获取系统数据的难度(实际上这是不可能完成的任务)。 仅从合规角度来说，这就是不可能完成的，更不用说数据规范和传\n\n输了。\n\n不妨假设我们能够在4周的时间窗口内收集来自世界各地的数 千位受访者的系统数据。下一步是数据清理和分析。对于《DevOps  状态报告》来说，数据分析工作一般持续三四周。很多人可能与系统 数据打过交道，甚至体验过合并和整理 Excel电子表格的乐趣(更有 可能是痛苦)。设想一下，从世界各地的数千个团队收集原始的系统 数据(或者投资计划的电子表格),然后清理、整理和分析这些数据，\n\n并要在3周内提交报告。\n\n除了清理数据和展开分析所带来的挑战，还有一个更大的挑战\n\n(也是最大的约束),而这个挑战可能让你的所有工作受到质疑，那就\n\n第14章 为什么使用调查问卷  |  143\n\n是数据本身，更具体地说，是数据本身的深层含义。你可能在自己的 组织中遇到过这种情况：对于同一个名称，不同团队的理解略有不同， 甚至截然不同。举两个例子，我们将“前置时间”定义为从提交代码 到代码可部署的时间；其他一些人将“周期时间”定义为代码从开始 由开发人员编写到处于可部署状态的时间。然而，人们经常混用甚至 混淆这两个术语，而它们其实度量的是不同的方面。如果一个团队使 用“周期时间”这个术语，而另一个团队称它为“前置时间”,那么 结果会怎样呢?如果两个团队都使用“前置时間”这個术语，但指的 是不同的时间，那么结果又会怎样呢?在这些情况下，如果我们收集 了数据，并试图进行分析，就不确定各个變量具体代表什么。这将导\n\n致严重的度量问题和分析问题。\n\n精心编写的调查问卷有助于解决上述问题。所有受访者都面对相 同的调查项、相同的语言和相同的定义。他们在自己的组织里使用何 种术语并不重要，重要的是调查问卷所用的术语。此外，调查问卷中 的问题也很重要，因此需要确保调查项的内容优质且清晰。 一旦调 查问卷编写完成，清理数据和准备分析数据的工作就会變得更快、更\n\n简單。\n\n如果采用严格研究方法，那么通常会进行额外的分析(例如排查 共同方法变异偏差),以确保调查问卷本身没有在结果中引入偏差。 此外，还会检查早期受访者和晚期受访者之间是否存在偏差(参见\n\n附录C)。\n\n144   |  加速：企业数字化转型的24项核心能力\n\n14.2  用系统数据进行全栈度量有困难\n\n即使系统能提供有价值的高质量数据(这只是一个假设，而根据 我们的经验，这个假设通常是不成立的，需要反复验证),这些数据 往往也并不全面。你真的确信可以百分之百地度量你所感兴趣的系统\n\n行为吗?\n\n让我们用一个例子来说明这一点。本书作者之一曾在 IBM 担任 性能工程师，从事与企业磁盘存储系统相关的工作。她所在团队的职 责是诊断和优化机器的性能，包括在各种工作负载条件下的磁盘读 写、缓存和RAID 重建操作。在经过几次努力后，团队拥有了来自系 统所有级别的度量指标，并且证明“盒子”的性能良好。不过，团队 偶尔仍然会听到客户反馈说“盒子”太慢了。但是，最初的一两份客 户反馈报告被团队驳回了，因为他们确信“盒子”的性能良好——所\n\n有系统日志都可以证明!\n\n然而，随着团队收到越来越多的反馈称“盒子”的速度太慢，进 一步的调查势在必行。当然，客户和现场当事人可能有撒谎的动机， 例如因为产品没有满足服务等级协定而获得额外折扣。但是，客户和 现场当事人报告的问题都类似：速度缓慢。虽然人工反馈的数据没有 系统日志那么精确(例如，客户反馈的响应时间是分钟级的，而日志\n\n文件是毫秒级的),但是这足以让团队知道该去哪里查找问题的源头。\n\n问题究竟出在哪儿呢?原来，“盒子”本身表现得非常好。团队\n\n第14章 为什么使用调查问卷  |  145\n\n测量了技术栈的每一层，并捕获了“盒子”里的所有需要捕获的内容， 唯独漏掉了接口。客户与“盒子”的交互方式导致了显著的性能下降。 该团队很快组建了一个小组来处理这个问题，很快整个系统就以最佳\n\n性能运行了。\n\n如果没有客户对系统性能的反馈，那么本例中的团队可能永远无 法理解问题所在。花些时间做定期评估，包括评估开发和交付系统的 技术专家的看法。这样做可以帮助你发现系统中的瓶颈和约束。通过 调研团队中的每个人，可以避免一些由于过度积极或过度消极的反馈\n\n所导致的问题”。\n\n14.3 用系统数据完成全部度量有困难\n\n使用调查问卷的另一个原因是无法通过系统数据捕获所有正在 发生的事情，因为系统只知道发生在其范围内的事情。相反，人们可 以看到系统内部和外部发生的一切，并将其报告出来。让我们用一个\n\n例子来说明。\n\n我们在研究中发现，使用版本控制是软件交付绩效中的一项核心 能力。如果想知道团队在多大程度上对所有在制品实施版本控制，通\n\n过询问团队就可以了解相关信息，因为团队的所有工作都是可见的。\n\n① 当然，这里假设你收集数据的目的是改进系统，而不是告诉每个人必须给出肯定  或否定的答案。否则，这就相当于一个笑话：“殴打将持续下去，直到道德提升。” 你会得到你想要的数据——正面反馈      但这毫无意义。鼓励诚实回答的一个方   法是确保匿名反馈。\n\n146   |  加速：企业数字化转型的24项核心能力\n\n然而，如果想通过系统来度量，就会遇到很多限制。版本控制系统只 能告诉我们签入了多少文档或代码仓库，但是如果没有背景信息，这\n\n些数字就毫无意义。\n\n在理想情况下，我们希望系统能告诉我们受版本控制的文档或代 码仓库所占的比例。但是，系统无法给出答案——它仅知道签入的文 档数量，而不知道未签入的文档数量。在这种情况下，即便使用版本\n\n控制系统也无法从日志和工具中获得准确的信息。\n\n虽然团队无法百分之百地了解系统", "metadata": {}}, {"content": "，如果想通过系统来度量，就会遇到很多限制。版本控制系统只 能告诉我们签入了多少文档或代码仓库，但是如果没有背景信息，这\n\n些数字就毫无意义。\n\n在理想情况下，我们希望系统能告诉我们受版本控制的文档或代 码仓库所占的比例。但是，系统无法给出答案——它仅知道签入的文 档数量，而不知道未签入的文档数量。在这种情况下，即便使用版本\n\n控制系统也无法从日志和工具中获得准确的信息。\n\n虽然团队无法百分之百地了解系统，但使用系统的专业人员的见\n\n解和经验是不可忽视的。\n\n14.4  调查问卷数据是可信的\n\n我们经常面对这样的问题：为什么通过调查问卷收集的数据和得 出的结论是真实可信的?这可以通过一个思维练习来证明。在与技术 人员交流并询问他们关于工作的问题时，我们偶尔会做这样的练习。 问问自己(或者问你认识的从事软件开发和软件交付工作的人)以下\n\n这些问题。\n\n口你相信调查问卷数据吗? 毫无疑问，第一个问题很少得到人们 的正面反馈。遗憾的是，许多人认为受访者会在填写调查问卷 时撒谎，或者认为问卷的设计者试图巧妙地利用这些问题得到\n\n他们想要的答案(前文讨论过这个话题)。\n\n第14章 为什么使用调查问卷  |  147\n\n口你信任系统或日志数据吗? 关于这个问题，给出肯定回答的人 常常比前一个问题多。我们对来自系统的数据更放心，因为我\n\n们确信它没有被篡改过。接着看下一个问题。\n\n口你是否见过劣质的系统数据? 根据我们的经验，几乎每个人都 在系统文件中见过劣质数据。虽然许多人认为系统数据不会 被篡改，但是系统(以及系统数据)毕竟是由人创建的，而 是人就会犯错。如果系统有被人恶意破坏的可能，那么只需 出现一个这样的破坏者，就足以导致系统向我们提供错误的\n\n数据。\n\n恶意破坏者与系统数据\n\n经典电影 “Office  Space” 的故事围绕这样一个设定展开： 一个恶意破坏者篡改了金融软件，将少量的钱(称为“舍入误 差”)存入个人账户。这种舍入误差不会被财务报告发现。这是\n\n劣质系统数据的一个典型的例子。\n\n既然我们对系统中的劣质数据如此清楚，为什么还对系统数据如 此信任，而对调查问卷数据如此怀疑呢?这也许是因为我们作为工程 师和技术人员对系统的工作原理了如指掌。我们确信自己能够发现系\n\n统数据中的错误并知道如何修复它。\n\n相比之下，调查问卷数据似乎让人感到陌生，尤其是对那些没有 接受过调查问卷写作和心理测评方法专业培训的人而言。但是，我们\n\n从本书第二部分提出的概念可知，通过遵循一些方法，能够使调查问\n\n148   |  加速：企业数字化转型的24项核心能力\n\n卷数据变得更可靠。这些方法包括使用仔细定义的度量项、潜在构念\n\n和统计方法来确保测评的有效性和可靠性。\n\n让我们来比较系统数据和调查问卷数据。系统数据可能被人为更 改，如更改日志文件中的数据。这既可能是由拥有根访问权限(或较 高系统访问权限)的恶意破坏者造成的，也可能是由开发人员无意导 致的，而开发人员的错误没有被代码评审或测试发现。这种更改对数 据质量的影响是显著的，因为你可能只关注一个或几个数据点。在这 种情况下，原始数据本身就有问题，而你可能要在几个月或几年后才\n\n发现，甚至永远都无法发现。\n\n对于调查问卷数据， 一些恶意参与者可能没有诚实地回答问题。 他们的回答可能会扭曲整个受访群体的结果，但他们对数据的影响  取决于受访群体的规模。在为本书所做的研究中，我们收集了超过  23000名受访者的回答。在这样的规模下，需要几百人以统一、有组  织的方式“撒谎”,才能使结果表现出明显的差异。也就是说，这些  人需要对潜在构念中的每一项都以相同的程度、相同的方式撒谎。在  这种情况下，调查问卷的使用实际上保护了我们免受恶意破坏。此外， 我们还采取了其他措施以确保收集到优质的数据。举例来说，所有的\n\n反馈都是匿名进行的，这有助于受访者给出诚实的反馈。\n\n这就是为什么我们可以相信调查问卷数据，或者至少相信数据能 在一定程度上反映我们认为它应该反映的内容。通过使用潜在构念，\n\n我们深思熟虑地设计了调查问卷，同时避免了使用任何宣传项。我们\n\n第14章为什么使用调查问卷  |  149\n\n通过一些统计检验来确保度量项的有效性和可靠性符合心理测量学 标准。此外，我们还有一个庞大的数据集。通过收集来自世界各地的\n\n受访者的回答，我们确保数据免受错误或恶意参与者的影响。\n\n14.5 有些方面只能通过调查问卷才能度量\n\n有些内容只能通过调查问卷才能度量。当我们想了解感知、感受 和观点时，使用调查问卷通常是唯一的方法。让我们再次以组织文化\n\n为例。\n\n通常人们希望用客观数据来反映组织文化。客观数据不受情感或  情绪的影响。相反，主观数据会受限于某个人对某一情况的感知或感  受。在组织文化的例子中，团队经常寻求客观的度量方法，因为他们  想更快地收集数据(例如从人力资源系统收集数据),但仍然担心员  工不会诚实地表达感受。使用人力资源系统中的变量来代表“文化” 的挑战在于这些变量很少与文化存在直接的映射关系。举例来说，反  映“组织文化良好”的一个常用指标是员工留职率。或者反过来说，\n\n反映“组织文化不好”的指标是员工流失率。\n\n这种映射存在几个问题，因为员工是否继续留在团队或组织中受\n\n许多因素的影响，举例如下。\n\n口如果一名员工因为获得另一家公司提供的大幅加薪的机会而\n\n选择离开，那么他的离职可能与组织文化无关。\n\n150   |  加速：企业数字化转型的24项核心能力\n\n口如果一名员工的配偶或伴侶获得了一个需要搬迁的工作机会，\n\n而你的员工决定随遷，那么他的离职可能与组织文化无关。\n\n口如果一名员工决定追求不同的职业发展路线或重返校园，那么 他的离职可能与组织文化无关，而与他的个人发展规划有关。 本书作者之一分享了一个有趣的例子。 一名员工就职于一家积 极鼓励员工进取的公司，该员工所在的团队也非常优秀。正是 这种良好的团队环境激励了他追隨自己的梦想，通过改變职业 方向来不断迎接新的挑战。在这个例子中，强大的文化恰恰导\n\n致了员工的流失。\n\n口员工流失率等指标是可以人为操控的。如果经理发现一名员工 正在积极地找工作，那么他可能会提前解雇该员工，以确保不 影响员工流失率。反过来，如果经理可以通过员工的留职得到 奖励，那么他可能会阻止人员调动，即使组织文化很糟糕，他\n\n也会想尽办法留住员工。\n\n如果仔细考虑要度量的内容，那么员工的留职率和流失率可以成 为有用的指标”。但是在上面的例子中，我们发现员工的留职率和流 失率并不能反映团队文化或组织文化——即使真的有所反映，也不是 我们希望了解的内容。如果想了解人们对冒险、分享信息和跨界交流 的感受，那么必须去问他们。诚然，你可以使用其他系统“代理”来\n\n了解员工的动向。举例来说，你可以观察网络流量，以了解哪些团队\n\n① Daniel Kahneman 在《思考，快与慢》一书中给出了使用员工留职率来确定面试过 程有效性的有趣例子。\n\n第14章 为什么使用调查问卷  |  151\n\n成员之间的沟通更频繁，你还可以通过观察随时间变化的趋势来了解 团队成员之间的沟通频繁与否。你甚至可以通过进行语义分析，来了 解他们在电子邮件或聊天记录中所使用的词语是积极的还是消极的。 但如果你想知道他们对工作环境的感受，以及工作环境对他们的工作 和职业目标的支持程度，或者如果你想知道他们的行为背后的原因， 就得直接问他们。要做到这一点，最好的方法是系统、可靠、定期地\n\n通过调查问卷来做对比。\n\n调查问卷是值得使用的。研究表明，组织文化是技术绩效和组织 绩效的“晴雨表”,团队氛围和心理安全则是理解团队绩效最重要的 方面16]。\n\n第15章\n\n研究项目所用的数据\n\n数据是宝贵的东西，其寿命比系统本身还长。\n\n——Tim Berners-Lee\n\n只有当我们收集到的数据能够启发那些可以做出改变的人时，事\n\n情才能顺利地完成。\n\n\tMike Schmoker\n\n如果我们有数据可循，那就尊重数据。如果我们只有个人见解，\n\n那就都听我的吧。\n\n\tJim Barksdale\n\n本研究项目的出发点是希望了解如何使技术变得强大，以及技术  如何使组织变得更好。具体地说，我们希望研究组织用于开发和交付  软件的新途径、新方法和新范式。我们重点关注敏捷流程和精益流程， 它们从开发阶段延伸到下游，并且注重打造有助于信任和信息流动的\n\n文化以及跨职能的小型软件开发团队。在2014年项目启动时", "metadata": {}}, {"content": "，那就尊重数据。如果我们只有个人见解，\n\n那就都听我的吧。\n\n\tJim Barksdale\n\n本研究项目的出发点是希望了解如何使技术变得强大，以及技术  如何使组织变得更好。具体地说，我们希望研究组织用于开发和交付  软件的新途径、新方法和新范式。我们重点关注敏捷流程和精益流程， 它们从开发阶段延伸到下游，并且注重打造有助于信任和信息流动的\n\n文化以及跨职能的小型软件开发团队。在2014年项目启动时，这种\n\n第15章 研究项目所用的数据  |  153\n\n开发和交付软件的方法论被广泛称为 “DevOps”,   这便是我们使用这\n\n个术语的原因。\n\n我们的研究    横切面数据收集工作持续4年     招募了熟悉 DevOps 这个术语(或者至少愿意阅读含有 DevOps 这个术语的电子 邮件或社交媒体帖子)的专业人士和组织。任何优秀的研究设计方案 都会定义目标群体，这就是我们的目标群体。之所以如此选择，原因\n\n有二。\n\n口它使我们能够集中精力收集数据。在这项研究中，用户是那些 从事软件开发和交付业务的人，而无论他们的上级组织是否属 于技术行业或由技术驱动，例如零售、银行、电信、医疗保健\n\n或其他行业。\n\n口它使我们能够关注那些相对熟悉 DevOps 概念的用户。我们的研 究针对的是那些已经熟悉 DevOps 这个术语的用户，也就是采 用更先进的实践来开发和交付软件的专业人士，而无论他们是 否是DevOps 从业者。这一点很重要，因为进行问卷调查的时 间和空间都是有限的。如果需要花很多时间定义背景并解释诸\n\n如持续集成和配置管理等概念，那么可能导致受访者选择退出\n\n① 横切面数据收集是指数据是在单一时间点收集的。然而，它使我们无法进行纵向 分析，因为我们收到的反馈并不是每年都有联系的。通过4年的反复研究，我们 得以观察整个行业的发展模式。虽然我们想纵向收集数据集——每年对相同的个 人进行抽样      但这可能会由于隐私问题而导致回复率降低。(一旦这些人更换 团队或工作，该怎么办呢?)我们目前正在进行这方面的研究。横切面研究确实 有好处，那就是在单一时间点收集数据降低了研究中的可变性。\n\n154 |加速：企业数字化转型的24项核心能力\n\n研究项目。如果受访者不得不先花15分钟学习一个概念才能 回答调查问卷中的问题，那么他们会因为感到沮丧和厌烦而无\n\n法答完问卷。\n\n这种有针对性的研究设计是我们的一个优势。没有一个研究设计 方案能够回答所有的问题，所有的方案都需要权衡利弊。我们没有从 那些不熟悉配置管理、基础设施即代码和持续集成的从业人员和组织 那里收集数据。正因为如此，我们可能错过了一个比我们发现的低绩 效群体表现得更差的群体。这意味着我们所做的对比是有局限性的， 我们可能没有发现真正激烈的转型。然而，通过选择经过严格定义的 受访人群，我们的研究获得了更强的解释力。这是以放弃分析不使用\n\n先进技术实践来开发和维护软件的群体为代价的。\n\n不过，通过这种方式收集数据和进行研究确实需要谨慎。通过只 调研那些熟悉 DevOps 的人，我们不得不在措辞上非常谨慎。 一些受 访者可能想给自己的团队或组织打上好的标签，或者他们可能对关键  术语有自己的定义。举例来说，每个人都知道(或声称自己知道)什  么是持续集成，许多组织也声称持续集成是一种核心能力。因此，我  们从来没有问过任何一个受访者是否实践了持续集成。(至少我们没  有在任何有关预测分析的方面问过关于持续集成的任何问题。)相反， 我们会针对核心的持续集成实践提出问题，例如在签入代码时是否会 启动自动化测试。这个方法帮助我们避免了由于只针对熟悉 DevOps\n\n的用户调研而产生偏差。\n\n第15章  研究项目所用的数据  |155\n\n基于之前的研究和我们自己的经验以及那些曾在大型企业中主 导技术转型的人的经验，我们相信我们的许多发现广泛适用于正在转 型的团队和组织。举例来说，无论团队是采用 DevOps 实践、敏捷方 法，还是希望改进他们的瀑布式开发方法，使用版本控制和自动化测 试都很可能产生积极的效果。同样，无论采用哪一种软件开发模式， 拥有一种重视信息透明度、信任和鼓励创新的组织文化都可能对技术 组织产生积极的影响-     在任何垂直行业中都是如此，因为该框架可\n\n以在不同的环境中预测绩效结果，包括医疗保健行业和航空业。\n\n确定目标群体后，需要确定抽样方法：如何邀请人们参与问卷调 查?抽样方法分为两大类：概率抽样和非概率抽样°。我们的研究不 能使用概率抽样，因为这需要我们知道总体中的每个成员，并且每个 成员都有平等的机会参与研究。这是不现实的，因为世界上不存在一\n\n份详尽的 DevOps 从业人员名单。下面对此进行更详细的解释。\n\n为了收集数据，我们发送了一些电子邮件并使用了社交媒体。邮 件被发送给了我们自己的邮件列表，其中是从事DevOps 工作的技术 专家和专业人士。(这些人之所以在我们的数据库中，是因为他们参 加了先前的研究项目，或者是因为在 Puppet  公司的市场营销数据库 中，抑或是因为对 Gene  Kim和 Jez  Humble的书和工作感兴趣。)此\n\n外，我们将电子邮件按邮件列表发送给了各专业团体，还特别向技术\n\n① 概率抽样是采用随机选择的任何一种统计抽样方法。同理，非概率抽样是不采用 随机选择的任何一种统计抽样方法。随机选择确保了总体中的所有个体都有平等 的机会被选中。因此， 一般首选概率抽样。然而，由于一些环境因素，概率抽样 并不总是可行的。\n\n156  |  加速：企业数字化转型的24项核心能力\n\n方面的弱势群体和少数群体发出了邀请。除了通过电子邮件直接发出 邀请，我们还利用了社交媒体，作者和赞助方都在Twitter 和 LinkedLn\n\n上发布了调查问卷的链接。\n\n为了将调研范围扩展到开发和交付软件的技术群体，我们还邀请 了推荐人。这种基于最初的样本增长的抽样方法被称为推荐抽样或雪 球抽样，因为样本通过纳入额外的受访者而像滚雪球一样增长。对于\n\n我们的研究而言，雪球抽样是合适的数据收集方法，原因如下。\n\n口识别采用 DevOps 方法开发软件的群体比较困难甚至无法做到。\n\n在美国从事会计和土木工程等工作的专业人士持有国家认证  证书，如CPA或 PE。与这些领域不同，并没有一个权威认证  机构可以给我们提供一份 DevOps 从业人员名单。除此之外，  我们也不能通过搜寻组织结构图(即使是可以公开访问的)来  确定这个群体的规模，因为并不是每个人的职位名称中都带有  “DevOps” 或其他核心的关键词。特别是在研究项目的初期，  许多技术人员拥有非传统的工作头衔。即使组织结构图是公开 的，许多工作头衔也不够具体，对我们的研究工作没有价值。 (比如，“软件工程师”既可能包含使用瀑布式方法的开发人  员，也可能包含使用 DevOps 方法的开发人员。)对于总体难  以确定的情况而言，雪球抽样是一种非常适合于研究特定群体\n\n的方法。\n\n口研究对象往往反对被研究。对技术人员的研究历史悠久，而不\n\n幸的是，这些研究往往导致了组织进行“精益转型”,实际上\n\n第15章 研究项目所用的数据  |  157\n\n就是大量裁员。雪球抽样适用于通常不愿接受研究的人群。通 过向其他人推荐这项研究，他们可以为调查问卷中的问题甚至 研究人员的名誉进行担保(让新参与者放心，这些问题的目的\n\n不是宣传)。\n\n不过，雪球抽样有一些固有的局限性。第一个局限性是，抽样的 初始用户(在我们的示例中是电子邮件的接收者)可能没有代表性。 为了弥补这一点，我们一开始就发出了一些邀请(收到邀请的人称为 合作者)。合作者的数量尽可能多，类别尽可能多元化。我们通过合 并几份邮件列表来做到这一点，包括来自不同规模的公司和不同国家 的受访者。此外，我们还通过他们自己的邮件列表和组织触达技术领\n\n域的弱势群体和少数群体。\n\n雪球抽样的另一个局限性是，所收集的数据在很大程度上受到最 初受邀者的影响。如果只针对一小部分人并要求他们推荐，那么这就 是一个问题。如前文所述，为了解决这个问题，我们邀请了一个非常\n\n庞大且多元化的群体来参与研究。\n\n最后，人们可能还会担心研究结果并不能代表该行业的实际情况 并质疑数据中可能存在盲点。我们通过几种方式来解决这个问题。首 先，我们并不仅仅依靠每年的研究结果来得出结论。我们积极参与行 业和社区的活动，以确保自己了解行业动态并能根据新兴趋势对结果 进行三角定位。这意味着我们积极地通过社区峰会、同事和同行寻求\n\n对研究结果的反馈。然后，通过对照我们的记录来了解正在发生的趋\n\n158  |  加速； 企业数字化转型的24项核心能力\n\n势，而不是仅仅依赖于单一数据源。如果发现任何差异，我们都会重 新审视假设并进行迭代。其次，我们每年都邀请了外部专家来审视我 们的假设，以确保假设与时俱进。第三，我们查阅现有的文献，以从 其他领域中寻找可能为我们的研究提供见解的模式。最后，我们每年\n\n都向社区征求意见和建议，并在设计研究方案时予以采纳。\n\n第三部分 转    型\n\n我们已经介绍了研究成果，即哪些能力对提高软件交付绩效和组 织绩效非常重要。然而", "metadata": {}}, {"content": "，而不是仅仅依赖于单一数据源。如果发现任何差异，我们都会重 新审视假设并进行迭代。其次，我们每年都邀请了外部专家来审视我 们的假设，以确保假设与时俱进。第三，我们查阅现有的文献，以从 其他领域中寻找可能为我们的研究提供见解的模式。最后，我们每年\n\n都向社区征求意见和建议，并在设计研究方案时予以采纳。\n\n第三部分 转    型\n\n我们已经介绍了研究成果，即哪些能力对提高软件交付绩效和组 织绩效非常重要。然而，将这些信息应用于组织转型是复杂而艰巨的 任务。这就是为什么我们庆幸 Steve Bell和 Karen Whitley Bell答应 为本书写一章关于领导力和组织转型的内容。在第16章中，他们分\n\n享了经验和见解，并引导你踏上自己的转型之旅。\n\nSteve Bell 和 Karen Whitley Bell是精益IT领域的先驱人物。他们 没有被某一具体方法论所束缚，而是从各种实践中萃取精华—— DevOps、 敏捷、Scrum、  看板、精益创业、Kata、Obeya、 战略部 署，等等。此外，他们根据不同的文化和场景训练并帮助企业领导者\n\n开发高绩效实践和组织学习能力。\n\n在第16章中， Steve  Bell 和 Karen Whitley  Bell 总结了他们在 ING Netherlands 的经验。ING   Netherlands 是一家全球性银行， 拥有逾3440万名客户，员工人数达5.2万，其中包括9000多名工\n\n程师。这一章阐述了领导力、管理层和团队实践促进文化变革的原因\n\n160   |  加速：企业数字化转型的24项核心能力\n\n和方法，并提供了在复杂和动态的环境中持续提高组织绩效的经典\n\n案例。\n\nSteve Bell 和 Karen Whitley Bell 拓展了我们的视角，让我们不 止步于研究团队、管理层和领导力之间的相互作用，不止步于熟练地 采用 DevOps 实践，不止步于打破壁垒。这些都是必要措施，但还不 够。在这个案例中，我们看到了全员参与并高度符合企业目标的组织\n\n转型过程。\n\n第16章\n\n高效地领导和管理\n\n撰写人： Steve Bell和 Karen Whitley Bell\n\nNicole 、Jez和 Gene的研究表明，领导力确实对结果有巨大的影 响。优秀的领导者可以帮助团队提高代码交付能力，构建好的系统， 并将精益原则应用于管理工作和产品开发。上述一切对组织的盈利能 力、生产力和市场份额都有可度量的积极影响。这些因素也会影响客 户满意度、效率和实现组织目标的能力。然而Nicole 、Jez和 Gene也\n\n注意到，在DevOps领域，领导力在技术转型中的角色常常被忽视。\n\n这是为什么呢?为什么技术人员不断地寻求改进软件开发和部 署的方法以及基础设施和平台的稳定性和安全性，却在很大程度上忽 略了(或者搞不清楚)领导、管理和坚持这些努力的方式?这种现象 对于大型传统企业和科技企业来说都是普遍存在的。我们不要从过去 的角度来思考这个问题，而要从现在和未来的角度考虑：为什么必须\n\n改进领导和管理 IT 工作的方式，并重新构想企业中的每个人看待和\n\n162   |  加速：企业数字化转型的24项核心能力\n\n使用技术的方式°?\n\n价值的创造方式、交付方式和消费方式正在经历彻底变革。快速 有效地预见、开发和交付与技术相关的价值并以此提升客户体验，这 种能力正成为一个关键的竞争优势。不过，高技术绩效只是竞争优势 的必要条件，而非充分条件。我们可以高效开发并交付可靠、安全的 技术，但是如何知道客户看重哪些体验呢?我们如何对所创建的内容 进行优先级排序，从而使每个团队的工作都能助力企业战略的实现?  如何从我们的客户、我们的行动以及彼此相互学习?如何在整个企业\n\n中分享学习成果并利用这些成果不断地调整和创新?\n\n要保持竞争优势，另一个必要因素是拥有一个轻量级、高效能的 管理框架。利用这个框架，我们可以将企业战略与行动联系在一起， 使思想向价值流动，促进快速反馈和学习，利用每个个体的创造力来 实现最佳的客户体验。这个框架在实践层面(而不是在理论层面)会 是什么样的呢?我们如何通过改进自身的领导力、管理实践和团队实\n\n践来成就我们心目中的优秀企业呢?\n\n16.1 实践中的高效能管理框架\n\nNicole 、Jez和 Gene 在本书中讨论了几种被证实与组织绩效相关\n\n的精益管理实践。在某种程度上，所有这些实践都是相辅相成的。为\n\n① 来自Nicole 、Jez和Gene的注释：本章使用 “IT” 这个术语来指代软件开发流程。 从这个意义上讲，它远不止公司的某个技术职能，比如IT 支持或服务台。\n\n第16章  高效地领导和管理  |  163\n\n了说明领导力、管理实践和团队实践之间的相互作用并展示实现这些 实践的基本思想，我们将分享 ING  Netherlands  的经验。ING  Netherlands 是一家全球性金融机构，它是银行业数字化转型的先驱， 凭借以客户为中心的技术领导力而闻名。如今， IT  正在引领 ING\n\nNetherlands的数字化转型。\n\nING Netherlands互联网银行和全渠道业务IT 经理 Jannes Smit 表  示：“你必须理解为什么要这样做，而不是简单地照搬别人的做法。” 七年前，Jannes Smit  决定尝试在自己的团队中开展学习活动。虽然我  们可以用很多方式来描述这种管理实践，但也许最好的方式是带你进  行一次虚拟访问——尽管是从书本上。 (ING  Netherlands 很乐意分享  自己的学习故事，但不愿意给你展示墙上的东西!)我们将与你分享  在 ING Netherlands 的一天，向你展示如何通过实践、把控节奏和日\n\n常工作来创建可以交付价值的高绩效学习型组织。\n\n你将看到的景象与我们最初看到的景象几乎没有相似之处。最 初，我们定期走访 ING Netherlands 的各个团队，以推动所谓的“训 练营”,从而思考Jannes Smit和他的下属是如何领导和管理团队的。 与许多企业的 IT 组织一样，这些团队位于远离主办公区的地方，被 许多人视为职能部门，而不是实现企业战略的重要贡献者。今天，我 们来到了公司的总部，Jannes Smit的团队现在位于高管楼层的楼下， 办公空间很敞亮。通过安检后，我们经过一个大型的开放区域——俯 瞰花园的咖啡馆和小食铺，旨在创造惬意的空间，方便员工聚会和分\n\n享想法。然后，我们进入了“部落”。我们的左边是一个装有玻璃墙\n\n164  | 加速：企业数字化转型的24项核心能力\n\n的大房间，其内部一览无余。这是“作战室”(Obeya     room),如图 16-1 所示。“部落”负责人的工作内容、优先级和行动项全部以可视 化的方式呈现，供在这里开会的所有人查看和更新。在这里， Jannes Smit定期与他的直接下属会面，他们可以很快掌握并了解每个战略目 标的状态。呈现的区域有4个：战略改进、绩效监控、产品组合路线 图和领导层动作，每个区域都有关于目标、差距、进度和问题的即时 信息。为了突出问题，人们还使用了不同的颜色(红色和绿色)。每\n\n个IT 目标都以可度量的方式与企业战略紧密关联。\n\n图16-1 ING Netherlands的“作战室”(360度全景图)\n\n两年前，ING Netherlands 经历了一次重要的转变，沿多条业务线 形成了多维矩阵结构，以支持客户价值的持续流动(精益实践者称之 为价值流),如图16-2所示。每条业务线都是一个“部落”(例如按 揭贷款服务部落),旨在交付一系列彼此相关的产品和服务。每个“部 落”都由多个被称为小分队的自治团队组成(例如按揭贷款申请小分 队),每个小分队负责一个客户任务。每个小分队都由一个产品负责 人领导(涉及 IT 领域的小分队由一个 IT 负责人领导),并根据 Jeff Bezos 的“两个比萨原则”确立规模——任何团队都不能大到需要两 个以上的比萨才能填饱肚子。大多数小分队是跨职能的，由工程师和\n\n市场人员组成，团队成员对客户价值的理解是一致的。在 ING\n\n第16章 高效地领导和管理  |  165\n\nNetherlands, 这种团队组成被称为业务 DevOps(BizDevOps) 。 最近， 他们发现需要一种新的桥梁角色，并且计划将其称为“产品区域领  导”,以联合多个紧密相关的小分队。这个新角色不是一开始就计划  好的，而是通过经验和学习产生的。除了小分队，还有分会，由从事  同一类工作的员工组成(例如数据分析分会)。分会成员横跨不同的  小分队，并用专业知识来促进小分队成员的学习和进步。最后，专家  知识中心将具有特定能力的个人聚集在一起(例如通信专家知识中心\n\n和企业架构师专家知识中心)。\n\n部落\n\n分为多个小分队，负责\n\n完成相互关联的任务   \n\n小分队\n\n新型敏捷组织的基础\n\n分会\n\n跨小分队提高专业技能\n\n平均约有150人\n\n促使部落负责人指定工作优  先级。分配预算，并与其他 部落分享知识和见解\n\n敏捷教练\n\n训练小分队成员，以提高 团队绩效\n\n·不超过9人 ·跨职能", "metadata": {}}, {"content": "，并用专业知识来促进小分队成员的学习和进步。最后，专家  知识中心将具有特定能力的个人聚集在一起(例如通信专家知识中心\n\n和企业架构师专家知识中心)。\n\n部落\n\n分为多个小分队，负责\n\n完成相互关联的任务   \n\n小分队\n\n新型敏捷组织的基础\n\n分会\n\n跨小分队提高专业技能\n\n平均约有150人\n\n促使部落负责人指定工作优  先级。分配预算，并与其他 部落分享知识和见解\n\n敏捷教练\n\n训练小分队成员，以提高 团队绩效\n\n·不超过9人 ·跨职能，成员在同一个地点 工作 ●负责端到端实现与客户相关 的目标 ·可以根据任务改变职能构成 ·一且任务结束即刻解散 分会负责人 ·负责分会的工作 ·代表小分队的层级(个人 发展。培训。人员分配和 绩效管理)\n\n产品负责人\n\n(小分队成员，非领导)\n\n负责协调小分队的工作\n\n管理待办事项清单和设定工\n\n作优先级\n\n图16-2 ING   Netherlands的敏捷组织模型没有固定的结构——它在不断地演进 (来源： ING Netherlands)\n\n166  |  加速：企业数字化转型的24项核心能力\n\n我们从 Jannes 的“作战室”开始参观，陪同我们的有 Jannes 团 队内部的持续改进教练 David Bogaerts 、Jael Schuyer 、Paul Wolhoff、 Liedewij van der Scheer和 Ingeborg Ten Berge。他们一起组成了一个小 而有效的精益领导力专家小分队，旨在指导领导者、分会负责人、产 品负责人和 IT 部门负责人。这些人又会指导他们的分会成员或小分\n\n队成员，从而形成杠杆效应来大规模地改变行为和文化。\n\n前方是一个小分队工作区(小分队自己的“作战室”)。那是一个 开放区域，窗户和墙壁被各种图表覆盖。队员们能够通过这些图表来 实时监控绩效，看到障碍、改进状态和其他对小分队有价值的信息。 在这个工作区的中间有一排可调节高度的桌子和一些可调节高度的 椅子，队员们既可以彼此面对面地坐下，也可以站着。椅子有不同的 形状和颜色，这使整个空间看上去很有趣，也符合人体工程学。小分 队的图表具有一些共同特征，“作战室”在设计上的相似之处也使小 分队以外的同事一眼就能了解工作的某些方面，从而促进共同学习。 标准的数据项包括目标、当前的绩效和差距、新的和升级的问题、需 求、在制品数量和已完成的工作。将需求可视化有助于区分优先级， 并限制在制品数量。不过，各个小分队的视觉展示也有一些不同，每 个小分队的工作都是独一无二的，他们能够自己决定哪些信息(以及\n\n这些信息的可视化方式)最有助于实现目标。\n\n当我们经过时，队员们正在进行快速学习和反馈的每日站会。站 在显示需求和在制品数量的可视化板前，每个队员简要地汇报自己负\n\n责的在制品的状态，是否遇到任何障碍，以及哪些部分已经完成。就\n\n第 1 6 章 高效地领导和管理  | 167\n\n在他们说话的同时，可视化板也同步更新了。这类站会通常持续15 分钟左右。如今，每日站会成为了首选的会议形式。与之前的会议相\n\n比，每日站会大大缩短了人们花在开会上的时间。\n\n虽然在站会期间，问题并没有得到解决，但是另有一道程序来确 保这些问题得到快速解决。如果某个问题需要与其他队员合作才能解 决，那么它会被记录下来，这些队员会在当天晚些时候讨论。如果问 题需要 IT 部门的支持才能解决，那么它同样会被记录下来，队员们 会将其升级。IT  部门负责人可能会很快解决这个问题，或者与其他 IT部门负责人或“部落”负责人一起解决。 一旦解决完毕，这些信息 就会通过渠道快速地反馈回来。在问题得到解决之前，它会一直保留 在可视化板上。同样，如果问题本质上与技术相关，那么有关它的信 息将被分享给与之相关的分会或专家知识中心。这种横纵兼顾的沟通\n\n模式是一种标准的领导力工作实践，称为“接球”,如图16-3所示。\n\n图16-3 站会和“接球”节奏\n\n168   | 加速：企业数字化转型的24项核心能力\n\n使用相同的沟通框架，其他相关的学习方式也在小分队、分会、 专家知识中心和“部落”之间传递，从而在整个组织中形成了跨越所 有维度的学习流程。这使小分队能够自行决定如何以最好的方式工 作，以支持整个企业战略的实现，并有效地为所有工作指定优先级。 “部落”负责人(在本例中是 Jannes)  同样会从小分队和分会的成员 那里了解信息，包括他们在与客户的直接互动中所获得的经验。这使 他能够调整自己的战略思维和目标，并与他的同事和上级分享见解。 这种快速学习和交流的实践是一种战略部署形式(精益实践者称之为 “方针管理”),它不但可以使一线团队了解企业战略的优先级，还可 以使领导者从一线团队与客户的互动中了解客户体验。它在所有级别 上都创建了持续、快速的反馈循环，涉及学习、测试、验证和调整。\n\n这种反馈循环被称为 PDCA 循环，也称为戴明环。\n\n除了与小分队、产品负责人、IT部门负责人和分会负责人定期举  行站会，“部落”负责人还会定期拜访小分队并提出问题。不过，“部  落”负责人不会提出像“为什么这件事还没做完”这样的传统问题，  而会提出诸如“能否帮助我更好地理解你遇到的问题”“能否帮助我  了解你正在学习的内容”“我可以做些什么来更好地支持你和团队” 这样的问题。对于一些管理者来说，做出这种教练式的行为并不容易。 为了从传统的指挥控制式领导者转变为教练式领导者，需要在培训、  指导和建模方面付出很大的努力 (ING Netherlands的全渠道“部落” 正在试点指导措施，并准备进一步推广)。每一位教练式领导者都有\n\n3个目标：完成工作，改善工作，发展人才。第3个目标——发展人\n\n第16章 高效地领导和管理  | 169\n\n才——在自动化不断颠覆各类岗位的技术领域里显得尤其重要。知道 有朝一日自己的工作岗位可能消失，辛勤工作的人们需要完全相信领 导珍视自己——不仅因为他们当前的工作，还因为他们在工作中所表 现出的创新能力。由于工作内容本身会不断变化，因此只有帮助员工\n\n快速学习和适应变化，组织才能脱颖而出。\n\n在离小分队“作战室”不远的一间由玻璃墙围成的会议室里，我 们见到了年轻的工程师Jordi  de  Vos, 他从一入行开始就在 Jannes的 新工作方式指导下工作。Jordi 是一个分会的负责人，他同时负责实 现某个战略改进目标。(还记得吗?之前我们提到过这些目标：战略 改进、绩效监控和产品组合路线图。)Jordi 与他人分享了自己对团队 安全感的理解，那是一种可以公开讨论问题和遇到的障碍而不用担心 被陷害或报复的心理安全感。他介绍了自己的一些发现，他如何通过 实验来了解哪些内容会在小分队中产生最大的共鸣，以及发生了哪些 可度量的变化。每个小分队和分会都将分配固定比例的时间用于改进 和优化工作。Jordi 介绍说，这些小分队和分会将改进和优化视为日\n\n常工作的一部分。\n\n我们问 Jordi 在这种文化中工作是什么感觉。他思考了一会儿，  然后分享了一个故事。Jannes的“部落”受到了高层领导的挑战，要  求他们的效率提高一倍。Jordi说道：“最后期限很近，压力也很大。  我们的领导Jannes 来到小分队前说：‘如果质量不达标，就不要发布。 我来为你们撑腰。’正因为如此，我们认为有责任保证质量。这帮助\n\n我们做了正确的事。”有太多时候，速度的压力给质量蒙上了一层阴\n\n170   | 加速：企业数字化转型的24项核心能力\n\n影。因此，有勇气和全力支持的领导对于团队来说至关重要。他或她 可以帮助团队“通过慢下来的方式来加快速度”,为他们提供将质量 放在首位(符合产品的用途)的安全感和权力。从长远来看，这样做 不但可以提高速度、 一致性和容量，还可以减少成本、延迟和返工。\n\n最重要的是，这样做可以提高客户的满意度和信任感。\n\n参观完 Jordi 的小分队，我们经过了更多的小分队工作区和更多 的玻璃屋，每一个都有相同的元素，但在色调、纹理和陈设上又各有 特色。回到领导力“作战室”,我们与教练团队共进健康午餐，并回 顾了自上次拜访以来我们看到的许多积极的变化。教练团队分享了对 当前挑战的思考和正在尝试的一些方法，从而继续传播和培养以大局 为重的文化，专注于“先深入后扩展”。尽管如此，扩大规模和加快 速度的压力依然存在。目前，教练团队的一名成员正专注于改变荷兰 以外的几个国家的团队文化。鉴于ING在40多个国家和地区拥有业 务，该集团为学习留出时间和精力(而不是大规模地变革)的做法令 人印象深刻。教练们正在尝试解决的另一个挑战来自分散的团队。随 着近期的重组， 一些小分队的成员分散在多个国家。因此，教练团队 正在尝试度量跨境小分队之间保持同样高水平的协作和学习的方法\n\n(在虚拟世界中很难共享两张比萨)。\n\n毫不奇怪， 一些资深的领导者和“部落”负责人希望拥有自己的 “作战室”。教练团队希望这个过程足够缓慢", "metadata": {}}, {"content": "，该集团为学习留出时间和精力(而不是大规模地变革)的做法令 人印象深刻。教练们正在尝试解决的另一个挑战来自分散的团队。随 着近期的重组， 一些小分队的成员分散在多个国家。因此，教练团队 正在尝试度量跨境小分队之间保持同样高水平的协作和学习的方法\n\n(在虚拟世界中很难共享两张比萨)。\n\n毫不奇怪， 一些资深的领导者和“部落”负责人希望拥有自己的 “作战室”。教练团队希望这个过程足够缓慢，从而实现真正的学习。 变革型和生机型的领导力远远不止“作战室”墙上的那些内容，也不\n\n是领导者平常说说那么简单。Jannes 说：“作为领导者，在要求别人\n\n第16章 高效地领导和管理  | 171\n\n改变之前，先要审视自己的行为。”Jannes  会第一个告诉你，他还在\n\n学习。我们相信，他成功的秘诀就在于此。\n\n午餐后，我们前往高管楼层。在那里，我们看到一些高管的“作 战室”已经初具规模。我们遇到了首席设计工程师 Danny Wijnand,    他曾在Jannes 手下工作，直到去年被晋升为“部落”负责人。Danny  回忆了这种新工作方式的推广过程，它从Jannes 的“部落”传播到高 管层，并遍及ING 的其他部门。他说道：“你有时也会失去耐心，想 加快他们的学习速度，但后来你意识到自己也经历了同样的过程，并\n\n且需要时间。会讲故事很重要，但他们必须自己真正学到知识。”\n\n回到“部落”楼层，分会负责人Jan Rijkhoff 陪同我们继续参观。 我们想了解他们目前所采用的问题解决方法。多年来，他们尝试了不  同的方法，包括 A3 、Kata、精益创业等，并最终将他们认为有用的  元素结合起来，形成了自己的方法。在拜访期间，我们的确从墙上的\n\n图表中看到了多种问题解决方法。\n\n他们的方法是召集对问题有经验和见解的人来仔细分析当前的 情况。这种严谨性是有益的，因为团队能够更加了解情况，从而更有 可能找到问题的根源，而不是停留在问题表面。通过这种学习方式， 他们形成了关于如何改进的假设，并且知道如何通过实验结果来检验 假设。如果实验成功，他们就会将其作为标准做法，分享学习经验， 并继续监控结果，以确保改进是可持续的。不仅如此，他们还将这种\n\n问题解决方法应用于整个组织。有时，领导层面的问题会被分解成更\n\n172   |  加速：企业数字化转型的24项核心能力\n\n小的问题，然后从上至下地分给分会或小分队，以进行一线分析和可  控实验，并获得反馈。当我们再次与教练Paul 见面时，他告诉我们： “这种方法是有效的，因为它帮助人们接受变化，让人们提出自己的\n\n想法，然后进行验证。”\n\n在这个丰富多彩、富有创造力的工作环境中，“凡事靠自己”的 哲学与标准做法似乎是对立的，甚至是相互排斥的。毕竟，这是知识 层面的工作。以过程(完成工作的方式)和实践(运用知识和判断完 成工作)为例。Scrum 站会属于过程，理解客户需求并编写代码则是 实践。当团队有标准工作方式时，不管工作内容是发布代码还是举行 站会，遵循这个标准都可以节省大量的时间和精力。在 ING  Netherlands, 标准工作方式的建立既不是通过模仿某一本书中叙述的 工作方式，也不是通过模仿另一家成功的公司所用的工作方式。相反， ING Netherlands 的团队尝试不同的工作方式，并就最佳方式达成一 致。这种节奏和惯例被推广到所有相似的团队。随着条件的变化，人\n\n们会对标准工作方式进行重新评估和改进。\n\n在结束一天的工作之前，Jannes 带我们参观了领导力“作战室”。 在那里，他添加了一些即时贴，又看了看其他人更新的内容。我们询  问他如何看待团队的学习经历。他分享道：“一开始，我们的团队没  有学习，也没有进步。团队无法持续学习。我发现团队努力解决的问 题是其他团队已经有了解决方案的，而各个团队没有一起学习。当我  们作为管理者不能有效学习时，我们就无法帮助底下的团队学习。我\n\n们必须学会如何让自己成为有能力学习的管理团队。我们的管理团队\n\n第16章 高效地领导和管理  | 173\n\n经历了自我学习过程，然后才去帮助底下的团队养成学习的习惯。”\n\n接着，我们又询问了Jannes 关于改变文化的方法。他说道：“以 前，我从不讨论文化。这是一个很难讨论的话题，我不知道如何以一 种可持续的方式改变文化。但我后来学到了，如果改变工作方式，就\n\n能改变惯例，也就创造了不同的文化。”\n\n“高管层对我们非常满意，”他笑着补充道，显然为他的下属感到 自豪，“我们既有速度，又有质量。有时，我们可能比其他一些团队 需要更长的时间来实现目标(绿色),但一旦如此，我们往往能够保\n\n持(绿色),其他很多团队则会退回到从前(红色)。”\n\n16.2 改变领导力实践、管理实践和团队实践\n\n企业管理者经常问我们：该如何改变文化?\n\n我们认为以下问题更好。\n\n口我该如何习得科学的学习方法?\n\n口我该如何学习?\n\n口我怎样才能让他人在有安全感的氛围中学习?\n\n口我如何向他人学习，又如何与他人共同学习?\n\n口我如何与他人共同构建新的行为和新的思维方式，从而养成新\n\n的习惯并形成新的文化?\n\n174   |  加速：企业数字化转型的24项核心能力\n\n我们应该从哪里开始? ING Netherlands 的变革始于一位问自己 上述问题的领导者。然后，他聘请了优秀的教练，负责挑战每个人(包 括他自己),让大家质疑假设，尝试新的做法。他召集了自己的管理团 队，对他们说：“让我们一起来尝试一下。即使这样做不管用，我们也\n\n会有所收获并且变得更好。你们愿意和我一起来看看能学到什么吗?”\n\n每个季度，他的管理团队都会聚集在一起学习新的知识，并在之 后的几个月里将这些知识付诸实践。每个人从一开始的不适应到后来 的从容应对，最终养成了一种习惯——不断复盘。 一进入舒适区，他 们就尝试突破；再次进入舒适区，再次尝试突破。在整个过程中，他\n\n们都会一起反思，并在需要的时候做出调整。\n\n我们还记得在早期的一个训练营中，我们要求管理团队开发一套 简单的标准工作方式——可视化管理，定期站会，对团队成员进行持 续的辅导——以取代他们习以为常的冗长会议和“救火”行为。为了 开创这种新的工作方式，他们首先需要意识到自己当前是如何分配时 间的。起初，大家明显持怀疑态度并表现出不适。然而在接下来的几 周里，他们每个人都记录了自己每天是如何分配和利用时间的。大家\n\n分享了彼此的经验，并一起开创了新的工作方式。\n\n三个月后，当我们回到 ING Netherlands 参加下一个训练营时， 经理 Mark Nijssen 对我们表示欢迎。他说：“我再也不会回到以前的 工作方式了!”采用基本的标准工作方式不仅成功地帮助他们提高了\n\n效率，还成功地实现了将10%的时间用于自主选择的工作内容。\n\n第16章 高效地领导和管理  |175\n\n这种尝试新的思维方式和工作方式的意愿帮助 ING Netherlands  取得了今天的成就。但要认识到，这种转型没有核对清单或实施指南。 你不能“实施”文化的改变。从本质上来说，“实施”式的思维方式  (试图模仿另一家公司的特定行为和实践)与生机型文化的本质是相\n\n悖的。\n\n本章在末尾处提供了一份表格(见表16-1),其中列出了我们在 拜访 ING Netherlands 时了解到的许多实践。标有星号的是研究表明 与高绩效相关的实践。我们希望未来的研究能够探索这张表中的所有 实践。请不要把这张表用作核对清单，而要将它视为精华或通用参考，\n\n用于开创属于你自己的行为和实践。\n\n正如你在本章中看到的，高绩效文化远远不止应用工具、采用一 组相互关联的实践、复制成功组织的行为或实施某个由专家设计的框 架。你需要通过实验和以证据为指导的学习来开创新的工作方式。对 于每个组织而言，这种工作方式应该各不相同，需要根据具体情况和\n\n组织文化而定。\n\n在创建学习型组织时，采用并保持正确的心态至关重要。基于我 们在帮助企业打造高绩效生机型文化的过程中所总结的经验，我们提\n\n出以下建议。\n\n口采用并保持正确的心态。这是为了学习和为组织创建共同学习\n\n的环境，而不仅仅是为了实践，当然也不是为了使用工具。\n\n口形成自己的风格。这意味着以下三点。\n\n176  |  加速：企业数字化转型的24项核心能力\n\n■不要指望能够复制其他企业的方法和实践，或实施由专家 设计的模型。要向成功的企业学习，并采用适合于自己的 实践。\n\n■不要通过外包的大型咨询公司来迫切地转型或者实施新的 方法和实践。你的团队会认为精益或敏捷等各种方法是针 对他们而开展的。虽然这样做可以暂时改进当前的流程， 但是你的团队不会有信心(也不会有能力)持续改进，或 自己开创流程。\n\n■培养自己的教练。最初你可能需要聘请外部教练来为你奠 定坚实的基础", "metadata": {}}, {"content": "，或实施由专家 设计的模型。要向成功的企业学习，并采用适合于自己的 实践。\n\n■不要通过外包的大型咨询公司来迫切地转型或者实施新的 方法和实践。你的团队会认为精益或敏捷等各种方法是针 对他们而开展的。虽然这样做可以暂时改进当前的流程， 但是你的团队不会有信心(也不会有能力)持续改进，或 自己开创流程。\n\n■培养自己的教练。最初你可能需要聘请外部教练来为你奠 定坚实的基础，但最终你必须独立做出改变。教练的参与 度是维持和扩展转型规模的关键杠杆。\n\n口你自己也需要改变工作方式。无论你是高管、经理还是团队成 员，都要以身作则。生机型文化源于示范新的工作方式，而不\n\n是要求下属改变。\n\n口需要纪律。对于Jannes的管理团队来说，在下属面前记录和反 思他们是如何分配时间的，或者尝试他们最初不习惯的新事\n\n物，这些都并非易事。改变需要纪律和勇气。\n\n口需要耐心。经过数十年的时间，当前的工作方式已经根深蒂固。 你需要时间去改变行为和思维模式，直到它们成为新的习惯，\n\n并最终成为新的文化。\n\n口需要实践。大胆尝试：学习、成功、失败、学习、调整、重复。\n\n节奏和惯例，节奏和惯例，节奏和惯例……\n\n第16章 高效地领导和管理  | 177\n\n在学习新的领导方式和工作方式的旅程中，你和与你同行的人将 不断探索、开拓、犯一些错误、做对很多事、学习、成长。你会发现 更快、更好的方法来融入、学习和适应不断变化的环境。与此同时， 你将提高你所做的每件事的质量和速度。你将提升自己的领导力和创 新能力，超越竞争对手，更快、更有效地为客户和企业提升价值。本 书背后的研究表明，你将“对组织的盈利能力、生产力和市场份额产 生可度量的积极影响。这些因素也会提高客户满意度、效率和实现组\n\n织目标的能力”。\n\n祝你在学习之路上一切顺利!\n\n表16-1 高效的团队实践、管理实践和领导力实践(非完整列表)\n\n团队实践 管理实践 领导力实践 文化 *孕育生机型文化 *孕育生机型文化 *孕育生机型文化 *内建质量，持续度量 和监控 *强调质量，保护团队 的质量保证能力 *强调质量，保护团队的 质量保证能力 致力于在组织范围内 推广学习 致力于在组织范围内 推广学习 致力于在组织范围内推 广学习 *给团队留出时间去 改进和创新 *给团队留出时间去改 进和创新 组织结构 *度量和管理(矩阵式跨 职能价值流) 组建跨职能、多技能 的小团队，促进团队 间的交流和合作 注重跨技能，以消除专 家瓶颈，形成专家社区 培养内部教练，并为他 们提供支持 直接学习和 统一价值观 *与客户交流，向客户 学习，用客户的反馈  验证(Gemba) *与客户和团队交流 向他们学习(Gemba *与客户、团队、供应链 合作方以及其他利益相 关方交流，向他们学习 (Gemba)\n\n178  |  加速：企业数字化转型的24项核心能力\n\n(续)\n\n团队实践 管理实践 领导力实践 *理解并能展示客户 价值，识别可用于度 量质量的指标 *理解并能展示客户 价值，识别可用于度 量质量的指标 *理解并能展示客户价  值，识别可用于度量质 量的指标 *通过练习提升创造 力 *通过练习提升创造 力，鼓励团队成员利用 练习时间学习和创新 *为提升创造力留出预  算和时间(谷歌公司允  许员工将每周工作时间 的20%用于新项目) 战略部署 *将团队目标可视化 理解为何这些目标有 助于企业战略 帮助团队将目标可视 化，理解并解释为何 这些目标有助于企业 战略(“接球”) 练习战略部署，将所有 目标可视化，向经理解 释目标，帮助他们合理 制定自己的目标 *积极监控和展示目 标完成情况 *积极监控和展示目 标完成情况 *积极监控和展示目标 完成情况 消除多余的控制措施， 注重流程质量、团队自 主性和能力(自主型团队 的软件交付绩效更高) 通过分析和 系统的问题 解决方法促 进信息流动 展示并分析工作流， 识别障碍(价值流映  射和分析),理解工作 内容和工作价值之间 的联系 展示并分析工作流  识别障碍(价值流映 射和分析),帮助团队 理解工作价值 展示并分析价值流的整 体情况(企业架构),识 别系统性障碍，优先支 持底层工作流的映射和 分析 优先处理有碍客户价 值、客户体验和团队 目标的问题 优先处理有碍客户价 值、客户体验和团队 目标的问题 优先清除系统性障碍 系统地解决问题，通 过分析找到问题根源 系统地解决问题，通 过分析找到问题根源 系统地解决问题，以找 到改进策略(战略部 署),通过学习改进标准 工作方式 升级跨职能的问题和 系统性问题 协调解决跨职能的问 题，解决或升级系统 性问题 采用“接球”实践和 PDCA循环，按照优先 级安排解决问题的人 提出关于问题根源的 假设，设计并开展可 控的实验，度量实验 结果，分享结论，改 进(如有必要，反复 实验) 提出关于问题根源的 假设，设计并开展可 控的实验，度量实验 结果，分享结论，改 进(如有必要，反复 实验) 通过整个组织范围内的 PDCA循环进行学习， 并且不断学习和改进\n\n第16章 高效地领导和管理  | 179\n\n(续)\n\n团队实践 管理实践 领导力实践 节奏和惯例 *展示、度量并监控工 作流，留意偏差(如  果出现偏差，就做出 响应) *展示、度量并监控工 作流，留意偏差(如  果出现偏差，就做出 响应) *展示、度量并监控工作 流，留意偏差(如果出 现偏差，就做出响应) *拆分需求，定期且频 繁地发布 *展示需求、WIP和已 *展示需求、WIP和已 *展示需求、WIP和已完 完成的工作(看板) 完成的工作(看板) 成的工作(看板) *最小化并展示WIP *最小化并展示WIP *最小化并展示WIP 根据目标为需求指定 根据目标为需求指定 根据目标为需求指定优 优先级 优先级 先级 确定并实践标准工作 确定并实践标准工作 确定并实践标准工作方 方式 方式 式 举行每日站会，根据 需要升级问题(“接 球”) 与团队负责人举行每 日站会，根据需要解 决、协调或升级问题 (“接球”) 与直接下属定期举行站  会，解决问题(“接球”) 支持团队成员互相学 习 培训团队成员，支持 团队学习 培训经理，培养内部教 练 定期复盘(针对工作 定期复盘(针对工作 定期复盘(针对工作内 内容和工作方式) 内容和工作方式) 容和工作方式)\n\n第17章\n\n总   结\n\n在过去的几年里，通过与 Puppet 团队一起调研技术人员并撰写 《DevOps 状态报告》,我们已经发现了很多关于如何提升团队绩效和 组织绩效的信息。在这一过程中，我们研究技术转型，向同行发布我 们的调研结果并获得反馈，还与同事和同行一起评估并转型自己所在 的组织。我们在软件交付绩效、技术实践、文化规范和组织绩效之间\n\n的关系方面有了许多突破性的发现。\n\n我们的研究持续证明，由于几乎所有的公司都依赖于软件，因此 软件交付绩效对于如今的任何公司来说都至关重要。软件交付绩效受 到许多因素的影响，包括领导力、工具、自动化以及持续学习和改进\n\n的文化。\n\n本书汇总了我们在研究之旅中的核心发现。第一部分介绍了我们 的研究发现。我们首先讨论了为什么软件交付绩效很重要，然后讨论\n\n了它如何驱动组织绩效指标，如盈利能力、生产力和市场份额，以及\n\n第17章总结 |  181\n\n非业务指标，如效率、有效性和客户满意度。在保证稳定性的前提下 快速地交付高质量软件，这个能力对于如今的任何公司来说都是关键\n\n的价值驱动因素和差异化因素，无论公司的规模或所属行业如何。\n\n第二部分总结了研究背后的科学，并阐明了我们所做的设计决策\n\n和所用的分析方法。这些内容为本书呈现的研究结果提供了基础。\n\n此外，我们还明确了在影响软件交付绩效方面具有统计显著性的 核心能力。我们希望通过阐释这些实践并提供示例来帮助你提高自己\n\n的绩效。\n\n第三部分讨论了转型。为了清楚地阐释这一部分，我们联系了同 事 Steve Bell和 Karen Whitley Bell。他们为本书贡献了一章内容。在 这一章中，他们展示了本书所述的能力和实践在实际工作中的样子， 并说明了这些能力和实践对创新型组织的意义。你可以运用从本书中 学到的知识开启自己的技术转型之旅，这些知识总结自许多成功转型\n\n的团队和组织。\n\n我们希望本书能够帮助你明确自己如何优化技术流程、业务流 程、工作文化和改进周期。切记", "metadata": {}}, {"content": "，我们联系了同 事 Steve Bell和 Karen Whitley Bell。他们为本书贡献了一章内容。在 这一章中，他们展示了本书所述的能力和实践在实际工作中的样子， 并说明了这些能力和实践对创新型组织的意义。你可以运用从本书中 学到的知识开启自己的技术转型之旅，这些知识总结自许多成功转型\n\n的团队和组织。\n\n我们希望本书能够帮助你明确自己如何优化技术流程、业务流 程、工作文化和改进周期。切记，你并不能通过花钱或复制来提高绩 效。在追求一条符合自己的特定环境和目标的道路时，你需要发展自 己的能力。这需要持续的努力、投入、专注和时间。然而，我们的研  究表明，所有的付出都是值得的。我们祝愿你在改进之路上一帆风顺，\n\n并期待听到你的故事。\n\n附录 A\n\n驱动改进的能力\n\n我们的研究揭示了24项核心能力，这些能力在提高软件交付绩 效方面具有统计显著性。本书详细介绍了我们的发现。本附录为你提 供了一份关于这些能力的精简列表，其中给出了每项能力对应的章节\n\n编号。\n\n我们将这些能力分为五大类。\n\n口持续交付能力\n\n口架构能力\n\n口产品与流程能力\n\n口精益管理与监控能力\n\n口文化能力\n\n在每个类别中，能力的排序不分先后。\n\n附录A    驱动改进的能力  |  183\n\n持续交付能力\n\n1. 版本控制。使用 Git 或 Subversion等版本控制系统来管理所有 生产工件，包括应用程序代码、应用程序配置、系统配置，\n\n以及用于自动构建和配置环境的脚本，详见第4章。\n\n2. 部署自动化。使部署流程达到完全自动化且不需要人工干预\n\n的程度，详见第4章。\n\n3. 持续集成。持续集成是实现持续交付的第一步。这是一种定 期签入代码的开发实践，每次签入都会触发一组快速测试来 发现严重的回归问题。 一旦发现这些问题，开发人员就可以 立即修复。持续集成流程创建最终部署和发布的规范构建和\n\n包，详见第4章。\n\n4. 主干开发。研究表明，主干开发有助于提高软件开发绩效和 软件交付绩效。它的特征是，代码库中的活跃分支少于3个； 在被合并到主干之前，分支和分叉的生命周期很短(例如少 于一天);应用程序团队很少或从来没有“代码锁定期”(在 “代码锁定期”内，为了避免合并冲突，没有人可以签入代码\n\n或拉取请求),详见第4章。\n\n5. 测试自动化。这是在整个开发过程中自动、持续地执行软件 测试的实践。有效的测试套件是可靠的，也就是说，测试可 以找到真正的错误，并且只有可发布的代码才能通过测试。\n\n请注意，创建和维护自动化测试套件的工作应该主要由开发\n\n184  |  加速：企业数字化转型的24项核心能力\n\n人员负责，详见第4章。\n\n6. 测试数据管理。测试数据需要精心维护，测试数据管理在自动 化测试中的作用正变得越来越重要。有效的实践包括有足够 的数据来运行测试套件，能够根据需要获取必要的数据，能 够在流水线中调整测试数据，以及测试的数量不被数据限制。\n\n但是需要注意，团队应该尽可能减少运行自动化测试所需的\n\n测试数据量，详见第4章。\n\n7. 安全左移。将安全性集成到软件开发过程的设计阶段和测试 阶段，这样做是驱动IT 绩效的关键。相关实践包括对应用程 序进行安全性审查，信息安全团队在应用程序的设计和演示 过程中使用预先批准的安全库和安全包，并将安全特性测试\n\n作为自动化测试套件的一部分，详见第4章和第6章。\n\n8. 持续交付。这是一种开发实践，指的是在整个生命周期中， 软件都处于可部署状态，并且团队将保持软件处于可部署状 态的优先级置于开发新特性之上。对于系统的质量和可部署 性，所有的团队成员都可以得到快速的反馈。当他们收到系 统不可部署的报告时，就会快速地进行修复。最后，根据需\n\n要可以随时面向生产环境或最终用户部署系统，详见第4章。\n\n架构能力\n\n9. 松耦合的架构。采用松耦合的架构有助于团队根据需要测试和\n\n部署应用程序，而不需要使用其他服务进行编排。这将使团\n\n附录A  驱动改进的能力  |  185\n\n队能够独立工作，而不依赖于其他团队的支持和服务，还使\n\n团队能够快速完成工作并为组织创造价值，详见第5章。\n\n10.授权团队。我们的研究表明，能够自主选择工具的团队在持 续交付方面做得更好，从而拥有更强的软件开发和交付能力。 没有人比一线实践者更清楚他们自己需要什么才能变得更高\n\n效，详见第5章。(与之对应的产品管理内容详见第8章。)\n\n产品与流程能力\n\n11.用户反馈。我们的研究发现，积极、定期地收集用户反馈， 并将这种反馈融入到产品设计中，这样做对于提高软件交付\n\n绩效非常重要，详见第8章。\n\n12.价值流。团队应该对从业务到客户的工作流(包括产品和特 性的状态)具有很好的理解并能将其可视化。我们的研究发\n\n现，这对IT 绩效有积极的影响，详见第8章。\n\n13.小批量工作。团队应该把工作分成小块，每个小块可以在一 周内完成。关键是要将工作分解成小的特性，以支持快速开 发，而不是在分支上开发复杂的特性且无法实现频繁发布。 这种思想可以应用于特性级别和产品级别。(MVP  是指最小 可行产品。这种产品原型拥有足够的特性来检验产品及其商\n\n业模式。)小批量工作可以缩短交付时间并加快反馈速度，详\n\n见第8章。\n\n186  |  加速：企业数字化转型的24项核心能力\n\n14.团队实验。应该鼓励并支持团队实验，即让团队能够在不需 要获得外部批准的前提下即可在开发过程中尝试新想法，并 且创建和更新规范，这使团队能够快速创新并创造价值。当 与小批量工作、整合用户反馈并使工作流程可见相结合时， 这一点尤其有效，详见第8章。(与之对应的技术内容详见\n\n第4章。)\n\n精益管理与监控能力\n\n15.变更审批流程。我们的研究表明，基于同行评审(结对编程或 内部代码评审)的轻量级变更审批流程比通过外部变更顾问\n\n委员会审批更有助于提高IT 绩效，详见第7章。\n\n16.监控。跨应用程序和基础设施监控，使用来自监控工具的数 据做出业务决策。这不仅仅是在出现问题时呼叫值班人员，\n\n详见第7章。\n\n17.主动通知。主动监控系统健康状况，使用阈值和变化率警告，\n\n使团队能够预先检测和缓解问题，详见第13章。\n\n18.限制在制品数量。通过限制在制品数量来改进和管理流程，这 在精益社区中是众所周知的实践。如果实施得当，那么它将 改进流程，增加吞吐量，并使系统中的约束和瓶颈可见，详\n\n见第7章。\n\n19.可视化工作。将工作可视化，以监控质量并让整个团队了解\n\n进展情况。使用仪表板或内部网站等视觉化工具来监控质量\n\n附录 A   驱动改进的能力  |  187\n\n和工作进展，这样做已被证明有助于提高软件交付绩效，详\n\n见第7章。\n\n文化能力\n\n20.Westrum组织文化。支持 Ron Westrum所描述的生机型文化。 Ron Westrum 是社会学家，他研究了航空领域和医疗保健领域  中对安全性要求很高的复杂系统。我们的研究发现，Westrum   组织文化可以提高IT绩效和组织绩效，同时缓解工作倦怠感。 它的特点包括良好的信息流、高度合作和信任、团队之间的\n\n良好沟通，以及积极主动的询问，详见第3章。\n\n21.支持学习。在你的组织文化中，学习被认为是持续进步的必 要条件吗?你的组织认为学习是一项成本还是一项投资?这\n\n项能力是对一个组织的学习文化的度量，详见第10章。\n\n22.团队间协作。这项能力反映了各个团队在开发、运维和信息\n\n安全等方面的协作程度，详见第3章和第5章。\n\n23.工作满意度。为员工提供使工作变得有意义的资源和工具。 这种对工作满意度的度量侧重于考察员工能否承担有挑战性 和有意义的工作，并有权展示自己的技能和判断力。这也考\n\n察了员工能否获得做好工作所需的资源和工具，详见第10章。\n\n24.变革型领导力。在 DevOps中，变革型领导力能够支持并强化 至关重要的技术和流程工作。它由5个因素组成：愿景、鼓\n\n舞人心的沟通、智力激发、支持和认可他人", "metadata": {}}, {"content": "，详见第3章和第5章。\n\n23.工作满意度。为员工提供使工作变得有意义的资源和工具。 这种对工作满意度的度量侧重于考察员工能否承担有挑战性 和有意义的工作，并有权展示自己的技能和判断力。这也考\n\n察了员工能否获得做好工作所需的资源和工具，详见第10章。\n\n24.变革型领导力。在 DevOps中，变革型领导力能够支持并强化 至关重要的技术和流程工作。它由5个因素组成：愿景、鼓\n\n舞人心的沟通、智力激发、支持和认可他人，详见第11章。\n\n188   |  加速：企业数字化转型的24项核心能力\n\n图A-1展示了我们的总体研究计划。\n\n精益产品管理\n\n小批量工作\n\n团队实验\n\n收集并采纳用户反馈\n\n可视化管理\n\n变革型领导力\n\n愿景\n\n鼓舞人心的沟通\n\n智力激发\n\n支持\n\n认可他人\n\n精益管理\n\n限制WIP\n\n可视化让工作流变得清晰\n\n实现轻量级变更管理流程\n\n测试自动化\n\n部署自动化\n\n主干开发\n\n安全左移\n\n松耦合的架构\n\n授权团队\n\n持续集成\n\n版本控制\n\n测试数据管理\n\n监控\n\n主动通知\n\n图 A-1  总体研究计划\n\n附录A   驱动改进的能力|  189\n\nWestrum\n\n组织文化\n\n工作满意度\n\n组织绩效\n\n软件交\n\n付绩效\n\n非商业绩效\n\n身份认同感\n\n缓解倦怠感\n\n持续交付\n\n缓解部\n\n署之痛\n\n避免返工\n\n附录 B\n\n统计数据\n\n想知道我们从统计学的角度有什么发现吗?本附录按类别罗列\n\n了全部发现。\n\n以下是友情提示。\n\n相关性反映了两个变量的变化有多紧密，但它并不能说明一个变 量的变化预示或导致另一个变量的变化。两个变量一起变化有时可能\n\n由第三个变量所致，有时可能只是随机的。\n\n统计预测关注的是一个构念对另一个构念的影响。具体来说，我 们使用了推理预测，这是当今商业研究和技术研究最常用的分析类型 之一。它帮助我们理解人力资源政策、组织行为和动机的影响，并度 量技术对用户满意度、团队效率和组织绩效的影响。在纯实验设计不 可行的情况下，我们采用了推论式设计，并首选现场实验。举例来说， 如果数据是从错综复杂的商业环境中收集的，而不是来自无菌的实验\n\n室环境，那么公司不会牺牲利润来适应由研究团队定义的控制组。用\n\n附录B  统计数据  |  191\n\n于检验预测的分析方法包括简单线性回归和偏最小二乘回归，详见\n\n附录C。\n\n组织绩效\n\n高绩效组织实现组织绩效目标的概率是低绩效组织的两倍。这些\n\n目标涉及盈利能力、生产力、市场份额和客户数量。\n\n高绩效组织实现非商业绩效目标的概率是低绩效组织的两倍。这 些目标涉及产品或服务的数量和质量、运营效率、客户满意度，以及\n\n实现组织目标或完成使命。\n\n在完成2014年最初的数据收集工作之后，我们进行了后续调研。 在这个过程中，我们收集了股票行情数据，并对来自355 家公司的  1000 多名受访者的回答进行了额外的分析(这些公司都是自愿参加  的)。对于在上市公司工作的人，我们发现了以下情况(由于数据集  不够大，因此我们在后几年中没有重复这项分析):与低绩效组织相\n\n比，高绩效组织在过去3年里的市值增长高出50%。\n\n软件交付绩效\n\n软件交付绩效的4个度量指标分别是前置时间、部署频率、平均 恢复时间以及变更失败率。它们都是良好的分类器。我们在分析过程\n\n中确定的组(高绩效、中等绩效、低绩效)在这4个度量维度上的表\n\n192   |  加速：企业数字化转型的24项核心能力\n\n现都有显著差异。\n\n我们对高绩效企业、中等绩效企业和低绩效企业的分析表明， 提高绩效并不妨碍实现更快的节奏和更高的稳定性。二者可以同时\n\n实现。\n\n软件交付绩效能够预测组织绩效和非商业绩效。\n\n有关软件交付绩效的构念结合了3个度量指标：前置时间、部署 频率和平均恢复时间。尽管与该构念高度相关，但变更失败率不包含\n\n在内。\n\n部署频率与持续交付和版本控制的综合使用高度相关。\n\n前置时间与版本控制和自动化测试高度相关。\n\n平均恢复时间与版本控制和监控高度相关。\n\n软件交付绩效与组织在 DevOps中的投入相关。\n\n软件交付绩效与部署痛苦程度呈负相关。代码部署起来越痛苦，\n\n软件交付绩效和文化就越差。\n\n质量\n\n计划外的工作和返工：\n\n附录 B 统计数据 |  193\n\n口高绩效团队称，他们将49%的时间花在新工作上，而将21%\n\n的时间花在计划外的工作或返工上；\n\n口低绩效团队将38%的时间花在新工作上，而将27%的时间花在\n\n计划外的工作或返工上；\n\n口我们收集的返工数据符合J曲线：中等绩效团队比低绩效团队\n\n花了更多的时间在计划外的工作或返工上(32%的时间)。\n\n手动工作：\n\n口在统计学显著性水平上，高绩效团队在所有实践(配置管理、\n\n测试、部署、变更审批流程)中的手动工作量最小；\n\n口我们再次看到了J 曲线：在部署和变更审批流程方面，中等绩 效团队比低绩效团队做了更多的手动工作，二者的差异具有统\n\n计显著性。\n\n表 B-1列出了高绩效团队、中等绩效团队和低绩效团队的手动工\n\n作百分比。\n\n表 B-1  手动工作百分比\n\n手动工作          高绩效团队        中等绩效团队        低绩效团队\n\n配置管理                    28%                 47%                  46%\n\n测试                         35%                  51%                 49%*\n\n部署                         26%                  47%                  43%\n\n变更审批流程                48%                  67%                  59%\n\n在配置管理和测试方面，中等绩效团队与低绩效团队之间的统计学差异甚微。\n\n194   |  加速：企业数字化转型的24项核心能力\n\n倦怠和部署之痛\n\n部署之痛与软件交付绩效和 Westrum组织文化呈负相关。\n\n与职业倦怠关系最密切的5个因素分别是：Westrum组织文化(负 相关)、领导者(负相关)、组织投入(负相关)、组织绩效(负相关)\n\n和部署之痛(正相关)。\n\n技术能力\n\n主干开发：\n\n口高绩效团队拥有最短的集成时间和分支生命周期，通常持续数\n\n小时或一天；\n\n口低绩效团队拥有最长的集成时间和分支生命周期，通常持续几\n\n天或几周。\n\n技术实践可以预测持续交付、Westrum 组织文化、身份认同感、 工作满意度、软件交付绩效、更少的倦怠、更少的部署之痛和更少的\n\n返工时间。\n\n与低绩效团队相比，高绩效团队花在补救安全问题上的时间少\n\n了50%。\n\n附录 B   统计数据  |  195\n\n架构能力\n\n特定的系统类型(例如业务系统或记录系统)与软件交付绩效没\n\n有相关性。\n\n低绩效团队更有可能说他们正在构建的软件或参与交互的服务\n\n是“由另一家公司(例如外包合作伙伴)开发的定制软件”。\n\n低绩效团队构建大型主机系统的可能性更大。\n\n与大型主机系统集成，这在统计学意义上并不是重要的绩效指标。\n\n对于中等绩效团队和高绩效团队来说，系统类型与软件交付绩效\n\n之间没有显著的相关性。\n\n松耦合、封装良好的架构能够驱动IT 绩效。2017年的数据表明，\n\n这种架构对持续交付的贡献最大。\n\n在那些每天至少部署一次的开发团队中，随着团队成员的数量增\n\n加，我们发现：\n\n口低绩效团队的部署频率降低；\n\n口中等绩效团队的部署频率保持稳定；\n\n口高绩效团队的部署频率明显提高。\n\n高绩效团队更有可能对以下陈述做出积极回应：\n\n196   |  加速： 企业数字化转型的24项核心能力\n\n口不需要集成环境就能完成大多数测试；\n\n口可以独立部署或发布应用程序，而无须依赖其他应用程序或服务；\n\n口使用微服务架构的自定义软件。\n\n在团队所构建或集成的架构类型方面", "metadata": {}}, {"content": "，随着团队成员的数量增\n\n加，我们发现：\n\n口低绩效团队的部署频率降低；\n\n口中等绩效团队的部署频率保持稳定；\n\n口高绩效团队的部署频率明显提高。\n\n高绩效团队更有可能对以下陈述做出积极回应：\n\n196   |  加速： 企业数字化转型的24项核心能力\n\n口不需要集成环境就能完成大多数测试；\n\n口可以独立部署或发布应用程序，而无须依赖其他应用程序或服务；\n\n口使用微服务架构的自定义软件。\n\n在团队所构建或集成的架构类型方面，我们没有发现显著的差异。\n\n精益管理能力\n\n精益管理能力可以预测 Westrum组织文化、工作满意度、软件交\n\n付绩效和更少的工作倦怠。\n\n变更审批：\n\n口变更顾问委员会与软件交付绩效呈负相关；\n\n口只批准高风险的变更与软件交付绩效完全无关；\n\n口没有采用变更审批流程或采用同行评审的团队获得了更高的\n\n软件交付绩效；\n\n口轻量级的变更审批流程有助于提高软件交付绩效。\n\n精益产品开发能力\n\n实验性的产品开发方法与持续交付实践密切相关。\n\n精益产品开发能力可以预测 Westrum组织文化、软件交付绩效、\n\n组织绩效和更少的倦怠。\n\n附录 B  统计数据  |  197\n\n组织文化能力\n\n以下度量指标与文化密切相关：\n\n口组织对 DevOps的投入；\n\n口团队领导者的经验和效率；\n\n口持续交付能力；\n\n口开发团队、运维团队和信息安全团队实现双赢的能力；\n\n口组织绩效；\n\n口部署之痛；\n\n口精益管理实践。\n\nWestrum组织文化有助于提高软件交付绩效、组织绩效和工作满\n\n意度。\n\nWestrum组织文化与部署之痛呈负相关。代码部署起来越痛苦，\n\n企业文化就越差。\n\n身份认同感、eNPS 和工作满意度\n\n身份认同感有助于提高组织绩效。\n\n通过员工净推荐值 (eNPS)  来度量，高绩效企业有更高的员工\n\n忠诚度。\n\n198   |  加速：企业数字化转型的24项核心能力\n\neNPS 与以下构念显著相关。\n\n口组织能够在多大程度上收集用户反馈并将其作为产品和特性\n\n设计的依据?\n\n口团队能够在多大程度上了解“从开发到交付给用户”这一完整\n\n的产品流程?\n\n口员工在多大程度上与其组织的价值观和目标保持一致，并且愿\n\n意为组织的成功付出努力?\n\n高绩效团队的员工认为其所在组织不错的概率是其他团队的2.2倍。 高绩效团队的员工认为其所在团队不错的概率是其他团队的1.8倍。\n\n工作满意度可以预测组织绩效。\n\n领导力\n\n我们观察到，高绩效团队、中等绩效团队和低绩效团队的领导者\n\n具有截然不同的特征。\n\n口高绩效团队称，他们的领导者在以下所有方面都表现突出：愿\n\n景、鼓舞人心的沟通、智力激发、支持和认可他人。\n\n口低绩效团队称，他们的领导者在上述5个方面的能力最弱。\n\n口这些差异具有统计显著性。\n\n变革型领导力与软件交付绩效高度相关。\n\n附录 B  统计数据 |  199\n\n变革型领导力与eNPS 高度相关。\n\n在变革型领导力方面排名前10%的团队大多是高绩效团队。\n\n领导力有益于精益产品开发能力(小批量工作、团队实验、收集 和采纳用户反馈)和技术实践(测试自动化、部署自动化、主干开发、\n\n安全左移、松耦合的架构、授权团队、持续集成)。\n\n多样性\n\n对于女性在所有受访者中的占比，2015年为5%,2016年为6%,\n\n2017年为6.5%。\n\n33%的受访者表示，所在团队中没有女性。\n\n56%的受访者表示，所在团队中女性不到10%。\n\n81%的受访者表示，所在团队中女性不到25%。\n\n性别\n\n口91%为男性。\n\n口6%为女性。\n\n口3%未表明性别。\n\n是否属于少数族裔?\n\n口77%的受访者回答否。\n\n200  |  加速：企业数字化转型的24项核心能力\n\n口12%的受访者回答是。\n\n口11%的受访者没有回答或选择 N/A。\n\n其他\n\n对 DevOps的投入与软件交付绩效高度相关。\n\n四年间，在DevOps团队中工作的人员比例有所增长：\n\n口2014年占16%;\n\n口2015年占19%;\n\n口2016年占22%;\n\n口2017年占27%。\n\nDevOps 覆盖所有操作系统。我们在2015年首次提出这个问题，\n\n并得到以下反馈：78%的受访者广泛涉及1～4种操作系统，最受欢\n\n迎的是 Enterprise  Linux 、Windows  2012 、Windows  2008,   以及\n\nDebian/Ubuntu Linux。\n\n图 B-1展示了2017年的 Firmographics数据。我们注意到，在高 绩效组、中等绩效组和低绩效组中，既有大型企业，也有创业公司。 金融、医疗保健和电信等受高度监管的行业也都存在高绩效企业、中 等绩效企业和低绩效企业。重点不是你属于哪个行业或规模有多大， 即使是受高度监管的大型企业，也能够开发和交付高性能的软件，从\n\n而凭借这些能力向客户和组织交付价值。\n\n附录B  统计数据 |  201\n\n员工人数\n\n服务器数量\n\n25% 7% 9% 10000+ 5000~9000 2000~4999\n\n500~1999\n\n100~499\n\n14% 4% 2%E 图 B-1 20-99 10~19 5~10 不清楚 2017 年 的 Firmographics\n\n5% 100000+ 3% 50000~99000 6% 10000~49999 6% 5000~9999 9% 2000~4999\n\n18%              500~1999\n\n20%              100~499\n\n20%              少于100\n\n13%              不清楚\n\n数据：行业、组织规模与服务器数量\n\n附录C\n\n本书所用的统计方法\n\n本附录概述了我们在研究中所用的统计方法，旨在作为参考， 而不是详细的统计学材料。我们在必要之处列出了相关的学术参考\n\n文献。\n\n本附录大致遵循我们的调研设计和分析的路径。\n\n调研准备\n\n一旦确定了每年要检验的构念和假设，我们便通过设计调研工具\n\n来启动调研流程”。\n\n我们尽可能使用经过验证的度量指标，例如组织绩效和非商业 绩效9。在自创度量方法时，我们采用大家普遍接受的步骤(借鉴自 Don A.Dillman的方法(471)来开发调研工具。\n\n① 我们每年通过研究文献、回顾之前的研究成果和进行有益的辩论来确定研究模型。\n\n附录C  本书所用的统计方法| 203\n\n数据收集\n\n帶着研究设计问题和调研问题，我们开始收集数据。\n\n我们使用雪球抽样来收集数据，这是一种非概率技术。关于为什 么这种技术适合于我们的研究，我们如何收集样本，以及我们用来突\n\n破其限制的策略，请参阅第15章。\n\n偏差检验\n\n一旦有了数据，我们就开始检验偏差。\n\n卡方检验用于检验分类变量(例如性别)的显著性差异。\n\nT 检验用于检验變量的显著性差异，这些變量取标度值(例如利\n\n克特值)。我们用它来检验早期受访者和晚期受访者之间的差异。\n\n共同方法偏差 (CMB)   或共同方法變异 (CMV)   涉及以下两种\n\n检验。\n\n口哈曼單因素检验[48]用于检验單个因素是否对所有项都有显著\n\n影响。\n\n口标签變量检验[49用于检验所有最初的显著关联关系在调整了\n\n构念中第二低的正相关关系之后是否仍然显著。\n\n204   |  加速：企业数字化转型的24项核心能力\n\n通过检验，我们没有在早期受访者和晚期受访者之间发现差异。\n\n我们的样本似乎不存在共同方法偏差。\n\n关系检验\n\n根据最佳实践和公认的研究，我们分两个阶段进行分析50]。在第 一阶段，我们分析度量项，以验证和形成潜在构念(详见第13章)。\n\n这帮助我们确定要在第二阶段纳入的构念。\n\n检验度量模型\n\n主成分分析 (PCA) 帮助确认聚合效度。该方法用于解释一组变\n\n量的方差-协方差结构。\n\n口 PCA采用方差最大化旋转", "metadata": {}}, {"content": "，我们分两个阶段进行分析50]。在第 一阶段，我们分析度量项，以验证和形成潜在构念(详见第13章)。\n\n这帮助我们确定要在第二阶段纳入的构念。\n\n检验度量模型\n\n主成分分析 (PCA) 帮助确认聚合效度。该方法用于解释一组变\n\n量的方差-协方差结构。\n\n口 PCA采用方差最大化旋转，并且分别分析自变量和因变量5I。 口PCA 分为两类：验证性因素分析 (CFA)  和探索性因素分析 \t(EFA)。在几乎所有情况下，我们采用了 EFA。之所以选择 EFA, 是因为它更严格，用于揭示变量的底层结构，而不强加\n\n或暗示一个先验结构。(一个显著的例外是，我们使用了CFA\n\n来确认变革型领导力的有效性。之所以选择 CFA, 是因为相关 项已被文献充分研究。)各项在其构念上的负荷应该大于0.60,\n\n而且不应交叉负载。\n\n平均方差提取值 (AVE) 帮助确认聚合效度和辨别效度。AVE 度\n\n量的是一个构念所捕获的方差量与由于测量误差而引起的方差量之\n\n附录C  本书所用的统计方法  |  205\n\n间的关系。\n\n口要表示聚合效度， AVE必须大于0.50。\n\n口要表示辨别效度，AVE的平方根必须大于各构念之间的任何交\n\n叉对角关联度(当将AVE的平方根放在相关表的对角线上时)。\n\n相关性检验。当构念之间的相关系数小于0.85时，该检验有助于\n\n确认辨别效度121。我们使用了皮尔逊相关系数(详见下文)。\n\n可靠性检验\n\n口克龙巴赫系数度量内部一致性。可接受的边界值为0.7053]。所 有构念都满足这个条件或 CR 的条件(详见下文)。值得注意 的是，克龙巴赫系数对小尺度(条目数量较少的构念)是有偏\n\n倚的，因此我们同时使用克龙巴赫系数和CR 来检验可靠性。\n\n口组合信度 (CR) 度量内部一致性和聚合效度。CR 的可接受边 界值为0.70l⁵4]。所有构念要么满足这个边界值，要么满足克龙\n\n巴赫系数的边界值(详见上文)。\n\n针对某一个构念，上述所有检验都必须通过，才能用于进一步的 分析。如果是这样，我们就说这个构念“表现出良好的心理测量特性”,\n\n并继续分析。我们的研究所涉及的所有构念都通过了这些检验。\n\n检验关系(相关性和预测)\n\n在第二阶段，我们采用已经通过第一阶段检验的度量项来检验假\n\n206   |  加速：企业数字化转型的24项核心能力\n\n设。在这个阶段，我们使用了统计检验。如第12章所述，我们对推 理预测进行了检验，这意味着所有通过检验的假设都得到了其他理论 和文献的支持。如果没有理论表明存在预测关系，那么我们仅报告相\n\n关性。\n\n相关表示两个或多个构念之间存在相互关系或连接。我们在研究 中使用了皮尔逊相关系数，这是当今商业环境中最常用的相关系数。 皮尔逊相关系数记为r, 它度量的是两个变量之间的线性关系的强度。 皮尔逊相关系数通常被简称为相关系数，取值范围是-1到1。如果两 个变量完全线性相关，也就是正好向同一方向运动，那么r=1。 如果\n\n它们向相反的方向运动，则r=-1。 如果它们完全不相关，那么r=0。\n\n回归用于检验预测关系。它分为多种类型。在本研究中，我们使\n\n用了以下两种类型的回归。\n\n口偏最小二乘回归 (PLS) 用于检验预测关系，我们在2015年~ 2017年使用了PLS。它是一种基于相关关系的回归方法，我们\n\n选择它进行分析有以下几个原因59]。\n\n口该方法优化了对结果变量的预测。由于我们希望研究结果对软\n\n件从业者有益，因此这对我们很重要。\n\n口PLS不需要假设多元正态性。换句话说，这种方法不要求数据\n\n是正态分布的。\n\n口PLS 是探索性研究的理想选择。我们所做的正是探索性研究!\n\n口线性回归也用于检验预测关系，我们在2014年使用了线性回归。\n\n附录 C 本书所用的统计方法  |  207\n\n分类检验\n\n分类检验可以在任何时候进行，因为它们不依赖于构念。\n\n聚类分析用于针对软件交付绩效开发由数据驱动的分类方法，以 帮助我们区分高绩效、中等绩效和低绩效的团队。在聚类分析中，每 个测量值都被放在单独的维度上。聚类算法试图最小化聚类簇中所有 成员之间的距离，并且最大化聚类簇之间的距离。我们采用了5种聚 类分析方法： Joe   H.Ward  的方法50、组间连接、组内连接、质心和 中位数。此外，我们对聚类结果进行了如下比较： 一、融合系数的变 化；二、每个聚类簇中的个体数(不包括个体数少的聚类簇);三、 单变量F 统计量157]。基于这些标准，使用Joe   H.Ward 的方法得到的\n\n解决方案表现最佳，因此它被选中。此外，还有以下原因。\n\n口它具有强大的解释力(让我们了解聚类簇中的父子关系)。\n\n口从理论角度和行业角度来说，我们没有任何理由预设聚类簇\n\n数。也就是说，我们希望用数据来确定应该拥有的聚类簇数。\n\n口我们的数据集规模不算太大 (Ward  的方法不适合超大型数据\n\n集)。\n\n方差分析 (ANOV A)。 为了解释聚类簇，我们使用了图基检验对 软件交付绩效结果的平均值(涉及前置时间、部署频率、平均恢复时 间以及变更失败率)进行了事后比较。之所以选择图基检验，是因为\n\n它不要求正态性。除了图基检验，邓肯多重范围检验也被用来检验显\n\n208  |  加速：企业数字化转型的24项核心能力\n\n著性差异。在所有情况下，结果都是相同的58]。我们使用每个软件交 付绩效變量对聚类簇进行两两比较，并将聚类簇分成不同的组，其中 该變量的平均值在组内没有显著性差异，但是在组间有显著性差异 (p<0.10) 。 除了2016年(详见第2章的“意料之外”部分),在其 他所有年份中，高绩效企业在所有变量上的表现都是最好的，低绩效 企业在所有變量上的表现都是最差的", "metadata": {}}, {"content": "，而中等绩效企业在所有變量上\n\n的表现都处于中等水平——所有这些结果都具有统计显著性", "metadata": {}}, {"content": "。\n\n参考文献\n\n[1]M Bobak,Z Skodova,M Marmot.Beer and Obesity:A Cross-Sectional Study.European   Journal   of   Clinical    Nutrition    57,no.10,2003:\n\n1250-1253.\n\n[2]JV  Johnson,E  M  Hall.Job  Strain,Work  Place  Social  Support,and Cardiovascular  Disease:A  Cross-Sectional   Study   of  a  Random Sample  of the  Swedish  Working  Population.American  Journal  of\n\nPublic Health 78,no.10,1988:1336-1342.\n\n[3]TP Alloway,R  G  Alloway.Working  Memory  across  the  Lifespan:A Cross-Sectional Approach.Journal of Cognitive Psychology 25,no.1,\n\n2013:84-93.\n\n[4]R  Stroud,E  Klavens,A  Kinch,et  al.DevOps  Heat  Map  2017.\n\n[5]E   Klavens,R    Stroud,E   Oehrlich,et    al.A   Dangerous    Disconnect:\n\nExecutives Overestimate DevOps Maturity.Forrester,2017.\n\n210   | 加速：企业数字化转型的24项核心能力\n\n[6]G   Kim,P   Debois,J   Willis,et   al.The   DevOps   Handbook:How   to Create World-Class Agility,Reliability,and Security in Technology\n\nOrganizations.IT  Revolution,2016.\n\n[7]N  Forsgren,J  Humble.DevOps:Profiles  in  ITSM  Performance  and Contributing  Factors.In  the  Proceedings  of  the  Western  Decision\n\nSciences  Institute  (WDSI)2016,Las  Vegas,2016.\n\n[8]S  K  Widener.An  Empirical  Analysis  of  the   Levers   of  Control Framework.Accounting,Organizations   and   Society    32,no.7,2007:\n\n757-788.\n\n[9]K S Cavalluzzo,C D Ittner.Implementing Performance Measurement Innovations.Accounting,Organizations   and   Society   29,no.3,2004:\n\n243-267.\n\n[10]S Wardley.An Introduction to Wardley(Value Chain)Mapping,2015.\n\n[11]E   H   Schein.Organizational   Culture   and   Leadership.Jossey-Bass,\n\n1985.\n\n[12]P Bansal.From Issues to Actions:The Importance of Individual Concerns and Organizational Values in Responding to Natural Environmental\n\nIssues.Organization    Science    14,no.5,2003:510-527.\n\n[13]A M Pettigrew.On Studying Organizational Cultures.Administrative\n\nScience   Quarterly    24,no.4,1979:570-581.\n\n参考文献  |  211\n\n[14]R  Westrum.The   Study  of  Information  Flow:A  Personal  Journey.\n\nSafety  Science  67,2014:58-63.\n\n[15]M Schwartz.The Art of Business Value.IT Revolution,2016.\n\n[16]Google.The Five Keys to a Successful Google Team.2015.\n\n[17]C  Perrow.Normal  Accidents:Living  with  High-Risk  Technologies.\n\nPrinceton University Press,2011.\n\n[18]J  Shook.How  to  Change  a  Culture:Lessons  from  NUMMI.MIT\n\nSloan  Management  Review  51,no.2,2010:63.\n\n[19]J     Humble,D     Farley.Continuous      Delivery:Reliable      Software Releases  through  Build,Test,and  Deployment  Automation.Pearson\n\nEducation,2010.\n\n[20]WE  Deming.Out  of the  Crisis.MIT  Press,2000.\n\n[21]K  Behr,G  Kim,G   Spafford.The   Visible   Ops  Handbook:Starting  ITIL in 4 Practical Steps.Information Technology Process Institute,\n\n2004.\n\n[22]B  Foote,J  Yoder.Big  Ball  of  Mud.Pattern  Languages  of  Program\n\nDesign 4,1997:654-692.\n\n[23]M  E  Conway.How  Do  Committees  Invent?Datamation   14,no.5,\n\n1968:28-31.\n\n212   | 加速：企业数字化转型的24项核心能力\n\n[24]N Forsgren,ADurcikova,P F Clay,et al.The Integrated User Satisfaction Model:Assessing Information Quality and System Quality as Second-\n\nOrder Constructs in System Administration.Communications of the\n\nAssociation  for  Information  Systems  38,2016:803-839.\n\n[25]S Yegge.Stevey's  Google Platform Rant.2011.\n\n[26]」Wickett.Attacking Pipelines—Security Meets Continuous Delivery.\n\n2014.\n\n[27]S Blank.The Four  Steps  to  the  Epiphany:Successful  Strategies  for\n\nProducts That Win.BookBaby,2013.\n\n[28]JGoh,J Pfeffer,S A Zenios.Workplace Stressors &Health Outcomes: Health Policy for the Workplace.Behavioral Science &Policy  1,no.\n\n1,2015:43-52.\n\n[29]T Chandola,E Brunner,M Marmot.Chronic  Stress  at  Work and the Metabolic   Syndrome:Prospective   Study.BMJ   332,no.7540,2006:\n\n521-525.\n\n[30]C  Maslach.Understanding  Burnout.2014.\n\n[31]D Azzarello,F Debruyne,L Mottura.The  Chemistry  of Enthusiasm.\n\n2012.\n\n[32]FF Reichheld.The One Number You Need to Grow.Harvard Business\n\nReview 81,no.12,2003:46-55.\n\n参考文献 |  213\n\n[33]AKankanhalli,B Tan,K-K Wei.Contributing Knowledge to Electronic Knowledge Repositories:An Empirical Investigation.MIS Quarterly,\n\n2005:113-143.\n\n[34]JG Smith,J B Lindsay.Beyond Inclusion:Worklife Interconnectedness,\n\nEnergy,and Resilience in Organizations.Springer,2014.\n\n[35]SAGE.SAGE Annual  Salary  Survey  for  2007.USENIX,2008. [36]SAGE.SAGE Annual  Salary  Survey  for  2011.USENIX,2012.\n\n[37]JMcGregor.More Women  at  the  Top,Higher  Returns.2014.\n\n[38]B Covert.Companies with Female CEOs Beat the Stock Market.2014.\n\n[39]B Covert.Returns for Women Hedge Fund Managers Beat Everyone\n\nElse's.2014.\n\n[40]A Woolley,T Malone.Defend Your Research:What Makes  a  Team\n\nSmarter?More Women.Harvard Business Review,2011.\n\n[41]S  J  Leslie,A  Cimpian,M  Meyer,et  al.Expectations  of  Brilliance Underlie Gender Distributions across Academic Disciplines.Science\n\n347,no.6219,2015:262-265.\n\n[42]A E Rafferty,M A Griffin.Dimensions of Transformational Leadership: Conceptual and Empirical Extensions.The Leadership Quarterly 15,\n\nno.3,2004:329-354.\n\n214  |  加速：企业数字化转型的24项核心能力\n\n[43]J  Leek.Six  Types  of  Analyses  Every  Data  Scientist  Should  Know.\n\n2013.\n\n[44]S Elliot.DevOps and the Cost of Downtime:Fortune  1000 Best Practice\n\nMetrics   Quantified.International    Data   Corporation.2014.\n\n[45]J  King,R  Magoulas.2016  Data  Science  Salary  Survey:Tools,Trends,\n\nWhat  Pays  (and  What  Doesn't)for  Data  Professionals.2016.\n\n[46]R  East,K  Hammond,W  Lomax.Measuring  the  Impact  of Positive  and Negative Word of Mouth on Brand Purchase Probability.International\n\nJournal   of  Research   in   Marketing   25,no.3,2008:215-224.\n\n[47]D  A  Dillman.Mail  and  Telephone  Surveys.John  Wiley  &Sons,1978.\n\n[48]P  M  Podsakoff,D  R  Dalton.Research  Methodology  in  Organizational\n\nStudies.Journal    of    Management     13,no.2,1987:419-441.\n\n[49]MK  Lindell,D  J  Whitney.Accounting  for  Common  Method  Variance in  Cross-Sectional  Research  Designs.Journal  of  Applied  Psychology\n\n86,no.1,2001:114-121.\n\n[50]D   Gefen,D   Straub.A   Practical   Guide   to   Factorial   Validity   Using PLS-Graph:Tutorial    and   Annotated    Example.Communications    of\n\nthe  Association   for  Information  Systems   16,2005:91-109.\n\n[51]D   Straub,M   C   Boudreau,D    Gefen.Validation    Guidelines    for   IS\n\nPositivist  Research.Communications  of  the   AIS   13,2004:380-427.\n\n参考文献  |215\n\n[52]T  A  Brown.Confirmatory  Factor  Analysis  for  Applied  Research.\n\nGuilford  Press,2006.\n\n[53]JC   Nunnally.Psychometric   Theory.McGraw-Hill,1978.\n\n[54]WWChin,B L Marcolin,P R Newsted.A Partial Least Squares Latent  Variable  Modeling  Approach   for  Measuring   Interaction  Effects:  Results from a Monte Carlo Simulation Study and an Electronic-Mail  Emotion/Adoption   Study.Information   Systems   Research   14,no.2,\n\n2003:189-217.\n\n[55]W  W  Chin.How  to  Write  Up  and  Report  PLS  Analyses.Springer,\n\n2010.\n\n[56]J H Ward.Hierarchical Grouping to Optimize an Objective Function.\n\nJournal of the American Statistical Association 58,1963:236-244.\n\n[57]D    Ulrich,B     McKelvey.General     Organizational     Classification.\n\nOrganization   Science   1,no.1,1990:99-118.\n\n[58]JF  Hair,WC  Black,B  J  Babin,et  al.Multivariate  Data  Analysis,2nd\n\ned.Pearson  Prentice  Hall,2006.\n\n致   谢\n\n本书诞生于DORA和 Puppet 在《DevOps状态报告》项目上的合 作", "metadata": {}}, {"content": "。因此", "metadata": {}}, {"content": "，我们首先要感谢 Puppet 团队，特别是来自 Puppet 团队的 主要贡献者 Alanna Brown 和 Nigel Kersten。我们还要感谢 Aliza Earnshaw多年来精心编辑《DevOps状态报告》。如果没有她的细心审\n\n校，报告将达不到现在的高度。\n\n我们还想感谢几位帮助我们为报告提出假设的朋友。从2016年 开始， Steven Bell和 Karen Whitley Bell 鼓励我们研究精益产品管理。 感谢他们花时间与团队一起研究和讨论价值流理论和客户反馈的可 视化。从2017年开始，Neal Ford 、Martin Fowler和 Mik Kersten 帮助 我们确定了度量架构的指标， Amy Jo Kim和 Mary Poppendieck 则在\n\n团队实验方面提供了帮助。\n\n多位专家慷慨地贡献了他们的时间来审阅本书的初稿。我们要向\n\nRyn Daniels 、Jennifer Davis、Martin Fowler、Gary Gruver、Scott Hain、\n\n致  谢  | 217\n\nDmitry Kirsanov 、Courtney Kissler 、Bridget Kromhout 、Karen Martin,\n\nDan North和 Tom Poppendieck表示深深的感谢。\n\n我们还要感谢IT Revolution团队的 Anna Noak和 Todd Sattersten 对本书的支持。最后，感谢 Dmitry Kirsanov和 Alina Kirsanova 以严\n\n谨的态度完成了本书的编辑、校对、索引和排版工作。谢谢你们!\n\n来自 Nicole\n\n首先，非常感谢我的合著者和合作者，没有他们的支持，这项工 作就不可能完成。当我加入团队并指出你们的错误时(我希望自己当 时还算礼貌),你们并没有把我踢出这个项目。Jez,   我已经学会了耐 心和同理心，也重拾了对技术的热爱。Gene,  你的无限热情和对“再 做一次分析”的坚持确保了我们的研究成果令人兴奋且具有说服力。 本书所用的数据来自《DevOps 状态报告》,该报告是与 Puppet 公司 合作完成的。感谢来自 Puppet团队的 Alanna Brown 和 Nigel Kersten,  感谢你们支持并帮助我们精心撰写了一个能引起读者共鸣的故事。当 然还要感谢 Aliza Earnshaw,  你的技艺远远超出了编辑范畴，是你把 我的工作提升了一个层次。我很高兴我们可以无休止地讨论问题，直 到达成共识。你用“一丝不苟地严谨”来评价我，这是对我最好的 赞美。\n\n我要特别感谢我的父亲，是他给了我一颗好奇心， 一种追求卓越\n\n的欲望，以及让瞧不起我的人目瞪口呆的能力。这些年来，这一切都\n\n218   |  加速：企业数字化转型的24项核心能力\n\n派上了用场，尤其是作为在科技行业里打拼的女性。爸爸对不起，您 错过了派对。非常感谢我的母亲一直以来对我的鼓励和支持。不管我\n\n有什么疯狂的计划，她总是相信我。我爱你们!\n\n和往常一样，我要向 Xavier Velasquez 致以最衷心的感谢。我最 好的朋友和意见咨询人，是你陪伴我走完了整个旅程——从受到一项 奇怪的可用性研究的启发，到我的博士项目的一个艰难的转折点，再 到自荐加入《DevOps 状态报告》团队，最终完成本书的写作。无论\n\n是在生活中还是在技术上，你的支持、鼓励和智慧都是无价的。\n\nSuzie!  我怎么会如此幸运呢?一位导师把宝押在博士生身上， 这个博士生声称研究技术人员和他们所用的工具及所处的环境非常 重要，也与博士项目相关。(做那些顶尖的博士项目的人会明白，这 确实有风险。)10年后，我的研究方向已经发展成为 DevOps。非常 感谢您，Suzanne  Weisband,感谢您相信我的直觉，并在早年间指导\n\n我的研究。您曾经是我最好的导师和“啦啦队长”,现在是我的朋友。\n\n感谢我的博士后导师和经常与我参加同行评审的 Alexandra Durcikova 和 Rajiv Sabherwal。你们还冒险在一个新的环境中与我一 起进行研究，我从与你们的合作中学到了很多。正是通过与你们合作， 我的方法才变得更好，我的论点才更合理，我看待问题空间的能力才\n\n更强。谢谢你们!\n\n非常感谢 DevOps  社区，大家欢迎并接受了一位疯狂的研究员，\n\n还参与了研究并分享了自己的故事。我的工作因为你们而变得更好，\n\n致  谢 | 219\n\n更重要的是，我因为你们而变得更好。爱你们!\n\n最后，感谢健怡可乐帮我度过了漫长的写作和编辑时光。\n\n来自 Jez\n\n非常感谢我的妻子兼挚友 Rani 支持我参与本书的写作。虽然我 之前已经承诺不再写书，但她仍然给予了支持。你是最棒的，我爱你! 感谢我的女儿们为这个过程带来了如此多的乐趣，感谢我的父母在我\n\n还是孩子的时候支持我玩计算机。\n\nNicole做了行业调查，即Puppet 的《DevOps 状态报告》,并把它 变成了一个科学工具。我们的行业一直在努力将科学应用到软件产品 和服务的开发和运维中。支持软件交付的社会系统过于复杂，以至于 无法进行随机、受控的实验。回想起来，解决方案很明确：使用行为 科学来研究这些系统。Nicole 谨慎、彻底的开拓方式产生了令人难以 置信的结果，其意义之大怎么说也不过分。能成为她的合作伙伴是我\n\n的荣幸，我学到了很多。Nicole,   谢谢你!\n\n我参与这个项目的原因是 Gene, 他在2012 年邀请我加入了 《DevOps状态报告》团队。Gene,  你对这个项目的热情和对我的假设 和分析提出的挑战(没错，我说的就是主干开发),使这一过程变得\n\n更加严谨，并且获得了很高的回报。\n\n我还要感谢 Puppet 团队，他们为这个项目做出了巨大贡献。没\n\n220   |  加速：企业数字化转型的24项核心能力\n\n有他们，这个项目就不会存在，尤其是 Alanna Brown、Nigel Kersten\n\n和 Aliza Earnshaw。谢谢你们!\n\n来自 Gene\n\n我很感激 Margueritte, 我爱了12年的妻子，还有我的儿子 Reid、 Parker 和 Grant。我知道，如果没有他们的支持和包容，没有他们对 交稿期限、深夜加班和24小时短信的容忍，我就无法从事我热爱的  工作。当然还有我的父母，Ben Kim和 Gail Kim,  感谢他们在我很小\n\n的时候帮助我爱上学习。\n\nJez和 Nicole 的这项研究是我有幸参与过的最令我满意和最有启 发性的研究之一，没有比他们更好的合作者了。我真的相信这项工作 通过严格的理论构建和检验，能够帮助我们更好地定义如何改进技术\n\n工作，从而极大地促进我们的职业发展。\n\n当然，还要感谢 Puppet团队的 Alanna Brown和 Nigel Kersten,  感谢你们5年多来在《DevOps 状态报告》项目上的合作，本书的很\n\n多内容基于这个项目。\n\nACCELERATE\n\nTHE SCIENCE OF LEAN SOFTWARE AND DEVOPS\n\n加速：企业数字化转型的24项核心能力\n\n通 过DevOps  打造高绩效企业是很多实践者 追求的目标，业界不乏各种优秀实践和不 同场景的成功案例。但能做到足够有影响 力、有公信力、基于大量调研数据和科学分 析淬炼出模型的，恐怕只有这本书了。我曾 多次引用书中的精辟观点和24项核心能 力，相信这些知识的精华能进一步推进行业 向前发展。\n\n— — 张乐\n\n腾讯 DevOps  与研发效能技术专家\n\n这本书(以及其成书依据《DevOps  状态报 告》)的问世，颠覆了行业对于软件交付能 力的认知。这本书以数据统计分析为基础方 法，让IT从业者不用单凭经验和直觉，而能 以科学务实的方式提升软件交付绩效。这是 一 部在IT 行业具有里程碑意义的重要著作。\n\n—— 许 峰\n\n企业数字化转型顾问\n\n作者简介\n\n妮科尔·福斯格伦(Nicole Forsgren)\n\n微软研究院合伙人、GitHub前研发与战 略副总裁，由她创立的 DevOps研究与评 估创业公司 DORA 在2019年被谷歌公司 收购。通过 DORA, 她领导调研和出品了 DevOps行业备受瞩目的年度报告。\n\n耶斯·事布尔 (Jez Humble)\n\n被誉为“持续交付之父”,软件交付绩效 方面当之无愧的意见领柚，现就职于谷歌 公司，同时在加州大学伯克利分校任教， 讲授敏捷产品管理课程和 Java 软件设计 课程。他是《持续交付》和《DevOps实 践指南》的合著者。\n\n吉恩·金 (Gene Kim)\n\nDevOps 企业峰会创始人，研究高绩效技 术组织长达二十载，在DevOps思维的全 球化普及过程中发挥了关键作用，另著有 《凤凰项目》《独角兽项目》《DevOps 实践指南》等。\n\nREVOLUTION\n\n图灵社区： Turing.cr\n\n分类建议：计算机/软件开发\n\n人民邮电出版社网址： www.ptpress.com.cn\n\n扫码加入\n\n图灵读者群", "metadata": {}}]